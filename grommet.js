var Grommet =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var Grommet = {
	  // Components
	  Anchor: __webpack_require__(1),
	  App: __webpack_require__(4),
	  Article: __webpack_require__(98),
	  Box: __webpack_require__(51),
	  Button: __webpack_require__(101),
	  Calendar: __webpack_require__(102),
	  Carousel: __webpack_require__(195),
	  Chart: __webpack_require__(196),
	  CheckBox: __webpack_require__(198),
	  Distribution: __webpack_require__(200),
	  Document: __webpack_require__(201),
	  Donut: __webpack_require__(202),
	  Footer: __webpack_require__(203),
	  Form: __webpack_require__(204),
	  FormField: __webpack_require__(205),
	  FormFields: __webpack_require__(206),
	  Header: __webpack_require__(193),
	  Headline: __webpack_require__(207),
	  Label: __webpack_require__(208),
	  Layer: __webpack_require__(6),
	  Legend: __webpack_require__(197),
	  List: __webpack_require__(209),
	  ListItem: __webpack_require__(210),
	  Login: __webpack_require__(213),
	  LoginForm: __webpack_require__(214),
	  Map: __webpack_require__(215),
	  Menu: __webpack_require__(9),
	  Meter: __webpack_require__(216),
	  Panel: __webpack_require__(217),
	  RadioButton: __webpack_require__(218),
	  Search: __webpack_require__(219),
	  SearchInput: __webpack_require__(221),
	  Section: __webpack_require__(222),
	  Sidebar: __webpack_require__(223),
	  Split: __webpack_require__(224),
	  Table: __webpack_require__(225),
	  Tiles: __webpack_require__(226),
	  Tile: __webpack_require__(227),
	  Title: __webpack_require__(194),
	  Topology: __webpack_require__(228),
	  Object: __webpack_require__(236),
	  TBD: __webpack_require__(237),
	  Icons: {
	    Calendar: __webpack_require__(191),
	    Clear: __webpack_require__(7),
	    DragHandle: __webpack_require__(238),
	    Edit: __webpack_require__(239),
	    Facebook: __webpack_require__(240),
	    Filter: __webpack_require__(241),
	    Grommet: __webpack_require__(242),
	    Help: __webpack_require__(243),
	    Left: __webpack_require__(192),
	    LinkedIn: __webpack_require__(244),
	    Mail: __webpack_require__(245),
	    More: __webpack_require__(52),
	    Person: __webpack_require__(246),
	    Right: __webpack_require__(3),
	    Search: __webpack_require__(220),
	    SearchPlus: __webpack_require__(247),
	    Spinning: __webpack_require__(211),
	    Status: __webpack_require__(229),
	    Twitter: __webpack_require__(248),
	    World: __webpack_require__(249)
	  },
	  // Mixins
	  Mixins: {
	    KeyboardAccelerators: __webpack_require__(8),
	    ReactLayeredComponent: __webpack_require__(250)
	  },
	  // Actions
	  Actions: __webpack_require__(251),
	  // Stores
	  SessionStore: __webpack_require__(277),
	  // Utils
	  Cookies: __webpack_require__(97),
	  DOM: __webpack_require__(49),
	  Locale: __webpack_require__(96),
	  Rest: __webpack_require__(273),
	  RestWatch: __webpack_require__(278),
	  Validator: __webpack_require__(279)
	};

	module.exports = Grommet;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var RightIcon = __webpack_require__(3);

	var CLASS_ROOT = "anchor";

	var Anchor = React.createClass({
	  displayName: 'Anchor',

	  propTypes: {
	    href: React.PropTypes.string.isRequired,
	    onClick: React.PropTypes.func,
	    primary: React.PropTypes.bool
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    var icon;
	    if (this.props.primary) {
	      classes.push(CLASS_ROOT + "--primary");
	      icon = React.createElement(RightIcon, null);
	    }
	    if (!this.props.onClick) {
	      classes.push(CLASS_ROOT + "--disabled");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      'a',
	      { className: classes.join(' '),
	        href: this.props.href,
	        onClick: this.props.onClick },
	      icon,
	      this.props.children
	    );
	  }

	});

	module.exports = Anchor;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Right = React.createClass({
	  displayName: 'Right',

	  render: function render() {
	    var className = 'control-icon control-icon-right';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('polyline', { strokeWidth: '2', points: '27.1,14 35,24 27,34' }),
	        React.createElement('path', { strokeWidth: '2', d: 'M34.7,24C12,24,12,24,12,24' })
	      )
	    );
	  }

	});

	module.exports = Right;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var SkipLinks = __webpack_require__(5);

	var IntlMixin = __webpack_require__(54);
	var Locale = __webpack_require__(96);

	var App = React.createClass({
	  displayName: 'App',

	  mixins: [IntlMixin],

	  propTypes: {
	    centered: React.PropTypes.bool
	  },

	  getInitialState: function getInitialState() {
	    return {
	      lang: 'en-US'
	    };
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      centered: true
	    };
	  },

	  componentDidMount: function componentDidMount() {
	    var lang = Locale.getCurrentLocale();
	    if (this.props.lang) {
	      lang = this.props.lang;
	    }

	    if (!document.documentElement.getAttribute('lang')) {
	      document.documentElement.setAttribute('lang', lang);
	    }

	    this.setState({ lang: lang });
	  },

	  render: function render() {
	    var classes = ["app"];
	    if (this.props.centered) {
	      classes.push("app--centered");
	    }
	    if (this.props.inline) {
	      classes.push("app--inline");
	    }

	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    //remove this when React 0.14 is released. This is required because context props are not being propagated to children.
	    var children = React.Children.map(this.props.children, (function (child) {
	      if (child) {
	        return React.cloneElement(child, this.getChildContext());
	      } else {
	        return null;
	      }
	    }).bind(this));

	    return React.createElement(
	      'div',
	      { lang: this.state.lang, className: classes.join(' ') },
	      React.createElement(SkipLinks, null),
	      children
	    );
	  }
	});

	module.exports = App;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Layer = __webpack_require__(6);
	var Menu = __webpack_require__(9);
	var DOM = __webpack_require__(49);
	var IntlMixin = __webpack_require__(54);

	var SkipLinks = React.createClass({
	  displayName: 'SkipLinks',

	  mixins: [IntlMixin],

	  _updateAnchors: function _updateAnchors() {
	    var anchorElements = document.querySelectorAll('[data-skip-label]');

	    var anchors = Array.prototype.map.call(anchorElements, function (anchorElement) {
	      return {
	        id: anchorElement.getAttribute('id'),
	        label: anchorElement.getAttribute('data-skip-label')
	      };
	    });

	    this.setState({ anchors: anchors });
	  },

	  componentDidMount: function componentDidMount() {
	    this._updateAnchors();
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    this.setState({ routeChanged: true });
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    if (this.state.routeChanged) {
	      this._updateAnchors();
	      this.setState({ routeChanged: false });
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { anchors: [], showLayer: false };
	  },

	  _onFocus: function _onFocus(event) {
	    if (!this.state.showLayer) {
	      this.setState({ showLayer: true });
	    }
	  },

	  _onBlur: function _onBlur(event) {
	    setTimeout((function () {
	      var skipLinksLayer = this.refs.skipLinksLayer.getDOMNode();
	      var activeElement = document.activeElement;
	      if (!DOM.isDescendant(skipLinksLayer, activeElement)) {
	        this.setState({ showLayer: false });
	      }
	    }).bind(this));
	  },

	  _onClick: function _onClick(destId) {
	    return function (event) {
	      var dest = document.getElementById(destId);
	      dest.focus();
	    };
	  },

	  render: function render() {
	    var anchorElements = this.state.anchors.map((function (anchor, index) {
	      return React.createElement(
	        'a',
	        { tabIndex: '0',
	          href: '#' + anchor.id,
	          onFocus: this._onFocus,
	          onBlur: this._onBlur,
	          onClick: this._onClick(anchor.id),
	          key: anchor.id,
	          'aria-label': this.getGrommetIntlMessage('Skip to') + ' ' + anchor.label },
	        anchor.label
	      );
	    }).bind(this));

	    return React.createElement(
	      'div',
	      { className: 'skip-links' },
	      React.createElement(
	        Layer,
	        { hidden: !this.state.showLayer },
	        React.createElement(
	          'div',
	          { ref: 'skipLinksLayer' },
	          React.createElement(
	            'h2',
	            null,
	            this.getGrommetIntlMessage('Skip to'),
	            ':'
	          ),
	          React.createElement(
	            Menu,
	            { direction: 'row' },
	            anchorElements
	          )
	        )
	      )
	    );
	  }
	});

	module.exports = SkipLinks;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var CloseIcon = __webpack_require__(7);
	var KeyboardAccelerators = __webpack_require__(8);

	var CLASS_ROOT = "layer";

	var LayerOverlay = React.createClass({
	  displayName: 'LayerOverlay',

	  propTypes: {
	    align: React.PropTypes.oneOf(['center', 'top', 'bottom', 'left', 'right']),
	    closer: React.PropTypes.oneOfType([React.PropTypes.node, React.PropTypes.bool]),
	    flush: React.PropTypes.bool,
	    hidden: React.PropTypes.bool,
	    peek: React.PropTypes.bool,
	    onClose: React.PropTypes.func,
	    router: React.PropTypes.func
	  },

	  childContextTypes: {
	    router: React.PropTypes.func
	  },

	  mixins: [KeyboardAccelerators],

	  _onClick: function _onClick(event) {
	    if (this.props.onClose && event.target === this.refs.background.getDOMNode()) {
	      this.props.onClose();
	    }
	  },

	  getChildContext: function getChildContext() {
	    return { router: this.props.router };
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.props.onClose) {
	      this.startListeningToKeyboard({ esc: this.props.onClose });
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    var appElement = document.querySelectorAll('div.app')[0];
	    if (appElement) {
	      // unit tests don't have an app
	      appElement.classList.remove('app--layered');
	      window.scroll(0, this._appScrollY);
	    }
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.align) {
	      classes.push(CLASS_ROOT + "--align-" + this.props.align);
	    }
	    if (this.props.flush) {
	      classes.push(CLASS_ROOT + "--flush");
	    }
	    if (this.props.hidden) {
	      classes.push(CLASS_ROOT + "--hidden");
	    }
	    if (this.props.peek) {
	      classes.push(CLASS_ROOT + "--peek");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var closer = null;
	    if (this.props.closer) {
	      classes.push(CLASS_ROOT + "--closeable");

	      if (true === this.props.closer) {
	        closer = React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__closer",
	            onClick: this.props.onClose },
	          React.createElement(CloseIcon, null)
	        );
	      } else {
	        closer = React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__closer" },
	          this.props.closer
	        );
	      }
	    }

	    return React.createElement(
	      'div',
	      { ref: 'background', className: classes.join(' '), onClick: this._onClick },
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__container" },
	        closer,
	        this.props.children
	      )
	    );
	  }
	});

	var Layer = React.createClass({
	  displayName: 'Layer',

	  propTypes: {
	    align: React.PropTypes.oneOf(['center', 'top', 'bottom', 'left', 'right']),
	    closer: React.PropTypes.oneOfType([React.PropTypes.node, React.PropTypes.bool]),
	    flush: React.PropTypes.bool,
	    hidden: React.PropTypes.bool,
	    peek: React.PropTypes.bool,
	    onClose: React.PropTypes.func
	  },

	  contextTypes: {
	    router: React.PropTypes.func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      align: 'center'
	    };
	  },

	  _addOverlay: function _addOverlay() {
	    var overlay = document.createElement('div');
	    if (overlay.classList) {
	      overlay.classList.add('layer__overlay');
	    } else {
	      // unit test version
	      overlay.className = 'layer__overlay';
	    }
	    this._overlay = document.body.insertBefore(overlay, document.body.firstChild);
	    this._overlay = overlay;
	  },

	  _renderOverlay: function _renderOverlay() {
	    var content = React.createElement(LayerOverlay, _extends({}, this.props, { router: this.context.router }));
	    React.render(content, this._overlay);
	    if (this.props.hidden) {
	      if (this._overlay.classList) {
	        this._overlay.classList.add('layer__overlay--hidden');
	      } else {
	        this._overlay.className = 'layer__overlay layer__overlay--hidden';
	      }
	    } else {
	      if (this._overlay.classList) {
	        this._overlay.classList.remove('layer__overlay--hidden');
	      } else {
	        this._overlay.className = 'layer__overlay';
	      }
	    }
	  },

	  _removeOverlay: function _removeOverlay() {
	    React.unmountComponentAtNode(this._overlay);
	    document.body.removeChild(this._overlay);
	    this._overlay = null;
	  },

	  componentDidMount: function componentDidMount() {
	    this._addOverlay();
	    this._renderOverlay();
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    this._renderOverlay();
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    this._removeOverlay();
	  },

	  render: function render() {
	    return React.createElement('span', null);
	  }

	});

	module.exports = Layer;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Clear = React.createClass({
	  displayName: 'Clear',

	  render: function render() {
	    var className = 'control-icon control-icon-clear';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('line', { strokeWidth: '2', x1: '14', y1: '14', x2: '34', y2: '34' }),
	        React.createElement('line', { strokeWidth: '2', x1: '14', y1: '34', x2: '34', y2: '14' })
	      )
	    );
	  }

	});

	module.exports = Clear;

/***/ },
/* 8 */
/***/ function(module, exports) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	// Allow callers to use key labels instead of key code numbers.
	// This makes their code easier to read.
	'use strict';

	var KEYS = {
	  backspace: 8,
	  tab: 9,
	  enter: 13,
	  esc: 27,
	  escape: 27,
	  space: 32,
	  left: 37,
	  up: 38,
	  right: 39,
	  down: 40,
	  comma: 188,
	  shift: 16
	};

	var _keyboardAccelerators = {};
	var _listenersCounter = 0;
	var _listeners = [];
	var _isKeyboardAcceleratorListening = false;

	var _onKeyboardAcceleratorKeyPress = function _onKeyboardAcceleratorKeyPress(e) {
	  var key = e.keyCode ? e.keyCode : e.which;
	  for (var i = _listenersCounter - 1; i >= 0; i--) {
	    var id = _listeners[i];
	    var handlers = _keyboardAccelerators[id].handlers;
	    var downs = _keyboardAccelerators[id].downs;
	    if (handlers.hasOwnProperty(key) && !downs[KEYS.shift]) {
	      var ret = handlers[key](e);
	      if (ret) {
	        break;
	      }
	    }
	    downs[e.keyCode] = true;
	  }
	};

	var _onKeyboardAcceleratorKeyUp = function _onKeyboardAcceleratorKeyUp(e) {
	  for (var i = _listenersCounter - 1; i >= 0; i--) {
	    var id = _listeners[i];
	    var handlers = _keyboardAccelerators[id].handlers;
	    var downs = _keyboardAccelerators[id].downs;
	    if (downs[KEYS.shift] && downs[KEYS.left] && handlers.shiftLeft) {
	      handlers.shiftLeft(e);
	    } else if (downs[KEYS.shift] && downs[KEYS.right] && handlers.shiftRight) {
	      handlers.shiftRight(e);
	    }
	    downs[e.keyCode] = false;
	  }
	};

	// KeyboardAccelerators is a mixin for handling keyboard events.
	// Add listeners using startListeningToKeyboard().
	// Remove listeners using stopListeningToKeyboard().
	// When the component that includes this is unmounted, the keyboard event
	// listener is removed automatically.
	var KeyboardAccelerators = {
	  _initKeyboardAccelerators: function _initKeyboardAccelerators() {
	    var id = this.getDOMNode().getAttribute('data-reactid');
	    _keyboardAccelerators[id] = {
	      handlers: {},
	      listening: false,
	      downs: []
	    };
	  },

	  _getKeyboardAcceleratorHandlers: function _getKeyboardAcceleratorHandlers() {
	    var id = this.getDOMNode().getAttribute('data-reactid');
	    return _keyboardAccelerators[id].handlers;
	  },

	  _getDowns: function _getDowns() {
	    var id = this.getDOMNode().getAttribute('data-reactid');
	    return _keyboardAccelerators[id].downs;
	  },

	  _isComponentListening: function _isComponentListening() {
	    var id = this.getDOMNode().getAttribute('data-reactid');
	    for (var i = 0; i < _listenersCounter; i++) {
	      if (_listeners[i] === id) {
	        return true;
	      }
	    }
	    return false;
	  },

	  _subscribeComponent: function _subscribeComponent() {
	    var id = this.getDOMNode().getAttribute('data-reactid');
	    _listeners[_listenersCounter] = id;
	    _listenersCounter++;
	  },

	  _unsubscribeComponent: function _unsubscribeComponent() {
	    var id = this.getDOMNode().getAttribute('data-reactid');
	    var i = 0;
	    for (; i < _listenersCounter; i++) {
	      if (_listeners[i] == id) {
	        break;
	      }
	    }
	    for (; i < _listenersCounter - 1; i++) {
	      _listeners[i] = _listeners[i + 1];
	    }
	    _listenersCounter--;
	    _listeners[_listenersCounter] = null;
	    delete _keyboardAccelerators[id];
	  },

	  // Add handlers for specific keys.
	  // This function can be called multiple times, existing handlers will
	  // be replaced, new handlers will be added.
	  startListeningToKeyboard: function startListeningToKeyboard(handlers) {
	    this._initKeyboardAccelerators();
	    var keys = 0;
	    for (var key in handlers) {
	      if (handlers.hasOwnProperty(key)) {
	        var keyCode = key;
	        if (KEYS.hasOwnProperty(key)) {
	          keyCode = KEYS[key];
	        }
	        keys += 1;
	        this._getKeyboardAcceleratorHandlers()[keyCode] = handlers[key];
	      }
	    }

	    if (keys > 0) {
	      if (!_isKeyboardAcceleratorListening) {
	        window.addEventListener("keydown", _onKeyboardAcceleratorKeyPress);
	        window.addEventListener("keyup", _onKeyboardAcceleratorKeyUp);
	        _isKeyboardAcceleratorListening = true;
	      }
	      if (!this._isComponentListening()) {
	        this._subscribeComponent();
	      }
	    }
	  },

	  // Remove handlers for all keys or specific keys.
	  // If no argument is passed in, all handlers are removed.
	  // This function can be called multiple times, only the handlers
	  // specified will be removed.
	  stopListeningToKeyboard: function stopListeningToKeyboard(handlers) {
	    if (!this._isComponentListening()) {
	      return;
	    }
	    if (handlers) {
	      for (var key in handlers) {
	        if (handlers.hasOwnProperty(key)) {
	          var keyCode = key;
	          if (KEYS.hasOwnProperty(key)) {
	            keyCode = KEYS[key];
	          }
	          delete this._getKeyboardAcceleratorHandlers()[keyCode];
	        }
	      }
	    }

	    var keyCount = 0;
	    for (var keyHandler in this._getKeyboardAcceleratorHandlers()) {
	      if (this._getKeyboardAcceleratorHandlers().hasOwnProperty(keyHandler)) {
	        keyCount += 1;
	      }
	    }

	    if (!handlers || 0 === keyCount) {
	      this._initKeyboardAccelerators();
	      this._unsubscribeComponent();
	    }

	    if (_listenersCounter === 0) {
	      window.removeEventListener("keydown", _onKeyboardAcceleratorKeyPress);
	      window.removeEventListener("keyup", _onKeyboardAcceleratorKeyUp);
	      _isKeyboardAcceleratorListening = false;
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    this.stopListeningToKeyboard();
	  }
	};

	module.exports = KeyboardAccelerators;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var merge = __webpack_require__(10);
	var pick = __webpack_require__(43);
	var keys = __webpack_require__(36);
	var KeyboardAccelerators = __webpack_require__(8);
	var Drop = __webpack_require__(48);
	var Responsive = __webpack_require__(50);
	var Box = __webpack_require__(51);
	var MoreIcon = __webpack_require__(52);
	var DropCaretIcon = __webpack_require__(53);

	var CLASS_ROOT = "menu";

	// We have a separate module for the drop component so we can transfer the router context.
	var MenuDrop = React.createClass({
	  displayName: 'MenuDrop',

	  propTypes: merge({
	    control: React.PropTypes.node,
	    dropAlign: Drop.alignPropType,
	    dropColorIndex: React.PropTypes.string,
	    id: React.PropTypes.string.isRequired,
	    large: React.PropTypes.bool,
	    onClick: React.PropTypes.func.isRequired,
	    router: React.PropTypes.func,
	    small: React.PropTypes.bool
	  }, Box.propTypes),

	  childContextTypes: {
	    router: React.PropTypes.func
	  },

	  mixins: [KeyboardAccelerators],

	  componentDidMount: function componentDidMount() {
	    this._keyboardHandlers = {
	      up: this._onUpKeyPress,
	      down: this._onDownKeyPress
	    };
	    this.startListeningToKeyboard(this._keyboardHandlers);
	    var menuItems = this.refs.navContainer.getDOMNode().childNodes;
	    for (var i = 0; i < menuItems.length; i++) {
	      var classes = menuItems[i].className.split(/\s+/);
	      var tagName = menuItems[i].tagName.toLowerCase();
	      // want to skip items of the menu that are not focusable.
	      if (tagName !== 'button' && tagName !== 'a' && classes.indexOf('check-box') === -1) {
	        continue;
	      }
	      menuItems[i].setAttribute('role', 'menuitem');

	      if (!menuItems[i].getAttribute('id')) {
	        menuItems[i].setAttribute('id', menuItems[i].getAttribute('data-reactid'));
	      }
	      // aria-selected informs AT which menu item is selected for that menu container.
	      menuItems[i].setAttribute('aria-selected', classes.indexOf('active'));
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    this.stopListeningToKeyboard(this._keyboardHandlers);
	  },

	  _onUpKeyPress: function _onUpKeyPress(event) {
	    event.preventDefault();
	    var menuItems = this.refs.navContainer.getDOMNode().childNodes;
	    if (!this.activeMenuItem) {
	      var lastMenuItem = menuItems[menuItems.length - 1];
	      this.activeMenuItem = lastMenuItem;
	    } else if (this.activeMenuItem.previousSibling) {
	      this.activeMenuItem = this.activeMenuItem.previousSibling;
	    }

	    var classes = this.activeMenuItem.className.split(/\s+/);
	    var tagName = this.activeMenuItem.tagName.toLowerCase();
	    // want to skip items of the menu that are not focusable.
	    if (tagName !== 'button' && tagName !== 'a' && classes.indexOf('check-box') === -1) {
	      if (this.activeMenuItem === menuItems[0]) {
	        return true;
	      } else {
	        // If this item is not focusable, check the next item.
	        return this._onUpKeyPress(event);
	      }
	    }

	    this.activeMenuItem.focus();
	    this.refs.menuDrop.getDOMNode().setAttribute('aria-activedescendant', this.activeMenuItem.getAttribute('id'));
	    // Stops KeyboardAccelerators from calling the other listeners. Works limilar to event.stopPropagation().
	    return true;
	  },

	  _onDownKeyPress: function _onDownKeyPress(event) {
	    event.preventDefault();
	    var menuItems = this.refs.navContainer.getDOMNode().childNodes;
	    if (!this.activeMenuItem) {
	      this.activeMenuItem = menuItems[0];
	    } else if (this.activeMenuItem.nextSibling) {
	      this.activeMenuItem = this.activeMenuItem.nextSibling;
	    }

	    var classes = this.activeMenuItem.className.split(/\s+/);
	    var tagName = this.activeMenuItem.tagName.toLowerCase();
	    // want to skip items of the menu that are not focusable.
	    if (tagName !== 'button' && tagName !== 'a' && classes.indexOf('check-box') === -1) {
	      if (this.activeMenuItem === menuItems[menuItems.length - 1]) {
	        return true;
	      } else {
	        // If this item is not focusable, check the next item.
	        return this._onDownKeyPress(event);
	      }
	    }

	    this.activeMenuItem.focus();
	    this.refs.menuDrop.getDOMNode().setAttribute('aria-activedescendant', this.activeMenuItem.getAttribute('id'));
	    // Stops KeyboardAccelerators from calling the other listeners. Works limilar to event.stopPropagation().
	    return true;
	  },

	  getChildContext: function getChildContext() {
	    return { router: this.props.router };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT + "__drop"];
	    var other = pick(this.props, keys(Box.propTypes));

	    var first = this.props.control;
	    var second = React.createElement(
	      Box,
	      _extends({ ref: 'navContainer', tag: 'nav' }, other),
	      this.props.children
	    );
	    if (this.props.dropAlign.bottom) {
	      first = second;
	      second = this.props.control;
	    }
	    if (this.props.dropAlign.right) {
	      classes.push(CLASS_ROOT + "__drop--align-right");
	    }
	    if (this.props.dropColorIndex) {
	      classes.push("background-color-index-" + this.props.dropColorIndex);
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "__drop--large");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "__drop--small");
	    }

	    return React.createElement(
	      'div',
	      { ref: 'menuDrop', id: this.props.id, className: classes.join(' '),
	        onClick: this.props.onClick },
	      first,
	      second
	    );
	  }
	});

	var Menu = React.createClass({
	  displayName: 'Menu',

	  propTypes: merge({
	    closeOnClick: React.PropTypes.bool,
	    collapse: React.PropTypes.bool, // deprecated, remove in 0.5
	    dropAlign: Drop.alignPropType,
	    dropColorIndex: React.PropTypes.string,
	    icon: React.PropTypes.node,
	    inline: React.PropTypes.bool,
	    label: React.PropTypes.string,
	    large: React.PropTypes.bool,
	    primary: React.PropTypes.bool,
	    small: React.PropTypes.bool
	  }, Box.propTypes),

	  contextTypes: {
	    router: React.PropTypes.func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      align: 'stretch',
	      closeOnClick: true,
	      direction: 'column',
	      dropAlign: { top: 'top', left: 'left' },
	      pad: 'none',
	      small: false,
	      responsive: true
	    };
	  },

	  mixins: [KeyboardAccelerators],

	  _onOpen: function _onOpen(event) {
	    event.preventDefault();
	    this.setState({ state: 'expanded' });
	  },

	  _onClose: function _onClose() {
	    this.setState({ state: 'collapsed' });
	    if (document.activeElement === this.getDOMNode()) {
	      this.setState({ state: 'focused' });
	    } else {
	      this.getDOMNode().focus();
	    }
	  },

	  _onFocusControl: function _onFocusControl() {
	    this.setState({ state: 'focused' });
	  },

	  _onBlurControl: function _onBlurControl() {
	    if (this.state.state === 'focused') {
	      this.setState({ state: 'collapsed' });
	    }
	  },

	  _onSink: function _onSink(event) {
	    event.stopPropagation();
	    // need to go native to prevent closing via document
	    event.nativeEvent.stopImmediatePropagation();
	  },

	  _onResponsive: function _onResponsive(small) {
	    // deactivate if we change resolutions
	    var newState = this.state.state;
	    if (this.state.state === 'expanded') {
	      newState = 'focused';
	    }
	    if (small) {
	      this.setState({ inline: false, active: newState });
	    } else {
	      this.setState({ inline: this.props.inline, active: newState });
	    }
	  },

	  getInitialState: function getInitialState() {
	    if (this.props.hasOwnProperty('collapse')) {
	      console.log('The Grommet Menu "collapse" property is deprecated. Please use "inline" instead.'); // TODO: remove this message in version 0.4.0
	    }
	    var inline;
	    if (this.props.hasOwnProperty('inline')) {
	      inline = this.props.inline;
	    } else {
	      inline = !this.props.label && !this.props.icon;
	    }
	    return {
	      // state may be 'collapsed', 'focused' or 'expanded' (active).
	      state: 'collapsed',
	      inline: inline
	    };
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.refs.control) {
	      var controlElement = this.refs.control.getDOMNode();
	      this.setState({
	        dropId: 'menu-drop-' + controlElement.getAttribute('data-reactid')
	      });

	      controlElement.setAttribute('role', 'menu');
	      var expanded = this.state.state === 'expanded';
	      controlElement.setAttribute('aria-expanded', expanded);
	      if (this.props.label) {
	        controlElement.setAttribute('aria-label', this.props.label);
	      } else if (this.props.icon) {
	        try {
	          var icon = controlElement.getElementsByClassName('control-icon')[0];
	          if (!icon.getAttribute('id')) {
	            icon.setAttribute('id', icon.getAttribute('data-reactid'));
	          }
	          controlElement.setAttribute('aria-labelledby', icon.getAttribute('id'));
	        } catch (exception) {
	          console.log('Unable to add aria-label to Menu component.');
	        }
	      }
	    }

	    if (this.props.inline && this.props.responsive) {
	      this._responsive = Responsive.start(this._onResponsive);
	    }
	  },

	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    // Set up keyboard listeners appropriate to the current state.

	    var activeKeyboardHandlers = {
	      esc: this._onClose
	    };
	    var focusedKeyboardHandlers = {
	      space: this._onOpen,
	      down: this._onOpen
	    };

	    switch (this.state.state) {
	      case 'collapsed':
	        this.stopListeningToKeyboard(focusedKeyboardHandlers);
	        this.stopListeningToKeyboard(activeKeyboardHandlers);
	        document.removeEventListener('click', this._onClose);
	        if (this._drop) {
	          this._drop.remove();
	          this._drop = null;
	        }
	        break;
	      case 'focused':
	        this.stopListeningToKeyboard(activeKeyboardHandlers);
	        this.startListeningToKeyboard(focusedKeyboardHandlers);
	        break;
	      case 'expanded':
	        this.stopListeningToKeyboard(focusedKeyboardHandlers);
	        this.startListeningToKeyboard(activeKeyboardHandlers);
	        if (prevState.state !== 'expanded') {
	          document.addEventListener('click', this._onClose);
	          this._drop = Drop.add(this.refs.control.getDOMNode(), this._renderDrop(), this.props.dropAlign);
	          this._drop.container.focus();
	        }
	        this._drop.render(this._renderDrop());
	        break;
	    }
	    if (this.refs.control) {
	      var controlElement = this.refs.control.getDOMNode();
	      var expanded = this.state.state === 'expanded';
	      controlElement.setAttribute('aria-expanded', expanded);
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    document.removeEventListener('click', this._onClose);
	    if (this._drop) {
	      this._drop.remove();
	    }
	    if (this._responsive) {
	      this._responsive.stop();
	    }
	  },

	  _renderControl: function _renderControl() {
	    var result = null;
	    var icon = null;
	    var controlClassName = CLASS_ROOT + "__control";

	    var classes = [controlClassName];

	    if (this.props.icon) {
	      classes.push(controlClassName + "--labelled");
	      icon = this.props.icon;
	    } else {
	      classes.push(controlClassName + "--fixed-label");
	      icon = React.createElement(MoreIcon, null);
	    }

	    if (this.props.label) {
	      result = React.createElement(
	        'div',
	        { className: classes.join(' ') },
	        React.createElement(
	          'div',
	          { className: controlClassName + "-icon" },
	          icon
	        ),
	        React.createElement(
	          'span',
	          { tabindex: '-1', className: controlClassName + "-label" },
	          this.props.label
	        ),
	        React.createElement(DropCaretIcon, { className: controlClassName + "-drop-icon" })
	      );
	    } else {
	      result = React.createElement(
	        'div',
	        { className: controlClassName },
	        icon
	      );
	    }
	    return result;
	  },

	  _renderDrop: function _renderDrop() {
	    var other = pick(this.props, keys(Box.propTypes));

	    var controlContents = React.createElement(
	      'div',
	      { onClick: this._onClose },
	      this._renderControl()
	    );

	    var onClick;
	    if (this.props.closeOnClick) {
	      onClick = this._onClose;
	    } else {
	      onClick = this._onSink;
	    }
	    return React.createElement(
	      MenuDrop,
	      _extends({ tabIndex: '-1', router: this.context.router,
	        dropAlign: this.props.dropAlign,
	        dropColorIndex: this.props.dropColorIndex,
	        small: this.props.small,
	        large: this.props.large
	      }, other, {
	        onClick: onClick,
	        id: this.state.dropId,
	        control: controlContents }),
	      this.props.children
	    );
	  },

	  _classes: function _classes(prefix) {
	    var classes = [prefix];

	    if (this.props.direction) {
	      classes.push(prefix + "--" + this.props.direction);
	    }
	    if (this.props.align) {
	      classes.push(prefix + "--align-" + this.props.align);
	    }
	    if (this.props.large) {
	      classes.push(prefix + "--large");
	    }
	    if (this.props.small) {
	      classes.push(prefix + "--small");
	    }
	    if (this.props.primary) {
	      classes.push(prefix + "--primary");
	    }

	    return classes;
	  },

	  render: function render() {
	    var classes = this._classes(CLASS_ROOT);
	    if (this.state.inline) {
	      classes.push(CLASS_ROOT + "--inline");
	    } else {
	      classes.push(CLASS_ROOT + "--controlled");
	      if (this.props.label) {
	        classes.push(CLASS_ROOT + "--labelled");
	      }
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    if (this.state.inline) {
	      var other = pick(this.props, keys(Box.propTypes));

	      return React.createElement(
	        Box,
	        _extends({ tag: 'nav' }, other, { className: classes.join(' '), onClick: this._onClose }),
	        this.props.children
	      );
	    } else {

	      var controlContents = this._renderControl();

	      return React.createElement(
	        'div',
	        { ref: 'control', className: classes.join(' '),
	          tabIndex: '0',
	          onClick: this._onOpen,
	          onFocus: this._onFocusControl,
	          onBlur: this._onBlurControl },
	        controlContents
	      );
	    }
	  }
	});

	module.exports = Menu;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(11),
	    createAssigner = __webpack_require__(38);

	/**
	 * Recursively merges own enumerable properties of the source object(s), that
	 * don't resolve to `undefined` into the destination object. Subsequent sources
	 * overwrite property assignments of previous sources. If `customizer` is
	 * provided it's invoked to produce the merged values of the destination and
	 * source properties. If `customizer` returns `undefined` merging is handled
	 * by the method instead. The `customizer` is bound to `thisArg` and invoked
	 * with five arguments: (objectValue, sourceValue, key, object, source).
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {*} [thisArg] The `this` binding of `customizer`.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var users = {
	 *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	 * };
	 *
	 * var ages = {
	 *   'data': [{ 'age': 36 }, { 'age': 40 }]
	 * };
	 *
	 * _.merge(users, ages);
	 * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	 *
	 * // using a customizer callback
	 * var object = {
	 *   'fruits': ['apple'],
	 *   'vegetables': ['beet']
	 * };
	 *
	 * var other = {
	 *   'fruits': ['banana'],
	 *   'vegetables': ['carrot']
	 * };
	 *
	 * _.merge(object, other, function(a, b) {
	 *   if (_.isArray(a)) {
	 *     return a.concat(b);
	 *   }
	 * });
	 * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
	 */
	var merge = createAssigner(baseMerge);

	module.exports = merge;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(12),
	    baseMergeDeep = __webpack_require__(13),
	    isArray = __webpack_require__(21),
	    isArrayLike = __webpack_require__(16),
	    isObject = __webpack_require__(25),
	    isObjectLike = __webpack_require__(20),
	    isTypedArray = __webpack_require__(33),
	    keys = __webpack_require__(36);

	/**
	 * The base implementation of `_.merge` without support for argument juggling,
	 * multiple sources, and `this` binding `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Array} [stackA=[]] Tracks traversed source objects.
	 * @param {Array} [stackB=[]] Associates values with source counterparts.
	 * @returns {Object} Returns `object`.
	 */
	function baseMerge(object, source, customizer, stackA, stackB) {
	  if (!isObject(object)) {
	    return object;
	  }
	  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),
	      props = isSrcArr ? undefined : keys(source);

	  arrayEach(props || source, function(srcValue, key) {
	    if (props) {
	      key = srcValue;
	      srcValue = source[key];
	    }
	    if (isObjectLike(srcValue)) {
	      stackA || (stackA = []);
	      stackB || (stackB = []);
	      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);
	    }
	    else {
	      var value = object[key],
	          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
	          isCommon = result === undefined;

	      if (isCommon) {
	        result = srcValue;
	      }
	      if ((result !== undefined || (isSrcArr && !(key in object))) &&
	          (isCommon || (result === result ? (result !== value) : (value === value)))) {
	        object[key] = result;
	      }
	    }
	  });
	  return object;
	}

	module.exports = baseMerge;


/***/ },
/* 12 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array.length;

	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}

	module.exports = arrayEach;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var arrayCopy = __webpack_require__(14),
	    isArguments = __webpack_require__(15),
	    isArray = __webpack_require__(21),
	    isArrayLike = __webpack_require__(16),
	    isPlainObject = __webpack_require__(26),
	    isTypedArray = __webpack_require__(33),
	    toPlainObject = __webpack_require__(34);

	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Array} [stackA=[]] Tracks traversed source objects.
	 * @param {Array} [stackB=[]] Associates values with source counterparts.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {
	  var length = stackA.length,
	      srcValue = source[key];

	  while (length--) {
	    if (stackA[length] == srcValue) {
	      object[key] = stackB[length];
	      return;
	    }
	  }
	  var value = object[key],
	      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
	      isCommon = result === undefined;

	  if (isCommon) {
	    result = srcValue;
	    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {
	      result = isArray(value)
	        ? value
	        : (isArrayLike(value) ? arrayCopy(value) : []);
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      result = isArguments(value)
	        ? toPlainObject(value)
	        : (isPlainObject(value) ? value : {});
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  // Add the source value to the stack of traversed objects and associate
	  // it with its merged value.
	  stackA.push(srcValue);
	  stackB.push(result);

	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);
	  } else if (result === result ? (result !== value) : (value === value)) {
	    object[key] = result;
	  }
	}

	module.exports = baseMergeDeep;


/***/ },
/* 14 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function arrayCopy(source, array) {
	  var index = -1,
	      length = source.length;

	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}

	module.exports = arrayCopy;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(16),
	    isObjectLike = __webpack_require__(20);

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Native method references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is classified as an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  return isObjectLike(value) && isArrayLike(value) &&
	    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
	}

	module.exports = isArguments;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var getLength = __webpack_require__(17),
	    isLength = __webpack_require__(19);

	/**
	 * Checks if `value` is array-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value));
	}

	module.exports = isArrayLike;


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(18);

	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
	 * that affects Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');

	module.exports = getLength;


/***/ },
/* 18 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}

	module.exports = baseProperty;


/***/ },
/* 19 */
/***/ function(module, exports) {

	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 */
	function isLength(value) {
	  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 20 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(22),
	    isLength = __webpack_require__(19),
	    isObjectLike = __webpack_require__(20);

	/** `Object#toString` result references. */
	var arrayTag = '[object Array]';

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeIsArray = getNative(Array, 'isArray');

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(function() { return arguments; }());
	 * // => false
	 */
	var isArray = nativeIsArray || function(value) {
	  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
	};

	module.exports = isArray;


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var isNative = __webpack_require__(23);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(24),
	    isObjectLike = __webpack_require__(20);

	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}

	module.exports = isNative;


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(25);

	/** `Object#toString` result references. */
	var funcTag = '[object Function]';

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 which returns 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}

	module.exports = isFunction;


/***/ },
/* 25 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var baseForIn = __webpack_require__(27),
	    isArguments = __webpack_require__(15),
	    isObjectLike = __webpack_require__(20);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * **Note:** This method assumes objects created by the `Object` constructor
	 * have no inherited enumerable properties.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  var Ctor;

	  // Exit early for non `Object` objects.
	  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||
	      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {
	    return false;
	  }
	  // IE < 9 iterates inherited properties before own properties. If the first
	  // iterated property is an object's own property then there are no inherited
	  // enumerable properties.
	  var result;
	  // In most environments an object's own properties are iterated before
	  // its inherited properties. If the last iterated property is an object's
	  // own property then there are no inherited enumerable properties.
	  baseForIn(value, function(subValue, key) {
	    result = key;
	  });
	  return result === undefined || hasOwnProperty.call(value, result);
	}

	module.exports = isPlainObject;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(28),
	    keysIn = __webpack_require__(31);

	/**
	 * The base implementation of `_.forIn` without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForIn(object, iteratee) {
	  return baseFor(object, iteratee, keysIn);
	}

	module.exports = baseForIn;


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(29);

	/**
	 * The base implementation of `baseForIn` and `baseForOwn` which iterates
	 * over `object` properties returned by `keysFunc` invoking `iteratee` for
	 * each property. Iteratee functions may exit iteration early by explicitly
	 * returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();

	module.exports = baseFor;


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var toObject = __webpack_require__(30);

	/**
	 * Creates a base function for `_.forIn` or `_.forInRight`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var iterable = toObject(object),
	        props = keysFunc(object),
	        length = props.length,
	        index = fromRight ? length : -1;

	    while ((fromRight ? index-- : ++index < length)) {
	      var key = props[index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}

	module.exports = createBaseFor;


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(25);

	/**
	 * Converts `value` to an object if it's not one.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {Object} Returns the object.
	 */
	function toObject(value) {
	  return isObject(value) ? value : Object(value);
	}

	module.exports = toObject;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var isArguments = __webpack_require__(15),
	    isArray = __webpack_require__(21),
	    isIndex = __webpack_require__(32),
	    isLength = __webpack_require__(19),
	    isObject = __webpack_require__(25);

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  if (object == null) {
	    return [];
	  }
	  if (!isObject(object)) {
	    object = Object(object);
	  }
	  var length = object.length;
	  length = (length && isLength(length) &&
	    (isArray(object) || isArguments(object)) && length) || 0;

	  var Ctor = object.constructor,
	      index = -1,
	      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
	      result = Array(length),
	      skipIndexes = length > 0;

	  while (++index < length) {
	    result[index] = (index + '');
	  }
	  for (var key in object) {
	    if (!(skipIndexes && isIndex(key, length)) &&
	        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = keysIn;


/***/ },
/* 32 */
/***/ function(module, exports) {

	/** Used to detect unsigned integer values. */
	var reIsUint = /^\d+$/;

	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return value > -1 && value % 1 == 0 && value < length;
	}

	module.exports = isIndex;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(19),
	    isObjectLike = __webpack_require__(20);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dateTag] = typedArrayTags[errorTag] =
	typedArrayTags[funcTag] = typedArrayTags[mapTag] =
	typedArrayTags[numberTag] = typedArrayTags[objectTag] =
	typedArrayTags[regexpTag] = typedArrayTags[setTag] =
	typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	function isTypedArray(value) {
	  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
	}

	module.exports = isTypedArray;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var baseCopy = __webpack_require__(35),
	    keysIn = __webpack_require__(31);

	/**
	 * Converts `value` to a plain object flattening inherited enumerable
	 * properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return baseCopy(value, keysIn(value));
	}

	module.exports = toPlainObject;


/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property names to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @returns {Object} Returns `object`.
	 */
	function baseCopy(source, props, object) {
	  object || (object = {});

	  var index = -1,
	      length = props.length;

	  while (++index < length) {
	    var key = props[index];
	    object[key] = source[key];
	  }
	  return object;
	}

	module.exports = baseCopy;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(22),
	    isArrayLike = __webpack_require__(16),
	    isObject = __webpack_require__(25),
	    shimKeys = __webpack_require__(37);

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeKeys = getNative(Object, 'keys');

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	var keys = !nativeKeys ? shimKeys : function(object) {
	  var Ctor = object == null ? undefined : object.constructor;
	  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
	      (typeof object != 'function' && isArrayLike(object))) {
	    return shimKeys(object);
	  }
	  return isObject(object) ? nativeKeys(object) : [];
	};

	module.exports = keys;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var isArguments = __webpack_require__(15),
	    isArray = __webpack_require__(21),
	    isIndex = __webpack_require__(32),
	    isLength = __webpack_require__(19),
	    keysIn = __webpack_require__(31);

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A fallback implementation of `Object.keys` which creates an array of the
	 * own enumerable property names of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function shimKeys(object) {
	  var props = keysIn(object),
	      propsLength = props.length,
	      length = propsLength && object.length;

	  var allowIndexes = !!length && isLength(length) &&
	    (isArray(object) || isArguments(object));

	  var index = -1,
	      result = [];

	  while (++index < propsLength) {
	    var key = props[index];
	    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = shimKeys;


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	var bindCallback = __webpack_require__(39),
	    isIterateeCall = __webpack_require__(41),
	    restParam = __webpack_require__(42);

	/**
	 * Creates a `_.assign`, `_.defaults`, or `_.merge` function.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return restParam(function(object, sources) {
	    var index = -1,
	        length = object == null ? 0 : sources.length,
	        customizer = length > 2 ? sources[length - 2] : undefined,
	        guard = length > 2 ? sources[2] : undefined,
	        thisArg = length > 1 ? sources[length - 1] : undefined;

	    if (typeof customizer == 'function') {
	      customizer = bindCallback(customizer, thisArg, 5);
	      length -= 2;
	    } else {
	      customizer = typeof thisArg == 'function' ? thisArg : undefined;
	      length -= (customizer ? 1 : 0);
	    }
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, customizer);
	      }
	    }
	    return object;
	  });
	}

	module.exports = createAssigner;


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(40);

	/**
	 * A specialized version of `baseCallback` which only supports `this` binding
	 * and specifying the number of arguments to provide to `func`.
	 *
	 * @private
	 * @param {Function} func The function to bind.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {number} [argCount] The number of arguments to provide to `func`.
	 * @returns {Function} Returns the callback.
	 */
	function bindCallback(func, thisArg, argCount) {
	  if (typeof func != 'function') {
	    return identity;
	  }
	  if (thisArg === undefined) {
	    return func;
	  }
	  switch (argCount) {
	    case 1: return function(value) {
	      return func.call(thisArg, value);
	    };
	    case 3: return function(value, index, collection) {
	      return func.call(thisArg, value, index, collection);
	    };
	    case 4: return function(accumulator, value, index, collection) {
	      return func.call(thisArg, accumulator, value, index, collection);
	    };
	    case 5: return function(value, other, key, object, source) {
	      return func.call(thisArg, value, other, key, object, source);
	    };
	  }
	  return function() {
	    return func.apply(thisArg, arguments);
	  };
	}

	module.exports = bindCallback;


/***/ },
/* 40 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument provided to it.
	 *
	 * @static
	 * @memberOf _
	 * @category Utility
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * _.identity(object) === object;
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(16),
	    isIndex = __webpack_require__(32),
	    isObject = __webpack_require__(25);

	/**
	 * Checks if the provided arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	      ? (isArrayLike(object) && isIndex(index, object.length))
	      : (type == 'string' && index in object)) {
	    var other = object[index];
	    return value === value ? (value === other) : (other !== other);
	  }
	  return false;
	}

	module.exports = isIterateeCall;


/***/ },
/* 42 */
/***/ function(module, exports) {

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * Creates a function that invokes `func` with the `this` binding of the
	 * created function and arguments from `start` and beyond provided as an array.
	 *
	 * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var say = _.restParam(function(what, names) {
	 *   return what + ' ' + _.initial(names).join(', ') +
	 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	 * });
	 *
	 * say('hello', 'fred', 'barney', 'pebbles');
	 * // => 'hello fred, barney, & pebbles'
	 */
	function restParam(func, start) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        rest = Array(length);

	    while (++index < length) {
	      rest[index] = args[start + index];
	    }
	    switch (start) {
	      case 0: return func.call(this, rest);
	      case 1: return func.call(this, args[0], rest);
	      case 2: return func.call(this, args[0], args[1], rest);
	    }
	    var otherArgs = Array(start + 1);
	    index = -1;
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = rest;
	    return func.apply(this, otherArgs);
	  };
	}

	module.exports = restParam;


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(44),
	    bindCallback = __webpack_require__(39),
	    pickByArray = __webpack_require__(46),
	    pickByCallback = __webpack_require__(47),
	    restParam = __webpack_require__(42);

	/**
	 * Creates an object composed of the picked `object` properties. Property
	 * names may be specified as individual arguments or as arrays of property
	 * names. If `predicate` is provided it's invoked for each property of `object`
	 * picking the properties `predicate` returns truthy for. The predicate is
	 * bound to `thisArg` and invoked with three arguments: (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function|...(string|string[])} [predicate] The function invoked per
	 *  iteration or property names to pick, specified as individual property
	 *  names or arrays of property names.
	 * @param {*} [thisArg] The `this` binding of `predicate`.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'user': 'fred', 'age': 40 };
	 *
	 * _.pick(object, 'user');
	 * // => { 'user': 'fred' }
	 *
	 * _.pick(object, _.isString);
	 * // => { 'user': 'fred' }
	 */
	var pick = restParam(function(object, props) {
	  if (object == null) {
	    return {};
	  }
	  return typeof props[0] == 'function'
	    ? pickByCallback(object, bindCallback(props[0], props[1], 3))
	    : pickByArray(object, baseFlatten(props));
	});

	module.exports = pick;


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(45),
	    isArguments = __webpack_require__(15),
	    isArray = __webpack_require__(21),
	    isArrayLike = __webpack_require__(16),
	    isObjectLike = __webpack_require__(20);

	/**
	 * The base implementation of `_.flatten` with added support for restricting
	 * flattening and specifying the start index.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {boolean} [isDeep] Specify a deep flatten.
	 * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, isDeep, isStrict, result) {
	  result || (result = []);

	  var index = -1,
	      length = array.length;

	  while (++index < length) {
	    var value = array[index];
	    if (isObjectLike(value) && isArrayLike(value) &&
	        (isStrict || isArray(value) || isArguments(value))) {
	      if (isDeep) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, isDeep, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}

	module.exports = baseFlatten;


/***/ },
/* 45 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var toObject = __webpack_require__(30);

	/**
	 * A specialized version of `_.pick` which picks `object` properties specified
	 * by `props`.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} props The property names to pick.
	 * @returns {Object} Returns the new object.
	 */
	function pickByArray(object, props) {
	  object = toObject(object);

	  var index = -1,
	      length = props.length,
	      result = {};

	  while (++index < length) {
	    var key = props[index];
	    if (key in object) {
	      result[key] = object[key];
	    }
	  }
	  return result;
	}

	module.exports = pickByArray;


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	var baseForIn = __webpack_require__(27);

	/**
	 * A specialized version of `_.pick` which picks `object` properties `predicate`
	 * returns truthy for.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Object} Returns the new object.
	 */
	function pickByCallback(object, predicate) {
	  var result = {};
	  baseForIn(object, function(value, key, object) {
	    if (predicate(value, key, object)) {
	      result[key] = value;
	    }
	  });
	  return result;
	}

	module.exports = pickByCallback;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var DOM = __webpack_require__(49);

	/*
	 * Drop is a utility for rendering components like drop down menus layered above
	 * their initiating controls.
	 */

	var VERTICAL_ALIGN_OPTIONS = ['top', 'bottom'];
	var HORIZONTAL_ALIGN_OPTIONS = ['right', 'left'];

	var Drop = {

	  // How callers can validate a property for drop alignment which will be passed to add().
	  alignPropType: React.PropTypes.shape({
	    top: React.PropTypes.oneOf(VERTICAL_ALIGN_OPTIONS),
	    bottom: React.PropTypes.oneOf(VERTICAL_ALIGN_OPTIONS),
	    left: React.PropTypes.oneOf(HORIZONTAL_ALIGN_OPTIONS),
	    right: React.PropTypes.oneOf(HORIZONTAL_ALIGN_OPTIONS)
	  }),

	  // Add a drop component.
	  //
	  // control - DOM element to anchor the overlay on
	  // content - React node to render
	  // align -
	  // {
	  //    top: top|bottom
	  //    bottom: top|bottom
	  //    left: left|right
	  //    right: left|right
	  // }

	  add: function add(control, content, align) {
	    // validate align
	    if (align && align.top && VERTICAL_ALIGN_OPTIONS.indexOf(align.top) === -1) {
	      console.warn("Warning: Invalid align.top value '" + align.top + "' supplied to Drop," + "expected one of [" + VERTICAL_ALIGN_OPTIONS.join(',') + "]");
	    }
	    if (align && align.bottom && VERTICAL_ALIGN_OPTIONS.indexOf(align.bottom) === -1) {
	      console.warn("Warning: Invalid align.bottom value '" + align.bottom + "' supplied to Drop," + "expected one of [" + VERTICAL_ALIGN_OPTIONS.join(',') + "]");
	    }
	    if (align && align.left && HORIZONTAL_ALIGN_OPTIONS.indexOf(align.left) === -1) {
	      console.warn("Warning: Invalid align.left value '" + align.left + "' supplied to Drop," + "expected one of [" + HORIZONTAL_ALIGN_OPTIONS.join(',') + "]");
	    }
	    if (align && align.right && HORIZONTAL_ALIGN_OPTIONS.indexOf(align.right) === -1) {
	      console.warn("Warning: Invalid align.right value '" + align.right + "' supplied to Drop," + "expected one of [" + HORIZONTAL_ALIGN_OPTIONS.join(',') + "]");
	    }

	    // initialize data
	    var drop = {
	      control: control,
	      align: {
	        top: align.top,
	        bottom: align.bottom,
	        left: align.left,
	        right: align.right
	      }
	    };
	    if (!drop.align.top && !drop.align.bottom) {
	      drop.align.top = "top";
	    }
	    if (!drop.align.left && !drop.align.right) {
	      drop.align.left = "left";
	    }

	    // setup DOM
	    drop.container = document.createElement('div');
	    if (drop.container.classList) {
	      drop.container.classList.add('drop');
	    } else {
	      // unit test version
	      drop.container.className += ' drop';
	    }
	    document.body.appendChild(drop.container);
	    React.render(content, drop.container);

	    drop.scrollParents = DOM.findScrollParents(drop.control);
	    drop.place = this._place.bind(this, drop);
	    drop.render = this._render.bind(this, drop);
	    drop.remove = this._remove.bind(this, drop);

	    drop.scrollParents.forEach(function (scrollParent) {
	      scrollParent.addEventListener('scroll', drop.place);
	    });
	    window.addEventListener('resize', drop.place);

	    // position content
	    this._place(drop);

	    return drop;
	  },

	  _render: function _render(drop, content) {
	    React.render(content, drop.container);
	    // in case content changed, re-place
	    setTimeout(this._place.bind(this, drop), 1);
	  },

	  _remove: function _remove(drop) {
	    drop.scrollParents.forEach(function (scrollParent) {
	      scrollParent.removeEventListener('scroll', drop.place);
	    });
	    window.removeEventListener('resize', drop.place);

	    React.unmountComponentAtNode(drop.container);
	    document.body.removeChild(drop.container);
	  },

	  _place: function _place(drop) {
	    var control = drop.control;
	    var container = drop.container;
	    var align = drop.align;
	    var controlRect = control.getBoundingClientRect();
	    var containerRect = container.getBoundingClientRect();
	    var windowWidth = window.innerWidth;
	    var windowHeight = window.innerHeight;

	    // clear prior styling
	    container.style.left = '';
	    container.style.width = '';
	    container.style.top = '';

	    var width = Math.min(Math.max(controlRect.width, containerRect.width), windowWidth);
	    var left;
	    var top;

	    if (align.left) {
	      if ('left' === align.left) {
	        left = controlRect.left;
	      } else if ('right' === align.left) {
	        left = controlRect.left - width;
	      }
	    } else if (align.right) {
	      if ('left' === align.right) {
	        left = controlRect.left - width;
	      } else if ('right' === align.right) {
	        left = controlRect.left + controlRect.width - width;
	      }
	    }
	    if (left + width > windowWidth) {
	      left -= left + width - windowWidth;
	    } else if (left < 0) {
	      left = 0;
	    }

	    if (align.top) {
	      if ('top' === align.top) {
	        top = controlRect.top;
	      } else if ('bottom' === align.top) {
	        top = controlRect.top + controlRect.height;
	      }
	    } else if (align.bottom) {
	      if ('top' === align.bottom) {
	        top = controlRect.top - containerRect.height;
	      } else if ('bottom' === align.bottom) {
	        top = controlRect.top + controlRect.height - containerRect.height;
	      }
	    }
	    if (top + containerRect.height > windowHeight) {
	      // For now, just slide up so we can see it.
	      // TODO: when we don't want to cover the control, like with SearchInput and Calendar,
	      // add bottom margin to the control to allow the user to scroll down if needed.
	      if (align.top === 'bottom') {
	        top = controlRect.top - containerRect.height;
	      } else {
	        top = Math.max(controlRect.bottom - containerRect.height, top - (top + containerRect.height - windowHeight));
	      }
	    } else if (top < 0) {
	      top = 0;
	    }

	    container.style.left = '' + left + 'px';
	    container.style.width = '' + width + 'px';
	    container.style.top = '' + top + 'px';
	  }
	};

	module.exports = Drop;

/***/ },
/* 49 */
/***/ function(module, exports) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	module.exports = {
	  findScrollParents: function findScrollParents(element) {
	    var result = [];
	    var parent = element.parentNode;
	    while (parent) {
	      // account for border the lazy way for now
	      if (parent.scrollHeight > parent.offsetHeight + 10) {
	        result.push(parent);
	      }
	      parent = parent.parentNode;
	    }
	    if (result.length === 0) {
	      result.push(document);
	    }
	    return result;
	  },

	  isDescendant: function isDescendant(parent, child) {
	    var node = child.parentNode;
	    while (node != null) {
	      if (node == parent) {
	        return true;
	      }
	      node = node.parentNode;
	    }
	    return false;
	  }
	};

/***/ },
/* 50 */
/***/ function(module, exports) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	/*
	 * Responsive is a utility for tracking the display size.
	 * It aligns with CSS media queries.
	 */

	'use strict';

	var SMALL_WIDTH_EM = 44.9375; // align with _settings.responsive.scss

	function _smallSize() {
	  var fontSize = '16px';
	  // unit tests don't have getComputedStyle
	  if (window.getComputedStyle) {
	    fontSize = window.getComputedStyle(document.documentElement).fontSize;
	  }
	  return SMALL_WIDTH_EM * parseFloat(fontSize);
	}

	var Responsive = {

	  // Track responsive sizing.
	  //
	  // Example:
	  // inside componentDidMount()
	  //   this._responsive = Responsive.start(this._onResponsive);
	  // inside componentWillUnmount()
	  //   this._responsive.stop()

	  start: function start(func) {
	    var responsive = {
	      func: func,
	      timer: null,
	      small: null,
	      smallSize: _smallSize()
	    };
	    responsive.onResize = this._onResize.bind(this, responsive);
	    responsive.layout = this._check.bind(this, responsive);
	    responsive.stop = this._stop.bind(this, responsive);
	    window.addEventListener('resize', responsive.onResize);
	    responsive.layout();
	    return responsive;
	  },

	  _stop: function _stop(responsive) {
	    clearTimeout(responsive.timer);
	    window.removeEventListener('resize', responsive.onResize);
	  },

	  _onResize: function _onResize(responsive) {
	    // debounce
	    clearTimeout(responsive.timer);
	    responsive.timer = setTimeout(responsive.layout, 50);
	  },

	  _check: function _check(responsive) {
	    if (window.innerWidth < responsive.smallSize) {
	      if (!responsive.small) {
	        responsive.small = true;
	        responsive.func(true);
	      }
	    } else {
	      if (false !== responsive.small) {
	        responsive.small = false;
	        responsive.func(false);
	      }
	    }
	  }
	};

	module.exports = Responsive;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var keys = __webpack_require__(36);

	var CLASS_ROOT = "box";

	var Box = React.createClass({
	  displayName: 'Box',

	  propTypes: {
	    align: React.PropTypes.oneOf(['start', 'center', 'between', 'end', 'stretch']),
	    appCentered: React.PropTypes.bool,
	    backgroundImage: React.PropTypes.string,
	    colorIndex: React.PropTypes.string,
	    containerClassName: React.PropTypes.string,
	    direction: React.PropTypes.oneOf(['row', 'column']),
	    full: React.PropTypes.oneOf([true, 'horizontal', 'vertical', false]),
	    onClick: React.PropTypes.func,
	    justify: React.PropTypes.oneOf(['start', 'center', 'between', 'end']),
	    pad: React.PropTypes.oneOfType([React.PropTypes.oneOf(['none', 'small', 'medium', 'large']), React.PropTypes.shape({
	      horizontal: React.PropTypes.oneOf(['none', 'small', 'medium', 'large']),
	      vertical: React.PropTypes.oneOf(['none', 'small', 'medium', 'large'])
	    })]),
	    reverse: React.PropTypes.bool,
	    responsive: React.PropTypes.bool,
	    separator: React.PropTypes.oneOf(['top', 'bottom', 'left', 'right']),
	    tag: React.PropTypes.string,
	    textAlign: React.PropTypes.oneOf(['left', 'center', 'right']),
	    texture: React.PropTypes.string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      direction: 'column',
	      pad: 'none',
	      tag: 'div',
	      responsive: true
	    };
	  },

	  _addPropertyClass: function _addPropertyClass(classes, prefix, property, classProperty) {
	    var choice = this.props[property];
	    var propertyPrefix = classProperty || property;
	    if (choice) {
	      if (typeof choice === 'string') {
	        classes.push(prefix + '--' + propertyPrefix + '-' + choice);
	      } else if (typeof choice === 'object') {
	        keys(choice).forEach(function (key) {
	          classes.push(prefix + '--' + propertyPrefix + '-' + key + '-' + choice[key]);
	        });
	      } else {
	        classes.push(prefix + '--' + propertyPrefix);
	      }
	    }
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    var containerClasses = [CLASS_ROOT + "__container"];
	    this._addPropertyClass(classes, CLASS_ROOT, 'flush');
	    this._addPropertyClass(classes, CLASS_ROOT, 'full');
	    this._addPropertyClass(classes, CLASS_ROOT, 'direction');
	    this._addPropertyClass(classes, CLASS_ROOT, 'justify');
	    this._addPropertyClass(classes, CLASS_ROOT, 'align');
	    this._addPropertyClass(classes, CLASS_ROOT, 'reverse');
	    this._addPropertyClass(classes, CLASS_ROOT, 'responsive');
	    this._addPropertyClass(classes, CLASS_ROOT, 'pad');
	    this._addPropertyClass(classes, CLASS_ROOT, 'separator');
	    this._addPropertyClass(classes, CLASS_ROOT, 'textAlign', 'text-align');

	    if (this.props.appCentered) {
	      this._addPropertyClass(containerClasses, CLASS_ROOT + "__container", 'full');
	      if (this.props.colorIndex) {
	        containerClasses.push("background-color-index-" + this.props.colorIndex);
	      }
	      if (this.props.containerClassName) {
	        containerClasses.push(this.props.containerClassName);
	      }
	    } else {
	      if (this.props.colorIndex) {
	        classes.push("background-color-index-" + this.props.colorIndex);
	      }
	    }

	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var style = {};
	    if (this.props.texture) {
	      style.backgroundImage = this.props.texture;
	    } else if (this.props.backgroundImage) {
	      style.background = this.props.backgroundImage + " no-repeat center center";
	      style.backgroundSize = "cover";
	    }

	    if (this.props.appCentered) {
	      return React.createElement(
	        'div',
	        { className: containerClasses.join(' '), style: style,
	          onClick: this.props.onClick },
	        React.createElement(
	          this.props.tag,
	          { className: classes.join(' ') },
	          this.props.children
	        )
	      );
	    } else {
	      return React.createElement(
	        this.props.tag,
	        { className: classes.join(' '), style: style,
	          onClick: this.props.onClick },
	        this.props.children
	      );
	    }
	  }

	});

	module.exports = Box;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var More = React.createClass({
	  displayName: 'More',

	  render: function render() {
	    var className = 'control-icon control-icon-more';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('rect', { x: '23', y: '23', strokeWidth: '2', width: '2', height: '2' }),
	        React.createElement('rect', { x: '15', y: '23', strokeWidth: '2', width: '2', height: '2' }),
	        React.createElement('rect', { x: '31', y: '23', strokeWidth: '2', width: '2', height: '2' })
	      )
	    );
	  }

	});

	module.exports = More;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var DropCaret = React.createClass({
	  displayName: 'DropCaret',

	  render: function render() {
	    var className = 'control-icon control-icon-drop-caret';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('polyline', { strokeWidth: '2', strokeMiterlimit: '10', points: '34,19 24,29 14,19 ' })
	      )
	    );
	  }

	});

	module.exports = DropCaret;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var supportedLocales = ['en-US', 'pt-BR'];

	function localesSupported() {
	  return global.Intl && supportedLocales.every(function (locale) {
	    return Intl.NumberFormat.supportedLocalesOf(locale)[0] === locale && Intl.DateTimeFormat.supportedLocalesOf(locale)[0] === locale;
	  });
	}

	if (!localesSupported()) {
	  __webpack_require__(55);
	  Intl.NumberFormat = IntlPolyfill.NumberFormat;
	  Intl.DateTimeFormat = IntlPolyfill.DateTimeFormat;
	}

	var React = __webpack_require__(2);
	var ReactIntl = __webpack_require__(60);
	var IntlMixin = ReactIntl.IntlMixin;
	var FormattedDate = ReactIntl.FormattedDate;

	module.exports = {
	  mixins: [IntlMixin],

	  getChildContext: function getChildContext() {
	    if (!this.props.locales && !this.context.locales) {
	      this.context.locales = 'en-US';
	    }

	    if (!this.props.messages && !this.context.messages) {
	      try {
	        this.context.messages = __webpack_require__(93)("./" + (this.props.locales || this.context.locales || 'en-US'));
	      } catch (e) {
	        this.context.messages = __webpack_require__(94);
	      }
	    }
	  },

	  getGrommetFormattedDate: function getGrommetFormattedDate(date) {
	    return React.createElement(FormattedDate, {
	      value: new Date(date),
	      weekday: 'long',
	      day: 'numeric',
	      month: 'long',
	      year: 'numeric',
	      hour: 'numeric',
	      minute: 'numeric',
	      second: 'numeric' });
	  },

	  getGrommetIntlMessage: function getGrommetIntlMessage(messageKey) {
	    var message = messageKey;
	    if (messageKey) {
	      try {
	        message = this.getIntlMessage(messageKey);
	      } catch (e) {
	        message = messageKey;
	      }
	    }
	    return message;
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var m = __webpack_require__(56),
	    IntlPolyfill = m.default;

	// Expose `IntlPolyfill` as global to add locale data into runtime later on.
	global.IntlPolyfill = IntlPolyfill;

	// Require all locale data for `Intl`. This module will be
	// ignored when bundling for the browser with Browserify/Webpack.
	__webpack_require__(59);

	// hack to export the polyfill as global Intl if needed
	if (!global.Intl) {
	    global.Intl = IntlPolyfill;
	    IntlPolyfill.__applyLocaleSensitivePrototypes();
	}

	// providing an idiomatic api for the nodejs version of this module
	module.exports = exports = IntlPolyfill;
	// preserving the original api in case another module is relying on that
	exports.default = IntlPolyfill;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @license Copyright 2013 Andy Earnshaw, MIT License
	 *
	 * Implements the ECMAScript Internationalization API in ES5-compatible environments,
	 * following the ECMA-402 specification as closely as possible
	 *
	 * ECMA-402: http://ecma-international.org/ecma-402/1.0/
	 *
	 * CLDR format locale data should be provided using IntlPolyfill.__addLocaleData().
	 */
	/*jshint esnext: true, proto:true, eqnull:true, boss:true, laxbreak:true, newcap:false, shadow:true, funcscope:true */

	"use strict";
	var src$exp$$ = __webpack_require__(57), src$cldr$$ = __webpack_require__(58);

	var Intl = {},

	    realDefineProp = (function () {
	        var sentinel = {};
	        try {
	            Object.defineProperty(sentinel, 'a', {});
	            return 'a' in sentinel;
	        } catch (e) {
	            return false;
	        }
	    })(),

	    // Need a workaround for getters in ES3
	    es3  = !realDefineProp && !Object.prototype.__defineGetter__,

	    // We use this a lot (and need it for proto-less objects)
	    hop = Object.prototype.hasOwnProperty,

	    // Naive defineProperty for compatibility
	    defineProperty = realDefineProp ? Object.defineProperty : function (obj, name, desc) {
	        if ('get' in desc && obj.__defineGetter__)
	            obj.__defineGetter__(name, desc.get);

	        else if (!hop.call(obj, name) || 'value' in desc)
	            obj[name] = desc.value;
	    },

	    // Array.prototype.indexOf, as good as we need it to be
	    arrIndexOf = Array.prototype.indexOf || function (search) {
	        /*jshint validthis:true */
	        var t = this;
	        if (!t.length)
	            return -1;

	        for (var i = arguments[1] || 0, max = t.length; i < max; i++) {
	            if (t[i] === search)
	                return i;
	        }

	        return -1;
	    },

	    // Create an object with the specified prototype (2nd arg required for Record)
	    objCreate = Object.create || function (proto, props) {
	        var obj;

	        function F() {}
	        F.prototype = proto;
	        obj = new F();

	        for (var k in props) {
	            if (hop.call(props, k))
	                defineProperty(obj, k, props[k]);
	        }

	        return obj;
	    },

	    // Snapshot some (hopefully still) native built-ins
	    arrSlice  = Array.prototype.slice,
	    arrConcat = Array.prototype.concat,
	    arrPush   = Array.prototype.push,
	    arrJoin   = Array.prototype.join,
	    arrShift  = Array.prototype.shift,
	    arrUnshift= Array.prototype.unshift,

	    // Naive Function.prototype.bind for compatibility
	    fnBind = Function.prototype.bind || function (thisObj) {
	        var fn = this,
	            args = arrSlice.call(arguments, 1);

	        // All our (presently) bound functions have either 1 or 0 arguments. By returning
	        // different function signatures, we can pass some tests in ES3 environments
	        if (fn.length === 1) {
	            return function (a) {
	                return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
	            };
	        }
	        else {
	            return function () {
	                return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
	            };
	        }
	    },

	    // Default locale is the first-added locale data for us
	    defaultLocale,

	    // Object housing internal properties for constructors
	    internals = objCreate(null),

	    // Keep internal properties internal
	    secret = Math.random(),

	    // An object map of date component keys, saves using a regex later
	    dateWidths = objCreate(null, { narrow:{}, short:{}, long:{} }),

	    // Each constructor prototype should be an instance of the constructor itself, but we
	    // can't initialise them as such until some locale data has been added, so this is how
	    // we keep track
	    numberFormatProtoInitialised = false,
	    dateTimeFormatProtoInitialised = false,

	    // Some regular expressions we're using
	    expCurrencyCode = /^[A-Z]{3}$/,
	    expUnicodeExSeq = /-u(?:-[0-9a-z]{2,8})+/gi, // See `extension` below

	    // IANA Subtag Registry redundant tag and subtag maps
	    redundantTags = {
	        tags: {
	            "art-lojban":   "jbo",       "i-ami":        "ami",       "i-bnn":       "bnn",  "i-hak":      "hak",
	            "i-klingon":    "tlh",       "i-lux":        "lb",        "i-navajo":    "nv",   "i-pwn":      "pwn",
	            "i-tao":        "tao",       "i-tay":        "tay",       "i-tsu":       "tsu",  "no-bok":     "nb",
	            "no-nyn":       "nn",        "sgn-BE-FR":    "sfb",       "sgn-BE-NL":   "vgt",  "sgn-CH-DE":  "sgg",
	            "zh-guoyu":     "cmn",       "zh-hakka":     "hak",       "zh-min-nan":  "nan",  "zh-xiang":   "hsn",
	            "sgn-BR":       "bzs",       "sgn-CO":       "csn",       "sgn-DE":      "gsg",  "sgn-DK":     "dsl",
	            "sgn-ES":       "ssp",       "sgn-FR":       "fsl",       "sgn-GB":      "bfi",  "sgn-GR":     "gss",
	            "sgn-IE":       "isg",       "sgn-IT":       "ise",       "sgn-JP":      "jsl",  "sgn-MX":     "mfs",
	            "sgn-NI":       "ncs",       "sgn-NL":       "dse",       "sgn-NO":      "nsl",  "sgn-PT":     "psr",
	            "sgn-SE":       "swl",       "sgn-US":       "ase",       "sgn-ZA":      "sfs",  "zh-cmn":     "cmn",
	            "zh-cmn-Hans":  "cmn-Hans",  "zh-cmn-Hant":  "cmn-Hant",  "zh-gan":      "gan",  "zh-wuu":     "wuu",
	            "zh-yue":       "yue"
	        },
	        subtags: {
	              BU: "MM",   DD: "DE",   FX: "FR",   TP: "TL",   YD: "YE",   ZR: "CD",  heploc: "alalc97",
	            'in': "id",   iw: "he",   ji:  "yi",  jw: "jv",   mo: "ro",  ayx: "nun", bjd: "drl",
	             ccq: "rki", cjr: "mom", cka: "cmr", cmk: "xch", drh: "khk", drw: "prs", gav: "dev",
	             hrr: "jal", ibi: "opa", kgh: "kml", lcq: "ppr", mst: "mry", myt: "mry", sca: "hle",
	             tie: "ras", tkk: "twm", tlw: "weo", tnf: "prs", ybd: "rki", yma: "lrr"
	        },
	        extLang: {
	            aao: [ "aao", "ar"  ], abh: [ "abh", "ar"  ], abv: [ "abv", "ar"  ], acm: [ "acm", "ar"  ],
	            acq: [ "acq", "ar"  ], acw: [ "acw", "ar"  ], acx: [ "acx", "ar"  ], acy: [ "acy", "ar"  ],
	            adf: [ "adf", "ar"  ], ads: [ "ads", "sgn" ], aeb: [ "aeb", "ar"  ], aec: [ "aec", "ar"  ],
	            aed: [ "aed", "sgn" ], aen: [ "aen", "sgn" ], afb: [ "afb", "ar"  ], afg: [ "afg", "sgn" ],
	            ajp: [ "ajp", "ar"  ], apc: [ "apc", "ar"  ], apd: [ "apd", "ar"  ], arb: [ "arb", "ar"  ],
	            arq: [ "arq", "ar"  ], ars: [ "ars", "ar"  ], ary: [ "ary", "ar"  ], arz: [ "arz", "ar"  ],
	            ase: [ "ase", "sgn" ], asf: [ "asf", "sgn" ], asp: [ "asp", "sgn" ], asq: [ "asq", "sgn" ],
	            asw: [ "asw", "sgn" ], auz: [ "auz", "ar"  ], avl: [ "avl", "ar"  ], ayh: [ "ayh", "ar"  ],
	            ayl: [ "ayl", "ar"  ], ayn: [ "ayn", "ar"  ], ayp: [ "ayp", "ar"  ], bbz: [ "bbz", "ar"  ],
	            bfi: [ "bfi", "sgn" ], bfk: [ "bfk", "sgn" ], bjn: [ "bjn", "ms"  ], bog: [ "bog", "sgn" ],
	            bqn: [ "bqn", "sgn" ], bqy: [ "bqy", "sgn" ], btj: [ "btj", "ms"  ], bve: [ "bve", "ms"  ],
	            bvl: [ "bvl", "sgn" ], bvu: [ "bvu", "ms"  ], bzs: [ "bzs", "sgn" ], cdo: [ "cdo", "zh"  ],
	            cds: [ "cds", "sgn" ], cjy: [ "cjy", "zh"  ], cmn: [ "cmn", "zh"  ], coa: [ "coa", "ms"  ],
	            cpx: [ "cpx", "zh"  ], csc: [ "csc", "sgn" ], csd: [ "csd", "sgn" ], cse: [ "cse", "sgn" ],
	            csf: [ "csf", "sgn" ], csg: [ "csg", "sgn" ], csl: [ "csl", "sgn" ], csn: [ "csn", "sgn" ],
	            csq: [ "csq", "sgn" ], csr: [ "csr", "sgn" ], czh: [ "czh", "zh"  ], czo: [ "czo", "zh"  ],
	            doq: [ "doq", "sgn" ], dse: [ "dse", "sgn" ], dsl: [ "dsl", "sgn" ], dup: [ "dup", "ms"  ],
	            ecs: [ "ecs", "sgn" ], esl: [ "esl", "sgn" ], esn: [ "esn", "sgn" ], eso: [ "eso", "sgn" ],
	            eth: [ "eth", "sgn" ], fcs: [ "fcs", "sgn" ], fse: [ "fse", "sgn" ], fsl: [ "fsl", "sgn" ],
	            fss: [ "fss", "sgn" ], gan: [ "gan", "zh"  ], gds: [ "gds", "sgn" ], gom: [ "gom", "kok" ],
	            gse: [ "gse", "sgn" ], gsg: [ "gsg", "sgn" ], gsm: [ "gsm", "sgn" ], gss: [ "gss", "sgn" ],
	            gus: [ "gus", "sgn" ], hab: [ "hab", "sgn" ], haf: [ "haf", "sgn" ], hak: [ "hak", "zh"  ],
	            hds: [ "hds", "sgn" ], hji: [ "hji", "ms"  ], hks: [ "hks", "sgn" ], hos: [ "hos", "sgn" ],
	            hps: [ "hps", "sgn" ], hsh: [ "hsh", "sgn" ], hsl: [ "hsl", "sgn" ], hsn: [ "hsn", "zh"  ],
	            icl: [ "icl", "sgn" ], ils: [ "ils", "sgn" ], inl: [ "inl", "sgn" ], ins: [ "ins", "sgn" ],
	            ise: [ "ise", "sgn" ], isg: [ "isg", "sgn" ], isr: [ "isr", "sgn" ], jak: [ "jak", "ms"  ],
	            jax: [ "jax", "ms"  ], jcs: [ "jcs", "sgn" ], jhs: [ "jhs", "sgn" ], jls: [ "jls", "sgn" ],
	            jos: [ "jos", "sgn" ], jsl: [ "jsl", "sgn" ], jus: [ "jus", "sgn" ], kgi: [ "kgi", "sgn" ],
	            knn: [ "knn", "kok" ], kvb: [ "kvb", "ms"  ], kvk: [ "kvk", "sgn" ], kvr: [ "kvr", "ms"  ],
	            kxd: [ "kxd", "ms"  ], lbs: [ "lbs", "sgn" ], lce: [ "lce", "ms"  ], lcf: [ "lcf", "ms"  ],
	            liw: [ "liw", "ms"  ], lls: [ "lls", "sgn" ], lsg: [ "lsg", "sgn" ], lsl: [ "lsl", "sgn" ],
	            lso: [ "lso", "sgn" ], lsp: [ "lsp", "sgn" ], lst: [ "lst", "sgn" ], lsy: [ "lsy", "sgn" ],
	            ltg: [ "ltg", "lv"  ], lvs: [ "lvs", "lv"  ], lzh: [ "lzh", "zh"  ], max: [ "max", "ms"  ],
	            mdl: [ "mdl", "sgn" ], meo: [ "meo", "ms"  ], mfa: [ "mfa", "ms"  ], mfb: [ "mfb", "ms"  ],
	            mfs: [ "mfs", "sgn" ], min: [ "min", "ms"  ], mnp: [ "mnp", "zh"  ], mqg: [ "mqg", "ms"  ],
	            mre: [ "mre", "sgn" ], msd: [ "msd", "sgn" ], msi: [ "msi", "ms"  ], msr: [ "msr", "sgn" ],
	            mui: [ "mui", "ms"  ], mzc: [ "mzc", "sgn" ], mzg: [ "mzg", "sgn" ], mzy: [ "mzy", "sgn" ],
	            nan: [ "nan", "zh"  ], nbs: [ "nbs", "sgn" ], ncs: [ "ncs", "sgn" ], nsi: [ "nsi", "sgn" ],
	            nsl: [ "nsl", "sgn" ], nsp: [ "nsp", "sgn" ], nsr: [ "nsr", "sgn" ], nzs: [ "nzs", "sgn" ],
	            okl: [ "okl", "sgn" ], orn: [ "orn", "ms"  ], ors: [ "ors", "ms"  ], pel: [ "pel", "ms"  ],
	            pga: [ "pga", "ar"  ], pks: [ "pks", "sgn" ], prl: [ "prl", "sgn" ], prz: [ "prz", "sgn" ],
	            psc: [ "psc", "sgn" ], psd: [ "psd", "sgn" ], pse: [ "pse", "ms"  ], psg: [ "psg", "sgn" ],
	            psl: [ "psl", "sgn" ], pso: [ "pso", "sgn" ], psp: [ "psp", "sgn" ], psr: [ "psr", "sgn" ],
	            pys: [ "pys", "sgn" ], rms: [ "rms", "sgn" ], rsi: [ "rsi", "sgn" ], rsl: [ "rsl", "sgn" ],
	            sdl: [ "sdl", "sgn" ], sfb: [ "sfb", "sgn" ], sfs: [ "sfs", "sgn" ], sgg: [ "sgg", "sgn" ],
	            sgx: [ "sgx", "sgn" ], shu: [ "shu", "ar"  ], slf: [ "slf", "sgn" ], sls: [ "sls", "sgn" ],
	            sqk: [ "sqk", "sgn" ], sqs: [ "sqs", "sgn" ], ssh: [ "ssh", "ar"  ], ssp: [ "ssp", "sgn" ],
	            ssr: [ "ssr", "sgn" ], svk: [ "svk", "sgn" ], swc: [ "swc", "sw"  ], swh: [ "swh", "sw"  ],
	            swl: [ "swl", "sgn" ], syy: [ "syy", "sgn" ], tmw: [ "tmw", "ms"  ], tse: [ "tse", "sgn" ],
	            tsm: [ "tsm", "sgn" ], tsq: [ "tsq", "sgn" ], tss: [ "tss", "sgn" ], tsy: [ "tsy", "sgn" ],
	            tza: [ "tza", "sgn" ], ugn: [ "ugn", "sgn" ], ugy: [ "ugy", "sgn" ], ukl: [ "ukl", "sgn" ],
	            uks: [ "uks", "sgn" ], urk: [ "urk", "ms"  ], uzn: [ "uzn", "uz"  ], uzs: [ "uzs", "uz"  ],
	            vgt: [ "vgt", "sgn" ], vkk: [ "vkk", "ms"  ], vkt: [ "vkt", "ms"  ], vsi: [ "vsi", "sgn" ],
	            vsl: [ "vsl", "sgn" ], vsv: [ "vsv", "sgn" ], wuu: [ "wuu", "zh"  ], xki: [ "xki", "sgn" ],
	            xml: [ "xml", "sgn" ], xmm: [ "xmm", "ms"  ], xms: [ "xms", "sgn" ], yds: [ "yds", "sgn" ],
	            ysl: [ "ysl", "sgn" ], yue: [ "yue", "zh"  ], zib: [ "zib", "sgn" ], zlm: [ "zlm", "ms"  ],
	            zmi: [ "zmi", "ms"  ], zsl: [ "zsl", "sgn" ], zsm: [ "zsm", "ms"  ]
	        }
	    },

	    // Currency minor units output from get-4217 grunt task, formatted
	    currencyMinorUnits = {
	        BHD: 3, BYR: 0, XOF: 0, BIF: 0, XAF: 0, CLF: 4, CLP: 0, KMF: 0, DJF: 0,
	        XPF: 0, GNF: 0, ISK: 0, IQD: 3, JPY: 0, JOD: 3, KRW: 0, KWD: 3, LYD: 3,
	        OMR: 3, PYG: 0, RWF: 0, TND: 3, UGX: 0, UYI: 0, VUV: 0, VND: 0
	    };

	// Sect 6.2 Language Tags
	// ======================

	/**
	 * The IsStructurallyValidLanguageTag abstract operation verifies that the locale
	 * argument (which must be a String value)
	 *
	 * - represents a well-formed BCP 47 language tag as specified in RFC 5646 section
	 *   2.1, or successor,
	 * - does not include duplicate variant subtags, and
	 * - does not include duplicate singleton subtags.
	 *
	 * The abstract operation returns true if locale can be generated from the ABNF
	 * grammar in section 2.1 of the RFC, starting with Language-Tag, and does not
	 * contain duplicate variant or singleton subtags (other than as a private use
	 * subtag). It returns false otherwise. Terminal value characters in the grammar are
	 * interpreted as the Unicode equivalents of the ASCII octet values given.
	 */
	function /* 6.2.2 */IsStructurallyValidLanguageTag(locale) {
	    // represents a well-formed BCP 47 language tag as specified in RFC 5646
	    if (!src$exp$$.expBCP47Syntax.test(locale))
	        return false;

	    // does not include duplicate variant subtags, and
	    if (src$exp$$.expVariantDupes.test(locale))
	        return false;

	    // does not include duplicate singleton subtags.
	    if (src$exp$$.expSingletonDupes.test(locale))
	        return false;

	    return true;
	}

	/**
	 * The CanonicalizeLanguageTag abstract operation returns the canonical and case-
	 * regularized form of the locale argument (which must be a String value that is
	 * a structurally valid BCP 47 language tag as verified by the
	 * IsStructurallyValidLanguageTag abstract operation). It takes the steps
	 * specified in RFC 5646 section 4.5, or successor, to bring the language tag
	 * into canonical form, and to regularize the case of the subtags, but does not
	 * take the steps to bring a language tag into “extlang form” and to reorder
	 * variant subtags.

	 * The specifications for extensions to BCP 47 language tags, such as RFC 6067,
	 * may include canonicalization rules for the extension subtag sequences they
	 * define that go beyond the canonicalization rules of RFC 5646 section 4.5.
	 * Implementations are allowed, but not required, to apply these additional rules.
	 */
	function /* 6.2.3 */CanonicalizeLanguageTag (locale) {
	    var match, parts;

	    // A language tag is in 'canonical form' when the tag is well-formed
	    // according to the rules in Sections 2.1 and 2.2

	    // Section 2.1 says all subtags use lowercase...
	    locale = locale.toLowerCase();

	    // ...with 2 exceptions: 'two-letter and four-letter subtags that neither
	    // appear at the start of the tag nor occur after singletons.  Such two-letter
	    // subtags are all uppercase (as in the tags "en-CA-x-ca" or "sgn-BE-FR") and
	    // four-letter subtags are titlecase (as in the tag "az-Latn-x-latn").
	    parts = locale.split('-');
	    for (var i = 1, max = parts.length; i < max; i++) {
	        // Two-letter subtags are all uppercase
	        if (parts[i].length === 2)
	            parts[i] = parts[i].toUpperCase();

	        // Four-letter subtags are titlecase
	        else if (parts[i].length === 4)
	            parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].slice(1);

	        // Is it a singleton?
	        else if (parts[i].length === 1 && parts[i] !== 'x')
	            break;
	    }
	    locale = arrJoin.call(parts, '-');

	    // The steps laid out in RFC 5646 section 4.5 are as follows:

	    // 1.  Extension sequences are ordered into case-insensitive ASCII order
	    //     by singleton subtag.
	    if ((match = locale.match(src$exp$$.expExtSequences)) && match.length > 1) {
	        // The built-in sort() sorts by ASCII order, so use that
	        match.sort();

	        // Replace all extensions with the joined, sorted array
	        locale = locale.replace(
	            RegExp('(?:' + src$exp$$.expExtSequences.source + ')+', 'i'),
	            arrJoin.call(match, '')
	        );
	    }

	    // 2.  Redundant or grandfathered tags are replaced by their 'Preferred-
	    //     Value', if there is one.
	    if (hop.call(redundantTags.tags, locale))
	        locale = redundantTags.tags[locale];

	    // 3.  Subtags are replaced by their 'Preferred-Value', if there is one.
	    //     For extlangs, the original primary language subtag is also
	    //     replaced if there is a primary language subtag in the 'Preferred-
	    //     Value'.
	    parts = locale.split('-');

	    for (var i = 1, max = parts.length; i < max; i++) {
	        if (hop.call(redundantTags.subtags, parts[i]))
	            parts[i] = redundantTags.subtags[parts[i]];

	        else if (hop.call(redundantTags.extLang, parts[i])) {
	            parts[i] = redundantTags.extLang[parts[i]][0];

	            // For extlang tags, the prefix needs to be removed if it is redundant
	            if (i === 1 && redundantTags.extLang[parts[1]][1] === parts[0]) {
	                parts = arrSlice.call(parts, i++);
	                max -= 1;
	            }
	        }
	    }

	    return arrJoin.call(parts, '-');
	}

	/**
	 * The DefaultLocale abstract operation returns a String value representing the
	 * structurally valid (6.2.2) and canonicalized (6.2.3) BCP 47 language tag for the
	 * host environment’s current locale.
	 */
	function /* 6.2.4 */DefaultLocale () {
	    return defaultLocale;
	}

	// Sect 6.3 Currency Codes
	// =======================

	/**
	 * The IsWellFormedCurrencyCode abstract operation verifies that the currency argument
	 * (after conversion to a String value) represents a well-formed 3-letter ISO currency
	 * code. The following steps are taken:
	 */
	function /* 6.3.1 */IsWellFormedCurrencyCode(currency) {
	    var
	        // 1. Let `c` be ToString(currency)
	        c = String(currency),

	        // 2. Let `normalized` be the result of mapping c to upper case as described
	        //    in 6.1.
	        normalized = toLatinUpperCase(c);

	    // 3. If the string length of normalized is not 3, return false.
	    // 4. If normalized contains any character that is not in the range "A" to "Z"
	    //    (U+0041 to U+005A), return false.
	    if (expCurrencyCode.test(normalized) === false)
	        return false;

	    // 5. Return true
	    return true;
	}

	// Sect 9.2 Abstract Operations
	// ============================
	function /* 9.2.1 */CanonicalizeLocaleList (locales) {
	// The abstract operation CanonicalizeLocaleList takes the following steps:

	    // 1. If locales is undefined, then a. Return a new empty List
	    if (locales === undefined)
	        return new List();

	    var
	        // 2. Let seen be a new empty List.
	        seen = new List(),

	        // 3. If locales is a String value, then
	        //    a. Let locales be a new array created as if by the expression new
	        //    Array(locales) where Array is the standard built-in constructor with
	        //    that name and locales is the value of locales.
	        locales = typeof locales === 'string' ? [ locales ] : locales,

	        // 4. Let O be ToObject(locales).
	        O = toObject(locales),

	        // 5. Let lenValue be the result of calling the [[Get]] internal method of
	        //    O with the argument "length".
	        // 6. Let len be ToUint32(lenValue).
	        len = O.length,

	        // 7. Let k be 0.
	        k = 0;

	    // 8. Repeat, while k < len
	    while (k < len) {
	        var
	            // a. Let Pk be ToString(k).
	            Pk = String(k),

	            // b. Let kPresent be the result of calling the [[HasProperty]] internal
	            //    method of O with argument Pk.
	            kPresent = Pk in O;

	        // c. If kPresent is true, then
	        if (kPresent) {
	            var
	                // i. Let kValue be the result of calling the [[Get]] internal
	                //     method of O with argument Pk.
	                kValue = O[Pk];

	            // ii. If the type of kValue is not String or Object, then throw a
	            //     TypeError exception.
	            if (kValue == null || (typeof kValue !== 'string' && typeof kValue !== 'object'))
	                throw new TypeError('String or Object type expected');

	            var
	                // iii. Let tag be ToString(kValue).
	                tag = String(kValue);

	            // iv. If the result of calling the abstract operation
	            //     IsStructurallyValidLanguageTag (defined in 6.2.2), passing tag as
	            //     the argument, is false, then throw a RangeError exception.
	            if (!IsStructurallyValidLanguageTag(tag))
	                throw new RangeError("'" + tag + "' is not a structurally valid language tag");

	            // v. Let tag be the result of calling the abstract operation
	            //    CanonicalizeLanguageTag (defined in 6.2.3), passing tag as the
	            //    argument.
	            tag = CanonicalizeLanguageTag(tag);

	            // vi. If tag is not an element of seen, then append tag as the last
	            //     element of seen.
	            if (arrIndexOf.call(seen, tag) === -1)
	                arrPush.call(seen, tag);
	        }

	        // d. Increase k by 1.
	        k++;
	    }

	    // 9. Return seen.
	    return seen;
	}

	/**
	 * The BestAvailableLocale abstract operation compares the provided argument
	 * locale, which must be a String value with a structurally valid and
	 * canonicalized BCP 47 language tag, against the locales in availableLocales and
	 * returns either the longest non-empty prefix of locale that is an element of
	 * availableLocales, or undefined if there is no such element. It uses the
	 * fallback mechanism of RFC 4647, section 3.4. The following steps are taken:
	 */
	function /* 9.2.2 */BestAvailableLocale (availableLocales, locale) {
	    var
	       // 1. Let candidate be locale
	       candidate = locale;

	    // 2. Repeat
	    while (true) {
	        // a. If availableLocales contains an element equal to candidate, then return
	        // candidate.
	        if (arrIndexOf.call(availableLocales, candidate) > -1)
	            return candidate;

	        var
	            // b. Let pos be the character index of the last occurrence of "-"
	            // (U+002D) within candidate. If that character does not occur, return
	            // undefined.
	            pos = candidate.lastIndexOf('-');

	        if (pos < 0)
	            return;

	        // c. If pos ≥ 2 and the character "-" occurs at index pos-2 of candidate,
	        //    then decrease pos by 2.
	        if (pos >= 2 && candidate.charAt(pos - 2) === '-')
	            pos -= 2;

	        // d. Let candidate be the substring of candidate from position 0, inclusive,
	        //    to position pos, exclusive.
	        candidate = candidate.substring(0, pos);
	    }
	}

	/**
	 * The LookupMatcher abstract operation compares requestedLocales, which must be
	 * a List as returned by CanonicalizeLocaleList, against the locales in
	 * availableLocales and determines the best available language to meet the
	 * request. The following steps are taken:
	 */
	function /* 9.2.3 */LookupMatcher (availableLocales, requestedLocales) {
	    var
	        // 1. Let i be 0.
	        i = 0,

	        // 2. Let len be the number of elements in requestedLocales.
	        len = requestedLocales.length,

	        // 3. Let availableLocale be undefined.
	        availableLocale;

	    // 4. Repeat while i < len and availableLocale is undefined:
	    while (i < len && !availableLocale) {
	        var
	            // a. Let locale be the element of requestedLocales at 0-origined list
	            //    position i.
	            locale = requestedLocales[i],

	            // b. Let noExtensionsLocale be the String value that is locale with all
	            //    Unicode locale extension sequences removed.
	            noExtensionsLocale = String(locale).replace(expUnicodeExSeq, ''),

	            // c. Let availableLocale be the result of calling the
	            //    BestAvailableLocale abstract operation (defined in 9.2.2) with
	            //    arguments availableLocales and noExtensionsLocale.
	            availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

	        // d. Increase i by 1.
	        i++;
	    }

	    var
	        // 5. Let result be a new Record.
	        result = new Record();

	    // 6. If availableLocale is not undefined, then
	    if (availableLocale !== undefined) {
	        // a. Set result.[[locale]] to availableLocale.
	        result['[[locale]]'] = availableLocale;

	        // b. If locale and noExtensionsLocale are not the same String value, then
	        if (String(locale) !== String(noExtensionsLocale)) {
	            var
	                // i. Let extension be the String value consisting of the first
	                //    substring of locale that is a Unicode locale extension sequence.
	                extension = locale.match(expUnicodeExSeq)[0],

	                // ii. Let extensionIndex be the character position of the initial
	                //     "-" of the first Unicode locale extension sequence within locale.
	                extensionIndex = locale.indexOf('-u-');

	            // iii. Set result.[[extension]] to extension.
	            result['[[extension]]'] = extension;

	            // iv. Set result.[[extensionIndex]] to extensionIndex.
	            result['[[extensionIndex]]'] = extensionIndex;
	        }
	    }
	    // 7. Else
	    else
	        // a. Set result.[[locale]] to the value returned by the DefaultLocale abstract
	        //    operation (defined in 6.2.4).
	        result['[[locale]]'] = DefaultLocale();

	    // 8. Return result
	    return result;
	}

	/**
	 * The BestFitMatcher abstract operation compares requestedLocales, which must be
	 * a List as returned by CanonicalizeLocaleList, against the locales in
	 * availableLocales and determines the best available language to meet the
	 * request. The algorithm is implementation dependent, but should produce results
	 * that a typical user of the requested locales would perceive as at least as
	 * good as those produced by the LookupMatcher abstract operation. Options
	 * specified through Unicode locale extension sequences must be ignored by the
	 * algorithm. Information about such subsequences is returned separately.
	 * The abstract operation returns a record with a [[locale]] field, whose value
	 * is the language tag of the selected locale, which must be an element of
	 * availableLocales. If the language tag of the request locale that led to the
	 * selected locale contained a Unicode locale extension sequence, then the
	 * returned record also contains an [[extension]] field whose value is the first
	 * Unicode locale extension sequence, and an [[extensionIndex]] field whose value
	 * is the index of the first Unicode locale extension sequence within the request
	 * locale language tag.
	 */
	function /* 9.2.4 */BestFitMatcher (availableLocales, requestedLocales) {
	    return LookupMatcher(availableLocales, requestedLocales);
	}

	/**
	 * The ResolveLocale abstract operation compares a BCP 47 language priority list
	 * requestedLocales against the locales in availableLocales and determines the
	 * best available language to meet the request. availableLocales and
	 * requestedLocales must be provided as List values, options as a Record.
	 */
	function /* 9.2.5 */ResolveLocale (availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {
	    if (availableLocales.length === 0) {
	        throw new ReferenceError('No locale data has been provided for this object yet.');
	    }

	    // The following steps are taken:
	    var
	        // 1. Let matcher be the value of options.[[localeMatcher]].
	        matcher = options['[[localeMatcher]]'];

	    // 2. If matcher is "lookup", then
	    if (matcher === 'lookup')
	        var
	            // a. Let r be the result of calling the LookupMatcher abstract operation
	            //    (defined in 9.2.3) with arguments availableLocales and
	            //    requestedLocales.
	            r = LookupMatcher(availableLocales, requestedLocales);

	    // 3. Else
	    else
	        var
	            // a. Let r be the result of calling the BestFitMatcher abstract
	            //    operation (defined in 9.2.4) with arguments availableLocales and
	            //    requestedLocales.
	            r = BestFitMatcher(availableLocales, requestedLocales);

	    var
	        // 4. Let foundLocale be the value of r.[[locale]].
	        foundLocale = r['[[locale]]'];

	    // 5. If r has an [[extension]] field, then
	    if (hop.call(r, '[[extension]]'))
	        var
	            // a. Let extension be the value of r.[[extension]].
	            extension = r['[[extension]]'],
	            // b. Let extensionIndex be the value of r.[[extensionIndex]].
	            extensionIndex = r['[[extensionIndex]]'],
	            // c. Let split be the standard built-in function object defined in ES5,
	            //    15.5.4.14.
	            split = String.prototype.split,
	            // d. Let extensionSubtags be the result of calling the [[Call]] internal
	            //    method of split with extension as the this value and an argument
	            //    list containing the single item "-".
	            extensionSubtags = split.call(extension, '-'),
	            // e. Let extensionSubtagsLength be the result of calling the [[Get]]
	            //    internal method of extensionSubtags with argument "length".
	            extensionSubtagsLength = extensionSubtags.length;

	    var
	        // 6. Let result be a new Record.
	        result = new Record();

	    // 7. Set result.[[dataLocale]] to foundLocale.
	    result['[[dataLocale]]'] = foundLocale;

	    var
	        // 8. Let supportedExtension be "-u".
	        supportedExtension = '-u',
	        // 9. Let i be 0.
	        i = 0,
	        // 10. Let len be the result of calling the [[Get]] internal method of
	        //     relevantExtensionKeys with argument "length".
	        len = relevantExtensionKeys.length;

	    // 11 Repeat while i < len:
	    while (i < len) {
	        var
	            // a. Let key be the result of calling the [[Get]] internal method of
	            //    relevantExtensionKeys with argument ToString(i).
	            key = relevantExtensionKeys[i],
	            // b. Let foundLocaleData be the result of calling the [[Get]] internal
	            //    method of localeData with the argument foundLocale.
	            foundLocaleData = localeData[foundLocale],
	            // c. Let keyLocaleData be the result of calling the [[Get]] internal
	            //    method of foundLocaleData with the argument key.
	            keyLocaleData = foundLocaleData[key],
	            // d. Let value be the result of calling the [[Get]] internal method of
	            //    keyLocaleData with argument "0".
	            value = keyLocaleData['0'],
	            // e. Let supportedExtensionAddition be "".
	            supportedExtensionAddition = '',
	            // f. Let indexOf be the standard built-in function object defined in
	            //    ES5, 15.4.4.14.
	            indexOf = arrIndexOf;

	        // g. If extensionSubtags is not undefined, then
	        if (extensionSubtags !== undefined) {
	            var
	                // i. Let keyPos be the result of calling the [[Call]] internal
	                //    method of indexOf with extensionSubtags as the this value and
	                // an argument list containing the single item key.
	                keyPos = indexOf.call(extensionSubtags, key);

	            // ii. If keyPos ≠ -1, then
	            if (keyPos !== -1) {
	                // 1. If keyPos + 1 < extensionSubtagsLength and the length of the
	                //    result of calling the [[Get]] internal method of
	                //    extensionSubtags with argument ToString(keyPos +1) is greater
	                //    than 2, then
	                if (keyPos + 1 < extensionSubtagsLength
	                        && extensionSubtags[keyPos + 1].length > 2) {
	                    var
	                        // a. Let requestedValue be the result of calling the [[Get]]
	                        //    internal method of extensionSubtags with argument
	                        //    ToString(keyPos + 1).
	                        requestedValue = extensionSubtags[keyPos + 1],
	                        // b. Let valuePos be the result of calling the [[Call]]
	                        //    internal method of indexOf with keyLocaleData as the
	                        //    this value and an argument list containing the single
	                        //    item requestedValue.
	                        valuePos = indexOf.call(keyLocaleData, requestedValue);

	                    // c. If valuePos ≠ -1, then
	                    if (valuePos !== -1)
	                        var
	                            // i. Let value be requestedValue.
	                            value = requestedValue,
	                            // ii. Let supportedExtensionAddition be the
	                            //     concatenation of "-", key, "-", and value.
	                            supportedExtensionAddition = '-' + key + '-' + value;
	                }
	                // 2. Else
	                else {
	                    var
	                        // a. Let valuePos be the result of calling the [[Call]]
	                        // internal method of indexOf with keyLocaleData as the this
	                        // value and an argument list containing the single item
	                        // "true".
	                        valuePos = indexOf(keyLocaleData, 'true');

	                    // b. If valuePos ≠ -1, then
	                    if (valuePos !== -1)
	                        var
	                            // i. Let value be "true".
	                            value = 'true';
	                }
	            }
	        }
	        // h. If options has a field [[<key>]], then
	        if (hop.call(options, '[[' + key + ']]')) {
	            var
	                // i. Let optionsValue be the value of options.[[<key>]].
	                optionsValue = options['[[' + key + ']]'];

	            // ii. If the result of calling the [[Call]] internal method of indexOf
	            //     with keyLocaleData as the this value and an argument list
	            //     containing the single item optionsValue is not -1, then
	            if (indexOf.call(keyLocaleData, optionsValue) !== -1) {
	                // 1. If optionsValue is not equal to value, then
	                if (optionsValue !== value) {
	                    // a. Let value be optionsValue.
	                    value = optionsValue;
	                    // b. Let supportedExtensionAddition be "".
	                    supportedExtensionAddition = '';
	                }
	            }
	        }
	        // i. Set result.[[<key>]] to value.
	        result['[[' + key + ']]'] = value;

	        // j. Append supportedExtensionAddition to supportedExtension.
	        supportedExtension += supportedExtensionAddition;

	        // k. Increase i by 1.
	        i++;
	    }
	    // 12. If the length of supportedExtension is greater than 2, then
	    if (supportedExtension.length > 2) {
	        var
	            // a. Let preExtension be the substring of foundLocale from position 0,
	            //    inclusive, to position extensionIndex, exclusive.
	            preExtension = foundLocale.substring(0, extensionIndex),
	            // b. Let postExtension be the substring of foundLocale from position
	            //    extensionIndex to the end of the string.
	            postExtension = foundLocale.substring(extensionIndex),
	            // c. Let foundLocale be the concatenation of preExtension,
	            //    supportedExtension, and postExtension.
	            foundLocale = preExtension + supportedExtension + postExtension;
	    }
	    // 13. Set result.[[locale]] to foundLocale.
	    result['[[locale]]'] = foundLocale;

	    // 14. Return result.
	    return result;
	}

	/**
	 * The LookupSupportedLocales abstract operation returns the subset of the
	 * provided BCP 47 language priority list requestedLocales for which
	 * availableLocales has a matching locale when using the BCP 47 Lookup algorithm.
	 * Locales appear in the same order in the returned list as in requestedLocales.
	 * The following steps are taken:
	 */
	function /* 9.2.6 */LookupSupportedLocales (availableLocales, requestedLocales) {
	    var
	        // 1. Let len be the number of elements in requestedLocales.
	        len = requestedLocales.length,
	        // 2. Let subset be a new empty List.
	        subset = new List(),
	        // 3. Let k be 0.
	        k = 0;

	    // 4. Repeat while k < len
	    while (k < len) {
	        var
	            // a. Let locale be the element of requestedLocales at 0-origined list
	            //    position k.
	            locale = requestedLocales[k],
	            // b. Let noExtensionsLocale be the String value that is locale with all
	            //    Unicode locale extension sequences removed.
	            noExtensionsLocale = String(locale).replace(expUnicodeExSeq, ''),
	            // c. Let availableLocale be the result of calling the
	            //    BestAvailableLocale abstract operation (defined in 9.2.2) with
	            //    arguments availableLocales and noExtensionsLocale.
	            availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

	        // d. If availableLocale is not undefined, then append locale to the end of
	        //    subset.
	        if (availableLocale !== undefined)
	            arrPush.call(subset, locale);

	        // e. Increment k by 1.
	        k++;
	    }

	    var
	        // 5. Let subsetArray be a new Array object whose elements are the same
	        //    values in the same order as the elements of subset.
	        subsetArray = arrSlice.call(subset);

	    // 6. Return subsetArray.
	    return subsetArray;
	}

	/**
	 * The BestFitSupportedLocales abstract operation returns the subset of the
	 * provided BCP 47 language priority list requestedLocales for which
	 * availableLocales has a matching locale when using the Best Fit Matcher
	 * algorithm. Locales appear in the same order in the returned list as in
	 * requestedLocales. The steps taken are implementation dependent.
	 */
	function /*9.2.7 */BestFitSupportedLocales (availableLocales, requestedLocales) {
	    // ###TODO: implement this function as described by the specification###
	    return LookupSupportedLocales(availableLocales, requestedLocales);
	}

	/**
	 * The SupportedLocales abstract operation returns the subset of the provided BCP
	 * 47 language priority list requestedLocales for which availableLocales has a
	 * matching locale. Two algorithms are available to match the locales: the Lookup
	 * algorithm described in RFC 4647 section 3.4, and an implementation dependent
	 * best-fit algorithm. Locales appear in the same order in the returned list as
	 * in requestedLocales. The following steps are taken:
	 */
	function /*9.2.8 */SupportedLocales (availableLocales, requestedLocales, options) {
	    // 1. If options is not undefined, then
	    if (options !== undefined) {
	        var
	            // a. Let options be ToObject(options).
	            options = new Record(toObject(options)),
	            // b. Let matcher be the result of calling the [[Get]] internal method of
	            //    options with argument "localeMatcher".
	            matcher = options.localeMatcher;

	        // c. If matcher is not undefined, then
	        if (matcher !== undefined) {
	            // i. Let matcher be ToString(matcher).
	            matcher = String(matcher);

	            // ii. If matcher is not "lookup" or "best fit", then throw a RangeError
	            //     exception.
	            if (matcher !== 'lookup' && matcher !== 'best fit')
	                throw new RangeError('matcher should be "lookup" or "best fit"');
	        }
	    }
	    // 2. If matcher is undefined or "best fit", then
	    if (matcher === undefined || matcher === 'best fit')
	        var
	            // a. Let subset be the result of calling the BestFitSupportedLocales
	            //    abstract operation (defined in 9.2.7) with arguments
	            //    availableLocales and requestedLocales.
	            subset = BestFitSupportedLocales(availableLocales, requestedLocales);
	    // 3. Else
	    else
	        var
	            // a. Let subset be the result of calling the LookupSupportedLocales
	            //    abstract operation (defined in 9.2.6) with arguments
	            //    availableLocales and requestedLocales.
	            subset = LookupSupportedLocales(availableLocales, requestedLocales);

	    // 4. For each named own property name P of subset,
	    for (var P in subset) {
	        if (!hop.call(subset, P))
	            continue;

	        // a. Let desc be the result of calling the [[GetOwnProperty]] internal
	        //    method of subset with P.
	        // b. Set desc.[[Writable]] to false.
	        // c. Set desc.[[Configurable]] to false.
	        // d. Call the [[DefineOwnProperty]] internal method of subset with P, desc,
	        //    and true as arguments.
	        defineProperty(subset, P, {
	            writable: false, configurable: false, value: subset[P]
	        });
	    }
	    // "Freeze" the array so no new elements can be added
	    defineProperty(subset, 'length', { writable: false });

	    // 5. Return subset
	    return subset;
	}

	/**
	 * The GetOption abstract operation extracts the value of the property named
	 * property from the provided options object, converts it to the required type,
	 * checks whether it is one of a List of allowed values, and fills in a fallback
	 * value if necessary.
	 */
	function /*9.2.9 */GetOption (options, property, type, values, fallback) {
	    var
	        // 1. Let value be the result of calling the [[Get]] internal method of
	        //    options with argument property.
	        value = options[property];

	    // 2. If value is not undefined, then
	    if (value !== undefined) {
	        // a. Assert: type is "boolean" or "string".
	        // b. If type is "boolean", then let value be ToBoolean(value).
	        // c. If type is "string", then let value be ToString(value).
	        value = type === 'boolean' ? Boolean(value)
	                  : (type === 'string' ? String(value) : value);

	        // d. If values is not undefined, then
	        if (values !== undefined) {
	            // i. If values does not contain an element equal to value, then throw a
	            //    RangeError exception.
	            if (arrIndexOf.call(values, value) === -1)
	                throw new RangeError("'" + value + "' is not an allowed value for `" + property +'`');
	        }

	        // e. Return value.
	        return value;
	    }
	    // Else return fallback.
	    return fallback;
	}

	/**
	 * The GetNumberOption abstract operation extracts a property value from the
	 * provided options object, converts it to a Number value, checks whether it is
	 * in the allowed range, and fills in a fallback value if necessary.
	 */
	function /* 9.2.10 */GetNumberOption (options, property, minimum, maximum, fallback) {
	    var
	        // 1. Let value be the result of calling the [[Get]] internal method of
	        //    options with argument property.
	        value = options[property];

	    // 2. If value is not undefined, then
	    if (value !== undefined) {
	        // a. Let value be ToNumber(value).
	        value = Number(value);

	        // b. If value is NaN or less than minimum or greater than maximum, throw a
	        //    RangeError exception.
	        if (isNaN(value) || value < minimum || value > maximum)
	            throw new RangeError('Value is not a number or outside accepted range');

	        // c. Return floor(value).
	        return Math.floor(value);
	    }
	    // 3. Else return fallback.
	    return fallback;
	}

	// 11.1 The Intl.NumberFormat constructor
	// ======================================

	// Define the NumberFormat constructor internally so it cannot be tainted
	function NumberFormatConstructor () {
	    var locales = arguments[0];
	    var options = arguments[1];

	    if (!this || this === Intl) {
	        return new Intl.NumberFormat(locales, options);
	    }

	    return InitializeNumberFormat(toObject(this), locales, options);
	}

	defineProperty(Intl, 'NumberFormat', {
	    configurable: true,
	    writable: true,
	    value: NumberFormatConstructor
	});

	// Must explicitly set prototypes as unwritable
	defineProperty(Intl.NumberFormat, 'prototype', {
	    writable: false
	});

	/**
	 * The abstract operation InitializeNumberFormat accepts the arguments
	 * numberFormat (which must be an object), locales, and options. It initializes
	 * numberFormat as a NumberFormat object.
	 */
	function /*11.1.1.1 */InitializeNumberFormat (numberFormat, locales, options) {
	    var
	    // This will be a internal properties object if we're not already initialized
	        internal = getInternalProperties(numberFormat),

	    // Create an object whose props can be used to restore the values of RegExp props
	        regexpState = createRegExpRestore();

	    // 1. If numberFormat has an [[initializedIntlObject]] internal property with
	    // value true, throw a TypeError exception.
	    if (internal['[[initializedIntlObject]]'] === true)
	        throw new TypeError('`this` object has already been initialized as an Intl object');

	    // Need this to access the `internal` object
	    defineProperty(numberFormat, '__getInternalProperties', {
	        value: function () {
	            // NOTE: Non-standard, for internal use only
	            if (arguments[0] === secret)
	                return internal;
	        }
	    });

	    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
	    internal['[[initializedIntlObject]]'] = true;

	    var
	    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
	    //    abstract operation (defined in 9.2.1) with argument locales.
	        requestedLocales = CanonicalizeLocaleList(locales);

	    // 4. If options is undefined, then
	    if (options === undefined)
	        // a. Let options be the result of creating a new object as if by the
	        // expression new Object() where Object is the standard built-in constructor
	        // with that name.
	        options = {};

	    // 5. Else
	    else
	        // a. Let options be ToObject(options).
	        options = toObject(options);

	    var
	    // 6. Let opt be a new Record.
	        opt = new Record(),

	    // 7. Let matcher be the result of calling the GetOption abstract operation
	    //    (defined in 9.2.9) with the arguments options, "localeMatcher", "string",
	    //    a List containing the two String values "lookup" and "best fit", and
	    //    "best fit".
	        matcher =  GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

	    // 8. Set opt.[[localeMatcher]] to matcher.
	    opt['[[localeMatcher]]'] = matcher;

	    var
	    // 9. Let NumberFormat be the standard built-in object that is the initial value
	    //    of Intl.NumberFormat.
	    // 10. Let localeData be the value of the [[localeData]] internal property of
	    //     NumberFormat.
	        localeData = internals.NumberFormat['[[localeData]]'],

	    // 11. Let r be the result of calling the ResolveLocale abstract operation
	    //     (defined in 9.2.5) with the [[availableLocales]] internal property of
	    //     NumberFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
	    //     internal property of NumberFormat, and localeData.
	        r = ResolveLocale(
	                internals.NumberFormat['[[availableLocales]]'], requestedLocales,
	                opt, internals.NumberFormat['[[relevantExtensionKeys]]'], localeData
	            );

	    // 12. Set the [[locale]] internal property of numberFormat to the value of
	    //     r.[[locale]].
	    internal['[[locale]]'] = r['[[locale]]'];

	    // 13. Set the [[numberingSystem]] internal property of numberFormat to the value
	    //     of r.[[nu]].
	    internal['[[numberingSystem]]'] = r['[[nu]]'];

	    // The specification doesn't tell us to do this, but it's helpful later on
	    internal['[[dataLocale]]'] = r['[[dataLocale]]'];

	    var
	    // 14. Let dataLocale be the value of r.[[dataLocale]].
	        dataLocale = r['[[dataLocale]]'],

	    // 15. Let s be the result of calling the GetOption abstract operation with the
	    //     arguments options, "style", "string", a List containing the three String
	    //     values "decimal", "percent", and "currency", and "decimal".
	        s = GetOption(options, 'style', 'string', new List('decimal', 'percent', 'currency'), 'decimal');

	    // 16. Set the [[style]] internal property of numberFormat to s.
	    internal['[[style]]'] = s;

	    var
	    // 17. Let c be the result of calling the GetOption abstract operation with the
	    //     arguments options, "currency", "string", undefined, and undefined.
	        c = GetOption(options, 'currency', 'string');

	    // 18. If c is not undefined and the result of calling the
	    //     IsWellFormedCurrencyCode abstract operation (defined in 6.3.1) with
	    //     argument c is false, then throw a RangeError exception.
	    if (c !== undefined && !IsWellFormedCurrencyCode(c))
	        throw new RangeError("'" + c + "' is not a valid currency code");

	    // 19. If s is "currency" and c is undefined, throw a TypeError exception.
	    if (s === 'currency' && c === undefined)
	        throw new TypeError('Currency code is required when style is currency');

	    // 20. If s is "currency", then
	    if (s === 'currency') {
	        // a. Let c be the result of converting c to upper case as specified in 6.1.
	        c = c.toUpperCase();

	        // b. Set the [[currency]] internal property of numberFormat to c.
	        internal['[[currency]]'] = c;

	        var
	        // c. Let cDigits be the result of calling the CurrencyDigits abstract
	        //    operation (defined below) with argument c.
	            cDigits = CurrencyDigits(c);
	    }

	    var
	    // 21. Let cd be the result of calling the GetOption abstract operation with the
	    //     arguments options, "currencyDisplay", "string", a List containing the
	    //     three String values "code", "symbol", and "name", and "symbol".
	        cd = GetOption(options, 'currencyDisplay', 'string', new List('code', 'symbol', 'name'), 'symbol');

	    // 22. If s is "currency", then set the [[currencyDisplay]] internal property of
	    //     numberFormat to cd.
	    if (s === 'currency')
	        internal['[[currencyDisplay]]'] = cd;

	    var
	    // 23. Let mnid be the result of calling the GetNumberOption abstract operation
	    //     (defined in 9.2.10) with arguments options, "minimumIntegerDigits", 1, 21,
	    //     and 1.
	        mnid = GetNumberOption(options, 'minimumIntegerDigits', 1, 21, 1);

	    // 24. Set the [[minimumIntegerDigits]] internal property of numberFormat to mnid.
	    internal['[[minimumIntegerDigits]]'] = mnid;

	    var
	    // 25. If s is "currency", then let mnfdDefault be cDigits; else let mnfdDefault
	    //     be 0.
	        mnfdDefault = s === 'currency' ? cDigits : 0,

	    // 26. Let mnfd be the result of calling the GetNumberOption abstract operation
	    //     with arguments options, "minimumFractionDigits", 0, 20, and mnfdDefault.
	        mnfd = GetNumberOption(options, 'minimumFractionDigits', 0, 20, mnfdDefault);

	    // 27. Set the [[minimumFractionDigits]] internal property of numberFormat to mnfd.
	    internal['[[minimumFractionDigits]]'] = mnfd;

	    var
	    // 28. If s is "currency", then let mxfdDefault be max(mnfd, cDigits); else if s
	    //     is "percent", then let mxfdDefault be max(mnfd, 0); else let mxfdDefault
	    //     be max(mnfd, 3).
	        mxfdDefault = s === 'currency' ? Math.max(mnfd, cDigits)
	                    : (s === 'percent' ? Math.max(mnfd, 0) : Math.max(mnfd, 3)),

	    // 29. Let mxfd be the result of calling the GetNumberOption abstract operation
	    //     with arguments options, "maximumFractionDigits", mnfd, 20, and mxfdDefault.
	        mxfd = GetNumberOption(options, 'maximumFractionDigits', mnfd, 20, mxfdDefault);

	    // 30. Set the [[maximumFractionDigits]] internal property of numberFormat to mxfd.
	    internal['[[maximumFractionDigits]]'] = mxfd;

	    var
	    // 31. Let mnsd be the result of calling the [[Get]] internal method of options
	    //     with argument "minimumSignificantDigits".
	        mnsd = options.minimumSignificantDigits,

	    // 32. Let mxsd be the result of calling the [[Get]] internal method of options
	    //     with argument "maximumSignificantDigits".
	        mxsd = options.maximumSignificantDigits;

	    // 33. If mnsd is not undefined or mxsd is not undefined, then:
	    if (mnsd !== undefined || mxsd !== undefined) {
	        // a. Let mnsd be the result of calling the GetNumberOption abstract
	        //    operation with arguments options, "minimumSignificantDigits", 1, 21,
	        //    and 1.
	        mnsd = GetNumberOption(options, 'minimumSignificantDigits', 1, 21, 1);

	        // b. Let mxsd be the result of calling the GetNumberOption abstract
	        //     operation with arguments options, "maximumSignificantDigits", mnsd,
	        //     21, and 21.
	        mxsd = GetNumberOption(options, 'maximumSignificantDigits', mnsd, 21, 21);

	        // c. Set the [[minimumSignificantDigits]] internal property of numberFormat
	        //    to mnsd, and the [[maximumSignificantDigits]] internal property of
	        //    numberFormat to mxsd.
	        internal['[[minimumSignificantDigits]]'] = mnsd;
	        internal['[[maximumSignificantDigits]]'] = mxsd;
	    }
	    var
	    // 34. Let g be the result of calling the GetOption abstract operation with the
	    //     arguments options, "useGrouping", "boolean", undefined, and true.
	        g = GetOption(options, 'useGrouping', 'boolean', undefined, true);

	    // 35. Set the [[useGrouping]] internal property of numberFormat to g.
	    internal['[[useGrouping]]'] = g;

	    var
	    // 36. Let dataLocaleData be the result of calling the [[Get]] internal method of
	    //     localeData with argument dataLocale.
	        dataLocaleData = localeData[dataLocale],

	    // 37. Let patterns be the result of calling the [[Get]] internal method of
	    //     dataLocaleData with argument "patterns".
	        patterns = dataLocaleData.patterns;

	    // 38. Assert: patterns is an object (see 11.2.3)

	    var
	    // 39. Let stylePatterns be the result of calling the [[Get]] internal method of
	    //     patterns with argument s.
	        stylePatterns = patterns[s];

	    // 40. Set the [[positivePattern]] internal property of numberFormat to the
	    //     result of calling the [[Get]] internal method of stylePatterns with the
	    //     argument "positivePattern".
	    internal['[[positivePattern]]'] = stylePatterns.positivePattern;

	    // 41. Set the [[negativePattern]] internal property of numberFormat to the
	    //     result of calling the [[Get]] internal method of stylePatterns with the
	    //     argument "negativePattern".
	    internal['[[negativePattern]]'] = stylePatterns.negativePattern;

	    // 42. Set the [[boundFormat]] internal property of numberFormat to undefined.
	    internal['[[boundFormat]]'] = undefined;

	    // 43. Set the [[initializedNumberFormat]] internal property of numberFormat to
	    //     true.
	    internal['[[initializedNumberFormat]]'] = true;

	    // In ES3, we need to pre-bind the format() function
	    if (es3)
	        numberFormat.format = GetFormatNumber.call(numberFormat);

	    // Restore the RegExp properties
	    regexpState.exp.test(regexpState.input);

	    // Return the newly initialised object
	    return numberFormat;
	}

	function CurrencyDigits(currency) {
	    // When the CurrencyDigits abstract operation is called with an argument currency
	    // (which must be an upper case String value), the following steps are taken:

	    // 1. If the ISO 4217 currency and funds code list contains currency as an
	    // alphabetic code, then return the minor unit value corresponding to the
	    // currency from the list; else return 2.
	    return currencyMinorUnits[currency] !== undefined
	                ? currencyMinorUnits[currency]
	                : 2;
	}

	/* 11.2.3 */internals.NumberFormat = {
	    '[[availableLocales]]': [],
	    '[[relevantExtensionKeys]]': ['nu'],
	    '[[localeData]]': {}
	};

	/**
	 * When the supportedLocalesOf method of Intl.NumberFormat is called, the
	 * following steps are taken:
	 */
	/* 11.2.2 */defineProperty(Intl.NumberFormat, 'supportedLocalesOf', {
	    configurable: true,
	    writable: true,
	    value: fnBind.call(supportedLocalesOf, internals.NumberFormat)
	});

	/**
	 * This named accessor property returns a function that formats a number
	 * according to the effective locale and the formatting options of this
	 * NumberFormat object.
	 */
	/* 11.3.2 */defineProperty(Intl.NumberFormat.prototype, 'format', {
	    configurable: true,
	    get: GetFormatNumber
	});

	function GetFormatNumber() {
	        var internal = this != null && typeof this === 'object' && getInternalProperties(this);

	        // Satisfy test 11.3_b
	        if (!internal || !internal['[[initializedNumberFormat]]'])
	            throw new TypeError('`this` value for format() is not an initialized Intl.NumberFormat object.');

	        // The value of the [[Get]] attribute is a function that takes the following
	        // steps:

	        // 1. If the [[boundFormat]] internal property of this NumberFormat object
	        //    is undefined, then:
	        if (internal['[[boundFormat]]'] === undefined) {
	            var
	            // a. Let F be a Function object, with internal properties set as
	            //    specified for built-in functions in ES5, 15, or successor, and the
	            //    length property set to 1, that takes the argument value and
	            //    performs the following steps:
	                F = function (value) {
	                    // i. If value is not provided, then let value be undefined.
	                    // ii. Let x be ToNumber(value).
	                    // iii. Return the result of calling the FormatNumber abstract
	                    //      operation (defined below) with arguments this and x.
	                    return FormatNumber(this, /* x = */Number(value));
	                },

	            // b. Let bind be the standard built-in function object defined in ES5,
	            //    15.3.4.5.
	            // c. Let bf be the result of calling the [[Call]] internal method of
	            //    bind with F as the this value and an argument list containing
	            //    the single item this.
	                bf = fnBind.call(F, this);

	            // d. Set the [[boundFormat]] internal property of this NumberFormat
	            //    object to bf.
	            internal['[[boundFormat]]'] = bf;
	        }
	        // Return the value of the [[boundFormat]] internal property of this
	        // NumberFormat object.
	        return internal['[[boundFormat]]'];
	    }

	/**
	 * When the FormatNumber abstract operation is called with arguments numberFormat
	 * (which must be an object initialized as a NumberFormat) and x (which must be a
	 * Number value), it returns a String value representing x according to the
	 * effective locale and the formatting options of numberFormat.
	 */
	function FormatNumber (numberFormat, x) {
	    var n,

	    // Create an object whose props can be used to restore the values of RegExp props
	        regexpState = createRegExpRestore(),

	        internal = getInternalProperties(numberFormat),
	        locale = internal['[[dataLocale]]'],
	        nums   = internal['[[numberingSystem]]'],
	        data   = internals.NumberFormat['[[localeData]]'][locale],
	        ild    = data.symbols[nums] || data.symbols.latn,

	    // 1. Let negative be false.
	        negative = false;

	    // 2. If the result of isFinite(x) is false, then
	    if (isFinite(x) === false) {
	        // a. If x is NaN, then let n be an ILD String value indicating the NaN value.
	        if (isNaN(x))
	            n = ild.nan;

	        // b. Else
	        else {
	            // a. Let n be an ILD String value indicating infinity.
	            n = ild.infinity;
	            // b. If x < 0, then let negative be true.
	            if (x < 0)
	                negative = true;
	        }
	    }
	    // 3. Else
	    else {
	        // a. If x < 0, then
	        if (x < 0) {
	            // i. Let negative be true.
	            negative = true;
	            // ii. Let x be -x.
	            x = -x;
	        }

	        // b. If the value of the [[style]] internal property of numberFormat is
	        //    "percent", let x be 100 × x.
	        if (internal['[[style]]'] === 'percent')
	            x *= 100;

	        // c. If the [[minimumSignificantDigits]] and [[maximumSignificantDigits]]
	        //    internal properties of numberFormat are present, then
	        if (hop.call(internal, '[[minimumSignificantDigits]]') &&
	                hop.call(internal, '[[maximumSignificantDigits]]'))
	            // i. Let n be the result of calling the ToRawPrecision abstract operation
	            //    (defined below), passing as arguments x and the values of the
	            //    [[minimumSignificantDigits]] and [[maximumSignificantDigits]]
	            //    internal properties of numberFormat.
	            n = ToRawPrecision(x,
	                  internal['[[minimumSignificantDigits]]'],
	                  internal['[[maximumSignificantDigits]]']);
	        // d. Else
	        else
	            // i. Let n be the result of calling the ToRawFixed abstract operation
	            //    (defined below), passing as arguments x and the values of the
	            //    [[minimumIntegerDigits]], [[minimumFractionDigits]], and
	            //    [[maximumFractionDigits]] internal properties of numberFormat.
	            n = ToRawFixed(x,
	                  internal['[[minimumIntegerDigits]]'],
	                  internal['[[minimumFractionDigits]]'],
	                  internal['[[maximumFractionDigits]]']);

	        // e. If the value of the [[numberingSystem]] internal property of
	        //    numberFormat matches one of the values in the “Numbering System” column
	        //    of Table 2 below, then
	        if (numSys[nums]) {
	            // i. Let digits be an array whose 10 String valued elements are the
	            //    UTF-16 string representations of the 10 digits specified in the
	            //    “Digits” column of Table 2 in the row containing the value of the
	            //    [[numberingSystem]] internal property.
	            var digits = numSys[internal['[[numberingSystem]]']];
	            // ii. Replace each digit in n with the value of digits[digit].
	            n = String(n).replace(/\d/g, function (digit) {
	                return digits[digit];
	            });
	        }
	        // f. Else use an implementation dependent algorithm to map n to the
	        //    appropriate representation of n in the given numbering system.
	        else
	            n = String(n); // ###TODO###

	        // g. If n contains the character ".", then replace it with an ILND String
	        //    representing the decimal separator.
	        n = n.replace(/\./g, ild.decimal);

	        // h. If the value of the [[useGrouping]] internal property of numberFormat
	        //    is true, then insert an ILND String representing a grouping separator
	        //    into an ILND set of locations within the integer part of n.
	        if (internal['[[useGrouping]]'] === true) {
	            var
	                parts  = n.split(ild.decimal),
	                igr    = parts[0],

	                // Primary group represents the group closest to the decimal
	                pgSize = data.patterns.primaryGroupSize || 3,

	                // Secondary group is every other group
	                sgSize = data.patterns.secondaryGroupSize || pgSize;

	            // Group only if necessary
	            if (igr.length > pgSize) {
	                var
	                    groups = new List(),

	                    // Index of the primary grouping separator
	                    end    = igr.length - pgSize,

	                    // Starting index for our loop
	                    idx    = end % sgSize,

	                    start  = igr.slice(0, idx);

	                if (start.length)
	                    arrPush.call(groups, start);

	                // Loop to separate into secondary grouping digits
	                while (idx < end) {
	                    arrPush.call(groups, igr.slice(idx, idx + sgSize));
	                    idx += sgSize;
	                }

	                // Add the primary grouping digits
	                arrPush.call(groups, igr.slice(end));

	                parts[0] = arrJoin.call(groups, ild.group);
	            }

	            n = arrJoin.call(parts, ild.decimal);
	        }
	    }

	    var
	    // 4. If negative is true, then let result be the value of the [[negativePattern]]
	    //    internal property of numberFormat; else let result be the value of the
	    //    [[positivePattern]] internal property of numberFormat.
	        result = internal[negative === true ? '[[negativePattern]]' : '[[positivePattern]]'];

	    // 5. Replace the substring "{number}" within result with n.
	    result = result.replace('{number}', n);

	    // 6. If the value of the [[style]] internal property of numberFormat is
	    //    "currency", then:
	    if (internal['[[style]]'] === 'currency') {
	        var cd,
	        // a. Let currency be the value of the [[currency]] internal property of
	        //    numberFormat.
	            currency = internal['[[currency]]'],

	        // Shorthand for the currency data
	            cData = data.currencies[currency];

	        // b. If the value of the [[currencyDisplay]] internal property of
	        //    numberFormat is "code", then let cd be currency.
	        // c. Else if the value of the [[currencyDisplay]] internal property of
	        //    numberFormat is "symbol", then let cd be an ILD string representing
	        //    currency in short form. If the implementation does not have such a
	        //    representation of currency, then use currency itself.
	        // d. Else if the value of the [[currencyDisplay]] internal property of
	        //    numberFormat is "name", then let cd be an ILD string representing
	        //    currency in long form. If the implementation does not have such a
	        //    representation of currency, then use currency itself.
	        switch (internal['[[currencyDisplay]]']) {
	            case 'symbol':
	                cd = cData || currency;
	                break;

	            default:
	            case 'code':
	            case 'name':
	                cd = currency;
	        }

	        // e. Replace the substring "{currency}" within result with cd.
	        result = result.replace('{currency}', cd);
	    }

	    // Restore the RegExp properties
	    regexpState.exp.test(regexpState.input);

	    // 7. Return result.
	    return result;
	}

	/**
	 * When the ToRawPrecision abstract operation is called with arguments x (which
	 * must be a finite non-negative number), minPrecision, and maxPrecision (both
	 * must be integers between 1 and 21) the following steps are taken:
	 */
	function ToRawPrecision (x, minPrecision, maxPrecision) {
	    var
	    // 1. Let p be maxPrecision.
	        p = maxPrecision;

	    // 2. If x = 0, then
	    if (x === 0) {
	        var
	        // a. Let m be the String consisting of p occurrences of the character "0".
	            m = arrJoin.call(Array (p + 1), '0'),
	        // b. Let e be 0.
	            e = 0;
	    }
	    // 3. Else
	    else {
	        // a. Let e and n be integers such that 10ᵖ⁻¹ ≤ n < 10ᵖ and for which the
	        //    exact mathematical value of n × 10ᵉ⁻ᵖ⁺¹ – x is as close to zero as
	        //    possible. If there are two such sets of e and n, pick the e and n for
	        //    which n × 10ᵉ⁻ᵖ⁺¹ is larger.
	        var
	            e = log10Floor(Math.abs(x)),

	            // Easier to get to m from here
	            f = Math.round(Math.exp((Math.abs(e - p + 1)) * Math.LN10)),

	        // b. Let m be the String consisting of the digits of the decimal
	        //    representation of n (in order, with no leading zeroes)
	            m = String(Math.round(e - p + 1 < 0 ? x * f : x / f));
	    }

	    // 4. If e ≥ p, then
	    if (e >= p)
	        // a. Return the concatenation of m and e-p+1 occurrences of the character "0".
	        return m + arrJoin.call(Array(e-p+1 + 1), '0');

	    // 5. If e = p-1, then
	    else if (e === p - 1)
	        // a. Return m.
	        return m;

	    // 6. If e ≥ 0, then
	    else if (e >= 0)
	        // a. Let m be the concatenation of the first e+1 characters of m, the character
	        //    ".", and the remaining p–(e+1) characters of m.
	        m = m.slice(0, e + 1) + '.' + m.slice(e + 1);

	    // 7. If e < 0, then
	    else if (e < 0)
	        // a. Let m be the concatenation of the String "0.", –(e+1) occurrences of the
	        //    character "0", and the string m.
	        m = '0.' + arrJoin.call(Array (-(e+1) + 1), '0') + m;

	    // 8. If m contains the character ".", and maxPrecision > minPrecision, then
	    if (m.indexOf(".") >= 0 && maxPrecision > minPrecision) {
	        var
	        // a. Let cut be maxPrecision – minPrecision.
	            cut = maxPrecision - minPrecision;

	        // b. Repeat while cut > 0 and the last character of m is "0":
	        while (cut > 0 && m.charAt(m.length-1) === '0') {
	            //  i. Remove the last character from m.
	            m = m.slice(0, -1);

	            //  ii. Decrease cut by 1.
	            cut--;
	        }

	        // c. If the last character of m is ".", then
	        if (m.charAt(m.length-1) === '.')
	            //    i. Remove the last character from m.
	            m = m.slice(0, -1);
	    }
	    // 9. Return m.
	    return m;
	}

	/**
	 * When the ToRawFixed abstract operation is called with arguments x (which must
	 * be a finite non-negative number), minInteger (which must be an integer between
	 * 1 and 21), minFraction, and maxFraction (which must be integers between 0 and
	 * 20) the following steps are taken:
	 */
	function ToRawFixed (x, minInteger, minFraction, maxFraction) {
	    // (or not because Number.toPrototype.toFixed does a lot of it for us)
	    var idx,

	        // We can pick up after the fixed formatted string (m) is created
	        m   = Number.prototype.toFixed.call(x, maxFraction),

	        // 4. If [maxFraction] ≠ 0, then
	        //    ...
	        //    e. Let int be the number of characters in a.
	        //
	        // 5. Else let int be the number of characters in m.
	        igr = m.split(".")[0].length,  // int is a reserved word

	        // 6. Let cut be maxFraction – minFraction.
	        cut = maxFraction - minFraction,

	        exp = (idx = m.indexOf('e')) > -1 ? m.slice(idx + 1) : 0;

	    if (exp) {
	        m = m.slice(0, idx).replace('.', '');
	        m += arrJoin.call(Array(exp - (m.length - 1) + 1), '0')
	          + '.' + arrJoin.call(Array(maxFraction + 1), '0');

	        igr = m.length;
	    }

	    // 7. Repeat while cut > 0 and the last character of m is "0":
	    while (cut > 0 && m.slice(-1) === "0") {
	        // a. Remove the last character from m.
	        m = m.slice(0, -1);

	        // b. Decrease cut by 1.
	        cut--;
	    }

	    // 8. If the last character of m is ".", then
	    if (m.slice(-1) === ".")
	        // a. Remove the last character from m.
	        m = m.slice(0, -1);

	    // 9. If int < minInteger, then
	    if (igr < minInteger)
	        // a. Let z be the String consisting of minInteger–int occurrences of the
	        //    character "0".
	        var z = arrJoin.call(Array(minInteger - igr + 1), '0');

	    // 10. Let m be the concatenation of Strings z and m.
	    // 11. Return m.
	    return (z ? z : '') + m;
	}

	// Sect 11.3.2 Table 2, Numbering systems
	// ======================================
	var numSys = {
	    arab:    [ '\u0660', '\u0661', '\u0662', '\u0663', '\u0664', '\u0665', '\u0666', '\u0667', '\u0668', '\u0669' ],
	    arabext: [ '\u06F0', '\u06F1', '\u06F2', '\u06F3', '\u06F4', '\u06F5', '\u06F6', '\u06F7', '\u06F8', '\u06F9' ],
	    bali:    [ '\u1B50', '\u1B51', '\u1B52', '\u1B53', '\u1B54', '\u1B55', '\u1B56', '\u1B57', '\u1B58', '\u1B59' ],
	    beng:    [ '\u09E6', '\u09E7', '\u09E8', '\u09E9', '\u09EA', '\u09EB', '\u09EC', '\u09ED', '\u09EE', '\u09EF' ],
	    deva:    [ '\u0966', '\u0967', '\u0968', '\u0969', '\u096A', '\u096B', '\u096C', '\u096D', '\u096E', '\u096F' ],
	    fullwide:[ '\uFF10', '\uFF11', '\uFF12', '\uFF13', '\uFF14', '\uFF15', '\uFF16', '\uFF17', '\uFF18', '\uFF19' ],
	    gujr:    [ '\u0AE6', '\u0AE7', '\u0AE8', '\u0AE9', '\u0AEA', '\u0AEB', '\u0AEC', '\u0AED', '\u0AEE', '\u0AEF' ],
	    guru:    [ '\u0A66', '\u0A67', '\u0A68', '\u0A69', '\u0A6A', '\u0A6B', '\u0A6C', '\u0A6D', '\u0A6E', '\u0A6F' ],
	    hanidec: [ '\u3007', '\u4E00', '\u4E8C', '\u4E09', '\u56DB', '\u4E94', '\u516D', '\u4E03', '\u516B', '\u4E5D' ],
	    khmr:    [ '\u17E0', '\u17E1', '\u17E2', '\u17E3', '\u17E4', '\u17E5', '\u17E6', '\u17E7', '\u17E8', '\u17E9' ],
	    knda:    [ '\u0CE6', '\u0CE7', '\u0CE8', '\u0CE9', '\u0CEA', '\u0CEB', '\u0CEC', '\u0CED', '\u0CEE', '\u0CEF' ],
	    laoo:    [ '\u0ED0', '\u0ED1', '\u0ED2', '\u0ED3', '\u0ED4', '\u0ED5', '\u0ED6', '\u0ED7', '\u0ED8', '\u0ED9' ],
	    latn:    [ '\u0030', '\u0031', '\u0032', '\u0033', '\u0034', '\u0035', '\u0036', '\u0037', '\u0038', '\u0039' ],
	    limb:    [ '\u1946', '\u1947', '\u1948', '\u1949', '\u194A', '\u194B', '\u194C', '\u194D', '\u194E', '\u194F' ],
	    mlym:    [ '\u0D66', '\u0D67', '\u0D68', '\u0D69', '\u0D6A', '\u0D6B', '\u0D6C', '\u0D6D', '\u0D6E', '\u0D6F' ],
	    mong:    [ '\u1810', '\u1811', '\u1812', '\u1813', '\u1814', '\u1815', '\u1816', '\u1817', '\u1818', '\u1819' ],
	    mymr:    [ '\u1040', '\u1041', '\u1042', '\u1043', '\u1044', '\u1045', '\u1046', '\u1047', '\u1048', '\u1049' ],
	    orya:    [ '\u0B66', '\u0B67', '\u0B68', '\u0B69', '\u0B6A', '\u0B6B', '\u0B6C', '\u0B6D', '\u0B6E', '\u0B6F' ],
	    tamldec: [ '\u0BE6', '\u0BE7', '\u0BE8', '\u0BE9', '\u0BEA', '\u0BEB', '\u0BEC', '\u0BED', '\u0BEE', '\u0BEF' ],
	    telu:    [ '\u0C66', '\u0C67', '\u0C68', '\u0C69', '\u0C6A', '\u0C6B', '\u0C6C', '\u0C6D', '\u0C6E', '\u0C6F' ],
	    thai:    [ '\u0E50', '\u0E51', '\u0E52', '\u0E53', '\u0E54', '\u0E55', '\u0E56', '\u0E57', '\u0E58', '\u0E59' ],
	    tibt:    [ '\u0F20', '\u0F21', '\u0F22', '\u0F23', '\u0F24', '\u0F25', '\u0F26', '\u0F27', '\u0F28', '\u0F29' ]
	};

	/**
	 * This function provides access to the locale and formatting options computed
	 * during initialization of the object.
	 *
	 * The function returns a new object whose properties and attributes are set as
	 * if constructed by an object literal assigning to each of the following
	 * properties the value of the corresponding internal property of this
	 * NumberFormat object (see 11.4): locale, numberingSystem, style, currency,
	 * currencyDisplay, minimumIntegerDigits, minimumFractionDigits,
	 * maximumFractionDigits, minimumSignificantDigits, maximumSignificantDigits, and
	 * useGrouping. Properties whose corresponding internal properties are not present
	 * are not assigned.
	 */
	/* 11.3.3 */defineProperty(Intl.NumberFormat.prototype, 'resolvedOptions', {
	    configurable: true,
	    writable: true,
	    value: function () {
	        var prop,
	            descs = new Record(),
	            props = [
	                'locale', 'numberingSystem', 'style', 'currency', 'currencyDisplay',
	                'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits',
	                'minimumSignificantDigits', 'maximumSignificantDigits', 'useGrouping'
	            ],
	            internal = this != null && typeof this === 'object' && getInternalProperties(this);

	        // Satisfy test 11.3_b
	        if (!internal || !internal['[[initializedNumberFormat]]'])
	            throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.NumberFormat object.');

	        for (var i = 0, max = props.length; i < max; i++) {
	            if (hop.call(internal, prop = '[['+ props[i] +']]'))
	                descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
	        }

	        return objCreate({}, descs);
	    }
	});

	// 12.1 The Intl.DateTimeFormat constructor
	// ==================================

	// Define the DateTimeFormat constructor internally so it cannot be tainted
	function DateTimeFormatConstructor () {
	    var locales = arguments[0];
	    var options = arguments[1];

	    if (!this || this === Intl) {
	        return new Intl.DateTimeFormat(locales, options);
	    }
	    return InitializeDateTimeFormat(toObject(this), locales, options);
	}

	defineProperty(Intl, 'DateTimeFormat', {
	    configurable: true,
	    writable: true,
	    value: DateTimeFormatConstructor
	});

	// Must explicitly set prototypes as unwritable
	defineProperty(DateTimeFormatConstructor, 'prototype', {
	    writable: false
	});

	/**
	 * The abstract operation InitializeDateTimeFormat accepts the arguments dateTimeFormat
	 * (which must be an object), locales, and options. It initializes dateTimeFormat as a
	 * DateTimeFormat object.
	 */
	function/* 12.1.1.1 */InitializeDateTimeFormat (dateTimeFormat, locales, options) {
	    var
	    // This will be a internal properties object if we're not already initialized
	        internal = getInternalProperties(dateTimeFormat),

	    // Create an object whose props can be used to restore the values of RegExp props
	        regexpState = createRegExpRestore();

	    // 1. If dateTimeFormat has an [[initializedIntlObject]] internal property with
	    //    value true, throw a TypeError exception.
	    if (internal['[[initializedIntlObject]]'] === true)
	        throw new TypeError('`this` object has already been initialized as an Intl object');

	    // Need this to access the `internal` object
	    defineProperty(dateTimeFormat, '__getInternalProperties', {
	        value: function () {
	            // NOTE: Non-standard, for internal use only
	            if (arguments[0] === secret)
	                return internal;
	        }
	    });

	    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
	    internal['[[initializedIntlObject]]'] = true;

	    var
	    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
	    //    abstract operation (defined in 9.2.1) with argument locales.
	        requestedLocales = CanonicalizeLocaleList(locales),

	    // 4. Let options be the result of calling the ToDateTimeOptions abstract
	    //    operation (defined below) with arguments options, "any", and "date".
	        options = ToDateTimeOptions(options, 'any', 'date'),

	    // 5. Let opt be a new Record.
	        opt = new Record();

	    // 6. Let matcher be the result of calling the GetOption abstract operation
	    //    (defined in 9.2.9) with arguments options, "localeMatcher", "string", a List
	    //    containing the two String values "lookup" and "best fit", and "best fit".
	        matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

	    // 7. Set opt.[[localeMatcher]] to matcher.
	    opt['[[localeMatcher]]'] = matcher;

	    var
	    // 8. Let DateTimeFormat be the standard built-in object that is the initial
	    //    value of Intl.DateTimeFormat.
	        DateTimeFormat = internals.DateTimeFormat, // This is what we *really* need

	    // 9. Let localeData be the value of the [[localeData]] internal property of
	    //    DateTimeFormat.
	        localeData = DateTimeFormat['[[localeData]]'],

	    // 10. Let r be the result of calling the ResolveLocale abstract operation
	    //     (defined in 9.2.5) with the [[availableLocales]] internal property of
	    //      DateTimeFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
	    //      internal property of DateTimeFormat, and localeData.
	        r = ResolveLocale(DateTimeFormat['[[availableLocales]]'], requestedLocales,
	                opt, DateTimeFormat['[[relevantExtensionKeys]]'], localeData);

	    // 11. Set the [[locale]] internal property of dateTimeFormat to the value of
	    //     r.[[locale]].
	    internal['[[locale]]'] = r['[[locale]]'];

	    // 12. Set the [[calendar]] internal property of dateTimeFormat to the value of
	    //     r.[[ca]].
	    internal['[[calendar]]'] = r['[[ca]]'];

	    // 13. Set the [[numberingSystem]] internal property of dateTimeFormat to the value of
	    //     r.[[nu]].
	    internal['[[numberingSystem]]'] = r['[[nu]]'];

	    // The specification doesn't tell us to do this, but it's helpful later on
	    internal['[[dataLocale]]'] = r['[[dataLocale]]'];

	    var
	    // 14. Let dataLocale be the value of r.[[dataLocale]].
	        dataLocale = r['[[dataLocale]]'],

	    // 15. Let tz be the result of calling the [[Get]] internal method of options with
	    //     argument "timeZone".
	        tz = options.timeZone;

	    // 16. If tz is not undefined, then
	    if (tz !== undefined) {
	        // a. Let tz be ToString(tz).
	        // b. Convert tz to upper case as described in 6.1.
	        //    NOTE: If an implementation accepts additional time zone values, as permitted
	        //          under certain conditions by the Conformance clause, different casing
	        //          rules apply.
	        tz = toLatinUpperCase(tz);

	        // c. If tz is not "UTC", then throw a RangeError exception.
	        // ###TODO: accept more time zones###
	        if (tz !== 'UTC')
	            throw new RangeError('timeZone is not supported.');
	    }

	    // 17. Set the [[timeZone]] internal property of dateTimeFormat to tz.
	    internal['[[timeZone]]'] = tz;

	    // 18. Let opt be a new Record.
	    opt = new Record();

	    // 19. For each row of Table 3, except the header row, do:
	    for (var prop in dateTimeComponents) {
	        if (!hop.call(dateTimeComponents, prop))
	            continue;

	        var
	        // 20. Let prop be the name given in the Property column of the row.
	        // 21. Let value be the result of calling the GetOption abstract operation,
	        //     passing as argument options, the name given in the Property column of the
	        //     row, "string", a List containing the strings given in the Values column of
	        //     the row, and undefined.
	            value = GetOption(options, prop, 'string', dateTimeComponents[prop]);

	        // 22. Set opt.[[<prop>]] to value.
	        opt['[['+prop+']]'] = value;
	    }

	    var
	        // Assigned a value below
	        bestFormat,

	        // 23. Let dataLocaleData be the result of calling the [[Get]] internal method of
	        //     localeData with argument dataLocale.
	        dataLocaleData = localeData[dataLocale],

	        // 24. Let formats be the result of calling the [[Get]] internal method of
	        //     dataLocaleData with argument "formats".
	        //     Note: we process the CLDR formats into the spec'd structure
	        formats = ToDateTimeFormats(dataLocaleData.formats),

	        // 25. Let matcher be the result of calling the GetOption abstract operation with
	        //     arguments options, "formatMatcher", "string", a List containing the two String
	        //     values "basic" and "best fit", and "best fit".
	        matcher = GetOption(options, 'formatMatcher', 'string', new List('basic', 'best fit'), 'best fit');

	    // Optimization: caching the processed formats as a one time operation by
	    // replacing the initial structure from localeData
	    dataLocaleData.formats = formats;

	    // 26. If matcher is "basic", then
	    if (matcher === 'basic')
	        // 27. Let bestFormat be the result of calling the BasicFormatMatcher abstract
	        //     operation (defined below) with opt and formats.
	        bestFormat = BasicFormatMatcher(opt, formats);

	    // 28. Else
	    else
	        // 29. Let bestFormat be the result of calling the BestFitFormatMatcher
	        //     abstract operation (defined below) with opt and formats.
	        bestFormat = BestFitFormatMatcher(opt, formats);

	    // 30. For each row in Table 3, except the header row, do
	    for (var prop in dateTimeComponents) {
	        if (!hop.call(dateTimeComponents, prop))
	            continue;

	        // a. Let prop be the name given in the Property column of the row.
	        // b. Let pDesc be the result of calling the [[GetOwnProperty]] internal method of
	        //    bestFormat with argument prop.
	        // c. If pDesc is not undefined, then
	        if (hop.call(bestFormat, prop)) {
	            var
	            // i. Let p be the result of calling the [[Get]] internal method of bestFormat
	            //    with argument prop.
	                p = bestFormat[prop];

	            // ii. Set the [[<prop>]] internal property of dateTimeFormat to p.
	            internal['[['+prop+']]'] = p;
	        }
	    }

	    var
	        // Assigned a value below
	        pattern,

	    // 31. Let hr12 be the result of calling the GetOption abstract operation with
	    //     arguments options, "hour12", "boolean", undefined, and undefined.
	        hr12 = GetOption(options, 'hour12', 'boolean'/*, undefined, undefined*/);

	    // 32. If dateTimeFormat has an internal property [[hour]], then
	    if (internal['[[hour]]']) {
	        // a. If hr12 is undefined, then let hr12 be the result of calling the [[Get]]
	        //    internal method of dataLocaleData with argument "hour12".
	        hr12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;

	        // b. Set the [[hour12]] internal property of dateTimeFormat to hr12.
	        internal['[[hour12]]'] = hr12;

	        // c. If hr12 is true, then
	        if (hr12 === true) {
	            var
	            // i. Let hourNo0 be the result of calling the [[Get]] internal method of
	            //    dataLocaleData with argument "hourNo0".
	                hourNo0 = dataLocaleData.hourNo0;

	            // ii. Set the [[hourNo0]] internal property of dateTimeFormat to hourNo0.
	            internal['[[hourNo0]]'] = hourNo0;

	            // iii. Let pattern be the result of calling the [[Get]] internal method of
	            //      bestFormat with argument "pattern12".
	            pattern = bestFormat.pattern12;
	        }

	        // d. Else
	        else
	            // i. Let pattern be the result of calling the [[Get]] internal method of
	            //    bestFormat with argument "pattern".
	            pattern = bestFormat.pattern;
	    }

	    // 33. Else
	    else
	        // a. Let pattern be the result of calling the [[Get]] internal method of
	        //    bestFormat with argument "pattern".
	        pattern = bestFormat.pattern;

	    // 34. Set the [[pattern]] internal property of dateTimeFormat to pattern.
	    internal['[[pattern]]'] = pattern;

	    // 35. Set the [[boundFormat]] internal property of dateTimeFormat to undefined.
	    internal['[[boundFormat]]'] = undefined;

	    // 36. Set the [[initializedDateTimeFormat]] internal property of dateTimeFormat to
	    //     true.
	    internal['[[initializedDateTimeFormat]]'] = true;

	    // In ES3, we need to pre-bind the format() function
	    if (es3)
	        dateTimeFormat.format = GetFormatDateTime.call(dateTimeFormat);

	    // Restore the RegExp properties
	    regexpState.exp.test(regexpState.input);

	    // Return the newly initialised object
	    return dateTimeFormat;
	}

	/**
	 * Several DateTimeFormat algorithms use values from the following table, which provides
	 * property names and allowable values for the components of date and time formats:
	 */
	var dateTimeComponents = {
	         weekday: [ "narrow", "short", "long" ],
	             era: [ "narrow", "short", "long" ],
	            year: [ "2-digit", "numeric" ],
	           month: [ "2-digit", "numeric", "narrow", "short", "long" ],
	             day: [ "2-digit", "numeric" ],
	            hour: [ "2-digit", "numeric" ],
	          minute: [ "2-digit", "numeric" ],
	          second: [ "2-digit", "numeric" ],
	    timeZoneName: [ "short", "long" ]
	};

	/**
	 * When the ToDateTimeOptions abstract operation is called with arguments options,
	 * required, and defaults, the following steps are taken:
	 */
	function ToDateTimeFormats(formats) {
	    if (Object.prototype.toString.call(formats) === '[object Array]') {
	        return formats;
	    }
	    return src$cldr$$.createDateTimeFormats(formats);
	}

	/**
	 * When the ToDateTimeOptions abstract operation is called with arguments options,
	 * required, and defaults, the following steps are taken:
	 */
	function ToDateTimeOptions (options, required, defaults) {
	    // 1. If options is undefined, then let options be null, else let options be
	    //    ToObject(options).
	    if (options === undefined)
	        options = null;

	    else {
	        // (#12) options needs to be a Record, but it also needs to inherit properties
	        var opt2 = toObject(options);
	        options = new Record();

	        for (var k in opt2)
	            options[k] = opt2[k];
	    }

	    var
	    // 2. Let create be the standard built-in function object defined in ES5, 15.2.3.5.
	        create = objCreate,

	    // 3. Let options be the result of calling the [[Call]] internal method of create with
	    //    undefined as the this value and an argument list containing the single item
	    //    options.
	        options = create(options),

	    // 4. Let needDefaults be true.
	        needDefaults = true;

	    // 5. If required is "date" or "any", then
	    if (required === 'date' || required === 'any') {
	        // a. For each of the property names "weekday", "year", "month", "day":
	            // i. If the result of calling the [[Get]] internal method of options with the
	            //    property name is not undefined, then let needDefaults be false.
	        if (options.weekday !== undefined || options.year !== undefined
	                || options.month !== undefined || options.day !== undefined)
	            needDefaults = false;
	    }

	    // 6. If required is "time" or "any", then
	    if (required === 'time' || required === 'any') {
	        // a. For each of the property names "hour", "minute", "second":
	            // i. If the result of calling the [[Get]] internal method of options with the
	            //    property name is not undefined, then let needDefaults be false.
	        if (options.hour !== undefined || options.minute !== undefined || options.second !== undefined)
	                needDefaults = false;
	    }

	    // 7. If needDefaults is true and defaults is either "date" or "all", then
	    if (needDefaults && (defaults === 'date' || defaults === 'all'))
	        // a. For each of the property names "year", "month", "day":
	            // i. Call the [[DefineOwnProperty]] internal method of options with the
	            //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
	            //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
	        options.year = options.month = options.day = 'numeric';

	    // 8. If needDefaults is true and defaults is either "time" or "all", then
	    if (needDefaults && (defaults === 'time' || defaults === 'all'))
	        // a. For each of the property names "hour", "minute", "second":
	            // i. Call the [[DefineOwnProperty]] internal method of options with the
	            //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
	            //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
	        options.hour = options.minute = options.second = 'numeric';

	    // 9. Return options.
	    return options;
	}

	/**
	 * When the BasicFormatMatcher abstract operation is called with two arguments options and
	 * formats, the following steps are taken:
	 */
	function BasicFormatMatcher (options, formats) {
	    return calculateScore(options, formats);
	}

	/**
	 * Calculates score for BestFitFormatMatcher and BasicFormatMatcher.
	 * Abstracted from BasicFormatMatcher section.
	 */
	function calculateScore (options, formats, bestFit) {
	    var
	    // Additional penalty type when bestFit === true
	       diffDataTypePenalty = 8,

	    // 1. Let removalPenalty be 120.
	        removalPenalty = 120,

	    // 2. Let additionPenalty be 20.
	        additionPenalty = 20,

	    // 3. Let longLessPenalty be 8.
	        longLessPenalty = 8,

	    // 4. Let longMorePenalty be 6.
	        longMorePenalty = 6,

	    // 5. Let shortLessPenalty be 6.
	        shortLessPenalty = 6,

	    // 6. Let shortMorePenalty be 3.
	        shortMorePenalty = 3,

	    // 7. Let bestScore be -Infinity.
	        bestScore = -Infinity,

	    // 8. Let bestFormat be undefined.
	        bestFormat,

	    // 9. Let i be 0.
	        i = 0,

	    // 10. Let len be the result of calling the [[Get]] internal method of formats with argument "length".
	        len = formats.length;

	    // 11. Repeat while i < len:
	    while (i < len) {
	        var
	        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).
	            format = formats[i],

	        // b. Let score be 0.
	            score = 0;

	        // c. For each property shown in Table 3:
	        for (var property in dateTimeComponents) {
	            if (!hop.call(dateTimeComponents, property))
	                continue;

	            var
	            // i. Let optionsProp be options.[[<property>]].
	                optionsProp = options['[['+ property +']]'],

	            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format
	            //     with argument property.
	            // iii. If formatPropDesc is not undefined, then
	            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.
	                formatProp = hop.call(format, property) ? format[property] : undefined;

	            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by
	            //     additionPenalty.
	            if (optionsProp === undefined && formatProp !== undefined)
	                score -= additionPenalty;

	            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by
	            //    removalPenalty.
	            else if (optionsProp !== undefined && formatProp === undefined)
	                score -= removalPenalty;

	            // vi. Else
	            else {
	                var
	                // 1. Let values be the array ["2-digit", "numeric", "narrow", "short",
	                //    "long"].
	                    values = [ '2-digit', 'numeric', 'narrow', 'short', 'long' ],

	                // 2. Let optionsPropIndex be the index of optionsProp within values.
	                    optionsPropIndex = arrIndexOf.call(values, optionsProp),

	                // 3. Let formatPropIndex be the index of formatProp within values.
	                    formatPropIndex = arrIndexOf.call(values, formatProp),

	                // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).
	                    delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);

	                // When the bestFit argument is true, subtract additional penalty where data types are not the same
	                if (bestFit && (
	                    ((optionsProp === 'numeric' || optionsProp === '2-digit') && (formatProp !== 'numeric' && formatProp !== '2-digit') || (optionsProp !== 'numeric' && optionsProp !== '2-digit') && (formatProp === '2-digit' || formatProp === 'numeric'))
	                ))
	                    score -= diffDataTypePenalty;

	                // 5. If delta = 2, decrease score by longMorePenalty.
	                if (delta === 2)
	                    score -= longMorePenalty;

	                // 6. Else if delta = 1, decrease score by shortMorePenalty.
	                else if (delta === 1)
	                    score -= shortMorePenalty;

	                // 7. Else if delta = -1, decrease score by shortLessPenalty.
	                else if (delta === -1)
	                    score -= shortLessPenalty;

	                // 8. Else if delta = -2, decrease score by longLessPenalty.
	                else if (delta === -2)
	                    score -= longLessPenalty;
	            }
	        }

	        // d. If score > bestScore, then
	        if (score > bestScore) {
	            // i. Let bestScore be score.
	            bestScore = score;

	            // ii. Let bestFormat be format.
	            bestFormat = format;
	        }

	        // e. Increase i by 1.
	        i++;
	    }

	    // 12. Return bestFormat.
	    return bestFormat;
	}

	/**
	 * When the BestFitFormatMatcher abstract operation is called with two arguments options
	 * and formats, it performs implementation dependent steps, which should return a set of
	 * component representations that a typical user of the selected locale would perceive as
	 * at least as good as the one returned by BasicFormatMatcher.
	 *
	 * This polyfill defines the algorithm to be the same as BasicFormatMatcher,
	 * with the addition of bonus points awarded where the requested format is of
	 * the same data type as the potentially matching format.
	 *
	 * For example,
	 *
	 *     { month: 'numeric', day: 'numeric' }
	 *
	 * should match
	 *
	 *     { month: '2-digit', day: '2-digit' }
	 *
	 * rather than
	 *
	 *     { month: 'short', day: 'numeric' }
	 *
	 * This makes sense because a user requesting a formatted date with numeric parts would
	 * not expect to see the returned format containing narrow, short or long part names
	 */
	function BestFitFormatMatcher (options, formats) {
	    return calculateScore(options, formats, true);
	}

	/* 12.2.3 */internals.DateTimeFormat = {
	    '[[availableLocales]]': [],
	    '[[relevantExtensionKeys]]': ['ca', 'nu'],
	    '[[localeData]]': {}
	};

	/**
	 * When the supportedLocalesOf method of Intl.DateTimeFormat is called, the
	 * following steps are taken:
	 */
	/* 12.2.2 */defineProperty(Intl.DateTimeFormat, 'supportedLocalesOf', {
	    configurable: true,
	    writable: true,
	    value: fnBind.call(supportedLocalesOf, internals.DateTimeFormat)
	});

	/**
	 * This named accessor property returns a function that formats a number
	 * according to the effective locale and the formatting options of this
	 * DateTimeFormat object.
	 */
	/* 12.3.2 */defineProperty(Intl.DateTimeFormat.prototype, 'format', {
	    configurable: true,
	    get: GetFormatDateTime
	});

	function GetFormatDateTime() {
	    var internal = this != null && typeof this === 'object' && getInternalProperties(this);

	    // Satisfy test 12.3_b
	    if (!internal || !internal['[[initializedDateTimeFormat]]'])
	        throw new TypeError('`this` value for format() is not an initialized Intl.DateTimeFormat object.');

	    // The value of the [[Get]] attribute is a function that takes the following
	    // steps:

	    // 1. If the [[boundFormat]] internal property of this DateTimeFormat object
	    //    is undefined, then:
	    if (internal['[[boundFormat]]'] === undefined) {
	        var
	        // a. Let F be a Function object, with internal properties set as
	        //    specified for built-in functions in ES5, 15, or successor, and the
	        //    length property set to 0, that takes the argument date and
	        //    performs the following steps:
	            F = function () {
	                //   i. If date is not provided or is undefined, then let x be the
	                //      result as if by the expression Date.now() where Date.now is
	                //      the standard built-in function defined in ES5, 15.9.4.4.
	                //  ii. Else let x be ToNumber(date).
	                // iii. Return the result of calling the FormatDateTime abstract
	                //      operation (defined below) with arguments this and x.
	                var x = Number(arguments.length === 0 ? Date.now() : arguments[0]);
	                return FormatDateTime(this, x);
	            },
	        // b. Let bind be the standard built-in function object defined in ES5,
	        //    15.3.4.5.
	        // c. Let bf be the result of calling the [[Call]] internal method of
	        //    bind with F as the this value and an argument list containing
	        //    the single item this.
	            bf = fnBind.call(F, this);
	        // d. Set the [[boundFormat]] internal property of this NumberFormat
	        //    object to bf.
	        internal['[[boundFormat]]'] = bf;
	    }
	    // Return the value of the [[boundFormat]] internal property of this
	    // NumberFormat object.
	    return internal['[[boundFormat]]'];
	}

	/**
	 * When the FormatDateTime abstract operation is called with arguments dateTimeFormat
	 * (which must be an object initialized as a DateTimeFormat) and x (which must be a Number
	 * value), it returns a String value representing x (interpreted as a time value as
	 * specified in ES5, 15.9.1.1) according to the effective locale and the formatting
	 * options of dateTimeFormat.
	 */
	function FormatDateTime(dateTimeFormat, x) {
	    // 1. If x is not a finite Number, then throw a RangeError exception.
	    if (!isFinite(x))
	        throw new RangeError('Invalid valid date passed to format');

	    var
	        internal = dateTimeFormat.__getInternalProperties(secret),

	    // Creating restore point for properties on the RegExp object... please wait
	        regexpState = createRegExpRestore(),

	    // 2. Let locale be the value of the [[locale]] internal property of dateTimeFormat.
	        locale = internal['[[locale]]'],

	    // 3. Let nf be the result of creating a new NumberFormat object as if by the
	    // expression new Intl.NumberFormat([locale], {useGrouping: false}) where
	    // Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
	        nf = new Intl.NumberFormat([locale], {useGrouping: false}),

	    // 4. Let nf2 be the result of creating a new NumberFormat object as if by the
	    // expression new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping:
	    // false}) where Intl.NumberFormat is the standard built-in constructor defined in
	    // 11.1.3.
	        nf2 = new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping: false}),

	    // 5. Let tm be the result of calling the ToLocalTime abstract operation (defined
	    // below) with x, the value of the [[calendar]] internal property of dateTimeFormat,
	    // and the value of the [[timeZone]] internal property of dateTimeFormat.
	        tm = ToLocalTime(x, internal['[[calendar]]'], internal['[[timeZone]]']),

	    // 6. Let result be the value of the [[pattern]] internal property of dateTimeFormat.
	        result = internal['[[pattern]]'],

	    // Need the locale minus any extensions
	        dataLocale = internal['[[dataLocale]]'],

	    // Need the calendar data from CLDR
	        localeData = internals.DateTimeFormat['[[localeData]]'][dataLocale].calendars,
	        ca = internal['[[calendar]]'];

	    // 7. For each row of Table 3, except the header row, do:
	    for (var p in dateTimeComponents) {
	        // a. If dateTimeFormat has an internal property with the name given in the
	        //    Property column of the row, then:
	        if (hop.call(internal, '[['+ p +']]')) {
	            var
	            // Assigned values below
	                pm, fv,

	            //   i. Let p be the name given in the Property column of the row.
	            //  ii. Let f be the value of the [[<p>]] internal property of dateTimeFormat.
	                f = internal['[['+ p +']]'],

	            // iii. Let v be the value of tm.[[<p>]].
	                v = tm['[['+ p +']]'];

	            //  iv. If p is "year" and v ≤ 0, then let v be 1 - v.
	            if (p === 'year' && v <= 0)
	                v = 1 - v;

	            //   v. If p is "month", then increase v by 1.
	            else if (p === 'month')
	                v++;

	            //  vi. If p is "hour" and the value of the [[hour12]] internal property of
	            //      dateTimeFormat is true, then
	            else if (p === 'hour' && internal['[[hour12]]'] === true) {
	                // 1. Let v be v modulo 12.
	                v = v % 12;

	                // 2. If v is equal to the value of tm.[[<p>]], then let pm be false; else
	                //    let pm be true.
	                pm = v !== tm['[['+ p +']]'];

	                // 3. If v is 0 and the value of the [[hourNo0]] internal property of
	                //    dateTimeFormat is true, then let v be 12.
	                if (v === 0 && internal['[[hourNo0]]'] === true)
	                    v = 12;
	            }

	            // vii. If f is "numeric", then
	            if (f === 'numeric')
	                // 1. Let fv be the result of calling the FormatNumber abstract operation
	                //    (defined in 11.3.2) with arguments nf and v.
	                fv = FormatNumber(nf, v);

	            // viii. Else if f is "2-digit", then
	            else if (f === '2-digit') {
	                // 1. Let fv be the result of calling the FormatNumber abstract operation
	                //    with arguments nf2 and v.
	                fv = FormatNumber(nf2, v);

	                // 2. If the length of fv is greater than 2, let fv be the substring of fv
	                //    containing the last two characters.
	                if (fv.length > 2)
	                    fv = fv.slice(-2);
	            }

	            // ix. Else if f is "narrow", "short", or "long", then let fv be a String
	            //     value representing f in the desired form; the String value depends upon
	            //     the implementation and the effective locale and calendar of
	            //     dateTimeFormat. If p is "month", then the String value may also depend
	            //     on whether dateTimeFormat has a [[day]] internal property. If p is
	            //     "timeZoneName", then the String value may also depend on the value of
	            //     the [[inDST]] field of tm.
	            else if (f in dateWidths) {
	                switch (p) {
	                    case 'month':
	                        fv = resolveDateString(localeData, ca, 'months', f, tm['[['+ p +']]']);
	                        break;

	                    case 'weekday':
	                        try {
	                            fv = resolveDateString(localeData, ca, 'days', f, tm['[['+ p +']]']);
	                            // fv = resolveDateString(ca.days, f)[tm['[['+ p +']]']];
	                        } catch (e) {
	                            throw new Error('Could not find weekday data for locale '+locale);
	                        }
	                        break;

	                    case 'timeZoneName':
	                        fv = ''; // TODO
	                        break;

	                    // TODO: Era
	                    default:
	                        fv = tm['[['+ p +']]'];
	                }
	            }

	            // x. Replace the substring of result that consists of "{", p, and "}", with
	            //    fv.
	            result = result.replace('{'+ p +'}', fv);
	        }
	    }
	    // 8. If dateTimeFormat has an internal property [[hour12]] whose value is true, then
	    if (internal['[[hour12]]'] === true) {
	        // a. If pm is true, then let fv be an implementation and locale dependent String
	        //    value representing “post meridiem”; else let fv be an implementation and
	        //    locale dependent String value representing “ante meridiem”.
	        fv = resolveDateString(localeData, ca, 'dayPeriods', pm ? 'pm' : 'am');

	        // b. Replace the substring of result that consists of "{ampm}", with fv.
	        result = result.replace('{ampm}', fv);
	    }

	    // Restore properties of the RegExp object
	    regexpState.exp.test(regexpState.input);

	    // 9. Return result.
	    return result;
	}

	/**
	 * When the ToLocalTime abstract operation is called with arguments date, calendar, and
	 * timeZone, the following steps are taken:
	 */
	function ToLocalTime(date, calendar, timeZone) {
	    // 1. Apply calendrical calculations on date for the given calendar and time zone to
	    //    produce weekday, era, year, month, day, hour, minute, second, and inDST values.
	    //    The calculations should use best available information about the specified
	    //    calendar and time zone. If the calendar is "gregory", then the calculations must
	    //    match the algorithms specified in ES5, 15.9.1, except that calculations are not
	    //    bound by the restrictions on the use of best available information on time zones
	    //    for local time zone adjustment and daylight saving time adjustment imposed by
	    //    ES5, 15.9.1.7 and 15.9.1.8.
	    // ###TODO###
	    var d = new Date(date),
	        m = 'get' + (timeZone || '');

	    // 2. Return a Record with fields [[weekday]], [[era]], [[year]], [[month]], [[day]],
	    //    [[hour]], [[minute]], [[second]], and [[inDST]], each with the corresponding
	    //    calculated value.
	    return new Record({
	        '[[weekday]]': d[m + 'Day'](),
	        '[[era]]'    : +(d[m + 'FullYear']() >= 0),
	        '[[year]]'   : d[m + 'FullYear'](),
	        '[[month]]'  : d[m + 'Month'](),
	        '[[day]]'    : d[m + 'Date'](),
	        '[[hour]]'   : d[m + 'Hours'](),
	        '[[minute]]' : d[m + 'Minutes'](),
	        '[[second]]' : d[m + 'Seconds'](),
	        '[[inDST]]'  : false // ###TODO###
	    });
	}

	/**
	 * The function returns a new object whose properties and attributes are set as if
	 * constructed by an object literal assigning to each of the following properties the
	 * value of the corresponding internal property of this DateTimeFormat object (see 12.4):
	 * locale, calendar, numberingSystem, timeZone, hour12, weekday, era, year, month, day,
	 * hour, minute, second, and timeZoneName. Properties whose corresponding internal
	 * properties are not present are not assigned.
	 */
	/* 12.3.3 */defineProperty(Intl.DateTimeFormat.prototype, 'resolvedOptions', {
	    writable: true,
	    configurable: true,
	    value: function () {
	        var prop,
	            descs = new Record(),
	            props = [
	                'locale', 'calendar', 'numberingSystem', 'timeZone', 'hour12', 'weekday',
	                'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName'
	            ],
	            internal = this != null && typeof this === 'object' && getInternalProperties(this);

	        // Satisfy test 12.3_b
	        if (!internal || !internal['[[initializedDateTimeFormat]]'])
	            throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.DateTimeFormat object.');

	        for (var i = 0, max = props.length; i < max; i++) {
	            if (hop.call(internal, prop = '[[' + props[i] + ']]'))
	                descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
	        }

	        return objCreate({}, descs);
	    }
	});

	// Sect 13 Locale Sensitive Functions of the ECMAScript Language Specification
	// ===========================================================================

	var ls = Intl.__localeSensitiveProtos = {
	    Number: {},
	    Date:   {}
	};

	/**
	 * When the toLocaleString method is called with optional arguments locales and options,
	 * the following steps are taken:
	 */
	/* 13.2.1 */ls.Number.toLocaleString = function () {
	    // Satisfy test 13.2.1_1
	    if (Object.prototype.toString.call(this) !== '[object Number]')
	        throw new TypeError('`this` value must be a number for Number.prototype.toLocaleString()');

	    // 1. Let x be this Number value (as defined in ES5, 15.7.4).
	    // 2. If locales is not provided, then let locales be undefined.
	    // 3. If options is not provided, then let options be undefined.
	    // 4. Let numberFormat be the result of creating a new object as if by the
	    //    expression new Intl.NumberFormat(locales, options) where
	    //    Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
	    // 5. Return the result of calling the FormatNumber abstract operation
	    //    (defined in 11.3.2) with arguments numberFormat and x.
	    return FormatNumber(new NumberFormatConstructor(arguments[0], arguments[1]), this);
	};

	/**
	 * When the toLocaleString method is called with optional arguments locales and options,
	 * the following steps are taken:
	 */
	/* 13.3.1 */ls.Date.toLocaleString = function () {
	    // Satisfy test 13.3.0_1
	    if (Object.prototype.toString.call(this) !== '[object Date]')
	        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleString()');

	    var
	    // 1. Let x be this time value (as defined in ES5, 15.9.5).
	        x = +this;

	    // 2. If x is NaN, then return "Invalid Date".
	    if (isNaN(x))
	        return 'Invalid Date';

	    var
	    // 3. If locales is not provided, then let locales be undefined.
	        locales = arguments[0],

	    // 4. If options is not provided, then let options be undefined.
	        options = arguments[1],

	    // 5. Let options be the result of calling the ToDateTimeOptions abstract
	    //    operation (defined in 12.1.1) with arguments options, "any", and "all".
	        options = ToDateTimeOptions(options, 'any', 'all'),

	    // 6. Let dateTimeFormat be the result of creating a new object as if by the
	    //    expression new Intl.DateTimeFormat(locales, options) where
	    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
	        dateTimeFormat = new DateTimeFormatConstructor(locales, options);

	    // 7. Return the result of calling the FormatDateTime abstract operation (defined
	    //    in 12.3.2) with arguments dateTimeFormat and x.
	    return FormatDateTime(dateTimeFormat, x);
	};

	/**
	 * When the toLocaleDateString method is called with optional arguments locales and
	 * options, the following steps are taken:
	 */
	/* 13.3.2 */ls.Date.toLocaleDateString = function () {
	    // Satisfy test 13.3.0_1
	    if (Object.prototype.toString.call(this) !== '[object Date]')
	        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleDateString()');

	    var
	    // 1. Let x be this time value (as defined in ES5, 15.9.5).
	        x = +this;

	    // 2. If x is NaN, then return "Invalid Date".
	    if (isNaN(x))
	        return 'Invalid Date';

	    var
	    // 3. If locales is not provided, then let locales be undefined.
	        locales = arguments[0],

	    // 4. If options is not provided, then let options be undefined.
	        options = arguments[1],

	    // 5. Let options be the result of calling the ToDateTimeOptions abstract
	    //    operation (defined in 12.1.1) with arguments options, "date", and "date".
	        options = ToDateTimeOptions(options, 'date', 'date'),

	    // 6. Let dateTimeFormat be the result of creating a new object as if by the
	    //    expression new Intl.DateTimeFormat(locales, options) where
	    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
	        dateTimeFormat = new DateTimeFormatConstructor(locales, options);

	    // 7. Return the result of calling the FormatDateTime abstract operation (defined
	    //    in 12.3.2) with arguments dateTimeFormat and x.
	    return FormatDateTime(dateTimeFormat, x);
	};

	/**
	 * When the toLocaleTimeString method is called with optional arguments locales and
	 * options, the following steps are taken:
	 */
	/* 13.3.3 */ls.Date.toLocaleTimeString = function () {
	    // Satisfy test 13.3.0_1
	    if (Object.prototype.toString.call(this) !== '[object Date]')
	        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleTimeString()');

	    var
	    // 1. Let x be this time value (as defined in ES5, 15.9.5).
	        x = +this;

	    // 2. If x is NaN, then return "Invalid Date".
	    if (isNaN(x))
	        return 'Invalid Date';

	    var
	    // 3. If locales is not provided, then let locales be undefined.
	        locales = arguments[0],

	    // 4. If options is not provided, then let options be undefined.
	        options = arguments[1],

	    // 5. Let options be the result of calling the ToDateTimeOptions abstract
	    //    operation (defined in 12.1.1) with arguments options, "time", and "time".
	        options = ToDateTimeOptions(options, 'time', 'time'),

	    // 6. Let dateTimeFormat be the result of creating a new object as if by the
	    //    expression new Intl.DateTimeFormat(locales, options) where
	    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
	        dateTimeFormat = new DateTimeFormatConstructor(locales, options);

	    // 7. Return the result of calling the FormatDateTime abstract operation (defined
	    //    in 12.3.2) with arguments dateTimeFormat and x.
	    return FormatDateTime(dateTimeFormat, x);
	};

	defineProperty(Intl, '__applyLocaleSensitivePrototypes', {
	    writable: true,
	    configurable: true,
	    value: function () {
	        defineProperty(Number.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Number.toLocaleString });
	        // Need this here for IE 8, to avoid the _DontEnum_ bug
	        defineProperty(Date.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Date.toLocaleString });

	        for (var k in ls.Date) {
	            if (hop.call(ls.Date, k))
	                defineProperty(Date.prototype, k, { writable: true, configurable: true, value: ls.Date[k] });
	        }
	    }
	});

	/**
	 * Can't really ship a single script with data for hundreds of locales, so we provide
	 * this __addLocaleData method as a means for the developer to add the data on an
	 * as-needed basis
	 */
	defineProperty(Intl, '__addLocaleData', {
	    value: function (data) {
	        if (!IsStructurallyValidLanguageTag(data.locale))
	            throw new Error("Object passed doesn't identify itself with a valid language tag");

	        addLocaleData(data, data.locale);
	    }
	});

	function addLocaleData (data, tag) {
	    // Both NumberFormat and DateTimeFormat require number data, so throw if it isn't present
	    if (!data.number)
	        throw new Error("Object passed doesn't contain locale data for Intl.NumberFormat");

	    var locale,
	        locales = [ tag ],
	        parts   = tag.split('-');

	    // Create fallbacks for locale data with scripts, e.g. Latn, Hans, Vaii, etc
	    if (parts.length > 2 && parts[1].length === 4)
	        arrPush.call(locales, parts[0] + '-' + parts[2]);

	    while (locale = arrShift.call(locales)) {
	        // Add to NumberFormat internal properties as per 11.2.3
	        arrPush.call(internals.NumberFormat['[[availableLocales]]'], locale);
	        internals.NumberFormat['[[localeData]]'][locale] = data.number;

	        // ...and DateTimeFormat internal properties as per 12.2.3
	        if (data.date) {
	            data.date.nu = data.number.nu;
	            arrPush.call(internals.DateTimeFormat['[[availableLocales]]'], locale);
	            internals.DateTimeFormat['[[localeData]]'][locale] = data.date;
	        }
	    }

	    // If this is the first set of locale data added, make it the default
	    if (defaultLocale === undefined)
	        defaultLocale = tag;

	    // 11.3 (the NumberFormat prototype object is an Intl.NumberFormat instance)
	    if (!numberFormatProtoInitialised) {
	        InitializeNumberFormat(Intl.NumberFormat.prototype);
	        numberFormatProtoInitialised = true;
	    }

	    // 11.3 (the NumberFormat prototype object is an Intl.NumberFormat instance)
	    if (data.date && !dateTimeFormatProtoInitialised) {
	        InitializeDateTimeFormat(Intl.DateTimeFormat.prototype);
	        dateTimeFormatProtoInitialised = true;
	    }
	}

	// Helper functions
	// ================

	/**
	 * A function to deal with the inaccuracy of calculating log10 in pre-ES6
	 * JavaScript environments. Math.log(num) / Math.LN10 was responsible for
	 * causing issue #62.
	 */
	function log10Floor (n) {
	    // ES6 provides the more accurate Math.log10
	    if (typeof Math.log10 === 'function')
	        return Math.floor(Math.log10(n));

	    var x = Math.round(Math.log(n) * Math.LOG10E);
	    return x - (Number('1e' + x) > n);
	}

	/**
	 * A merge of the Intl.{Constructor}.supportedLocalesOf functions
	 * To make life easier, the function should be bound to the constructor's internal
	 * properties object.
	 */
	function supportedLocalesOf(locales) {
	    /*jshint validthis:true */

	    // Bound functions only have the `this` value altered if being used as a constructor,
	    // this lets us imitate a native function that has no constructor
	    if (!hop.call(this, '[[availableLocales]]'))
	        throw new TypeError('supportedLocalesOf() is not a constructor');

	    var
	    // Create an object whose props can be used to restore the values of RegExp props
	        regexpState = createRegExpRestore(),

	    // 1. If options is not provided, then let options be undefined.
	        options = arguments[1],

	    // 2. Let availableLocales be the value of the [[availableLocales]] internal
	    //    property of the standard built-in object that is the initial value of
	    //    Intl.NumberFormat.

	        availableLocales = this['[[availableLocales]]'],

	    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
	    //    abstract operation (defined in 9.2.1) with argument locales.
	        requestedLocales = CanonicalizeLocaleList(locales);

	    // Restore the RegExp properties
	    regexpState.exp.test(regexpState.input);

	    // 4. Return the result of calling the SupportedLocales abstract operation
	    //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,
	    //    and options.
	    return SupportedLocales(availableLocales, requestedLocales, options);
	}

	/**
	 * Returns a string for a date component, resolved using multiple inheritance as specified
	 * as specified in the Unicode Technical Standard 35.
	 */
	function resolveDateString(data, ca, component, width, key) {
	    // From http://www.unicode.org/reports/tr35/tr35.html#Multiple_Inheritance:
	    // 'In clearly specified instances, resources may inherit from within the same locale.
	    //  For example, ... the Buddhist calendar inherits from the Gregorian calendar.'
	    var obj = data[ca] && data[ca][component]
	                ? data[ca][component]
	                : data.gregory[component],

	        // "sideways" inheritance resolves strings when a key doesn't exist
	        alts = {
	            narrow: ['short', 'long'],
	            short:  ['long', 'narrow'],
	            long:   ['short', 'narrow']
	        },

	        //
	        resolved = hop.call(obj, width)
	                  ? obj[width]
	                  : hop.call(obj, alts[width][0])
	                      ? obj[alts[width][0]]
	                      : obj[alts[width][1]];

	    // `key` wouldn't be specified for components 'dayPeriods'
	    return key != null ? resolved[key] : resolved;
	}

	/**
	 * A map that doesn't contain Object in its prototype chain
	 */
	Record.prototype = objCreate(null);
	function Record (obj) {
	    // Copy only own properties over unless this object is already a Record instance
	    for (var k in obj) {
	        if (obj instanceof Record || hop.call(obj, k))
	            defineProperty(this, k, { value: obj[k], enumerable: true, writable: true, configurable: true });
	    }
	}

	/**
	 * An ordered list
	 */
	List.prototype = objCreate(null);
	function List() {
	    defineProperty(this, 'length', { writable:true, value: 0 });

	    if (arguments.length)
	        arrPush.apply(this, arrSlice.call(arguments));
	}

	/**
	 * Constructs a regular expression to restore tainted RegExp properties
	 */
	function createRegExpRestore () {
	    var esc = /[.?*+^$[\]\\(){}|-]/g,
	        lm  = RegExp.lastMatch || '',
	        ml  = RegExp.multiline ? 'm' : '',
	        ret = { input: RegExp.input },
	        reg = new List(),
	        has = false,
	        cap = {};

	    // Create a snapshot of all the 'captured' properties
	    for (var i = 1; i <= 9; i++)
	        has = (cap['$'+i] = RegExp['$'+i]) || has;

	    // Now we've snapshotted some properties, escape the lastMatch string
	    lm = lm.replace(esc, '\\$&');

	    // If any of the captured strings were non-empty, iterate over them all
	    if (has) {
	        for (var i = 1; i <= 9; i++) {
	            var m = cap['$'+i];

	            // If it's empty, add an empty capturing group
	            if (!m)
	                lm = '()' + lm;

	            // Else find the string in lm and escape & wrap it to capture it
	            else {
	                m = m.replace(esc, '\\$&');
	                lm = lm.replace(m, '(' + m + ')');
	            }

	            // Push it to the reg and chop lm to make sure further groups come after
	            arrPush.call(reg, lm.slice(0, lm.indexOf('(') + 1));
	            lm = lm.slice(lm.indexOf('(') + 1);
	        }
	    }

	    // Create the regular expression that will reconstruct the RegExp properties
	    ret.exp = new RegExp(arrJoin.call(reg, '') + lm, ml);

	    return ret;
	}

	/**
	 * Convert only a-z to uppercase as per section 6.1 of the spec
	 */
	function toLatinUpperCase (str) {
	    var i = str.length;

	    while (i--) {
	        var ch = str.charAt(i);

	        if (ch >= "a" && ch <= "z")
	            str = str.slice(0, i) + ch.toUpperCase() + str.slice(i+1);
	    }

	    return str;
	}

	/**
	 * Mimics ES5's abstract ToObject() function
	 */
	function toObject (arg) {
	    if (arg == null)
	        throw new TypeError('Cannot convert null or undefined to object');

	    return Object(arg);
	}

	/**
	 * Returns "internal" properties for an object
	 */
	function getInternalProperties (obj) {
	    if (hop.call(obj, '__getInternalProperties'))
	        return obj.__getInternalProperties(secret);
	    else
	        return objCreate(null);
	}

	exports["default"] = Intl;

	//# sourceMappingURL=core.js.map

/***/ },
/* 57 */
/***/ function(module, exports) {

	/* jshint esnext: true, laxbreak:true */

	/**
	* Defines regular expressions for various operations related to the BCP 47 syntax,
	* as defined at http://tools.ietf.org/html/bcp47#section-2.1
	*/

	"use strict";

	var
	    // extlang       = 3ALPHA              ; selected ISO 639 codes
	    //                 *2("-" 3ALPHA)      ; permanently reserved
	    extlang = '[a-z]{3}(?:-[a-z]{3}){0,2}',

	    // language      = 2*3ALPHA            ; shortest ISO 639 code
	    //                 ["-" extlang]       ; sometimes followed by
	    //                                     ; extended language subtags
	    //               / 4ALPHA              ; or reserved for future use
	    //               / 5*8ALPHA            ; or registered language subtag
	    language = '(?:[a-z]{2,3}(?:-' + extlang + ')?|[a-z]{4}|[a-z]{5,8})',

	    // script        = 4ALPHA              ; ISO 15924 code
	    script = '[a-z]{4}',

	    // region        = 2ALPHA              ; ISO 3166-1 code
	    //               / 3DIGIT              ; UN M.49 code
	    region = '(?:[a-z]{2}|\\d{3})',

	    // variant       = 5*8alphanum         ; registered variants
	    //               / (DIGIT 3alphanum)
	    variant = '(?:[a-z0-9]{5,8}|\\d[a-z0-9]{3})',

	    //                                     ; Single alphanumerics
	    //                                     ; "x" reserved for private use
	    // singleton     = DIGIT               ; 0 - 9
	    //               / %x41-57             ; A - W
	    //               / %x59-5A             ; Y - Z
	    //               / %x61-77             ; a - w
	    //               / %x79-7A             ; y - z
	    singleton = '[0-9a-wy-z]',

	    // extension     = singleton 1*("-" (2*8alphanum))
	    extension = singleton + '(?:-[a-z0-9]{2,8})+',

	    // privateuse    = "x" 1*("-" (1*8alphanum))
	    privateuse = 'x(?:-[a-z0-9]{1,8})+',

	    // irregular     = "en-GB-oed"         ; irregular tags do not match
	    //               / "i-ami"             ; the 'langtag' production and
	    //               / "i-bnn"             ; would not otherwise be
	    //               / "i-default"         ; considered 'well-formed'
	    //               / "i-enochian"        ; These tags are all valid,
	    //               / "i-hak"             ; but most are deprecated
	    //               / "i-klingon"         ; in favor of more modern
	    //               / "i-lux"             ; subtags or subtag
	    //               / "i-mingo"           ; combination
	    //               / "i-navajo"
	    //               / "i-pwn"
	    //               / "i-tao"
	    //               / "i-tay"
	    //               / "i-tsu"
	    //               / "sgn-BE-FR"
	    //               / "sgn-BE-NL"
	    //               / "sgn-CH-DE"
	    irregular = '(?:en-GB-oed'
	              + '|i-(?:ami|bnn|default|enochian|hak|klingon|lux|mingo|navajo|pwn|tao|tay|tsu)'
	              + '|sgn-(?:BE-FR|BE-NL|CH-DE))',

	    // regular       = "art-lojban"        ; these tags match the 'langtag'
	    //               / "cel-gaulish"       ; production, but their subtags
	    //               / "no-bok"            ; are not extended language
	    //               / "no-nyn"            ; or variant subtags: their meaning
	    //               / "zh-guoyu"          ; is defined by their registration
	    //               / "zh-hakka"          ; and all of these are deprecated
	    //               / "zh-min"            ; in favor of a more modern
	    //               / "zh-min-nan"        ; subtag or sequence of subtags
	    //               / "zh-xiang"
	    regular = '(?:art-lojban|cel-gaulish|no-bok|no-nyn'
	            + '|zh-(?:guoyu|hakka|min|min-nan|xiang))',

	    // grandfathered = irregular           ; non-redundant tags registered
	    //               / regular             ; during the RFC 3066 era
	    grandfathered = '(?:' + irregular + '|' + regular + ')',

	    // langtag       = language
	    //                 ["-" script]
	    //                 ["-" region]
	    //                 *("-" variant)
	    //                 *("-" extension)
	    //                 ["-" privateuse]
	    langtag = language + '(?:-' + script + ')?(?:-' + region + ')?(?:-'
	            + variant + ')*(?:-' + extension + ')*(?:-' + privateuse + ')?';

	var expBCP47Syntax = RegExp('^(?:'+langtag+'|'+privateuse+'|'+grandfathered+')$', 'i');

	var expVariantDupes = RegExp('^(?!x).*?-('+variant+')-(?:\\w{4,8}-(?!x-))*\\1\\b', 'i');

	var expSingletonDupes = RegExp('^(?!x).*?-('+singleton+')-(?:\\w+-(?!x-))*\\1\\b', 'i');

	var expExtSequences = RegExp('-'+extension, 'ig');
	exports.expBCP47Syntax = expBCP47Syntax, exports.expVariantDupes = expVariantDupes, exports.expSingletonDupes = expSingletonDupes, exports.expExtSequences = expExtSequences;

	//# sourceMappingURL=exp.js.map

/***/ },
/* 58 */
/***/ function(module, exports) {

	/* jslint esnext: true */

	// Match these datetime components in a CLDR pattern, except those in single quotes
	"use strict";
	exports.createDateTimeFormat = createDateTimeFormat, exports.createDateTimeFormats = createDateTimeFormats;
	var expDTComponents = /(?:[Eec]{1,6}|G{1,5}|(?:[yYu]+|U{1,5})|[ML]{1,5}|d{1,2}|a|[hkHK]{1,2}|m{1,2}|s{1,2}|z{1,4})(?=([^']*'[^']*')*[^']*$)/g;

	// Skip over patterns with these datetime components
	var unwantedDTCs = /[QxXVOvZASjgFDwWIQqH]/;

	// Maps the number of characters in a CLDR pattern to the specification
	var dtcLengthMap = {
	        month:   [ 'numeric', '2-digit', 'short', 'long', 'narrow' ],
	        weekday: [ 'short', 'short', 'short', 'long', 'narrow' ],
	        era:     [ 'short', 'short', 'short', 'long', 'narrow' ]
	    };

	var dtKeys = ["weekday", "era", "year", "month", "day"];
	var tmKeys = ["hour", "minute", "second", "timeZoneName"];

	function isDateFormatOnly(obj) {
	    for (var i = 0; i < tmKeys.length; i += 1) {
	        if (obj.hasOwnProperty(tmKeys[i])) {
	            return false;
	        }
	    }
	    return true;
	}

	function isTimeFormatOnly(obj) {
	    for (var i = 0; i < dtKeys.length; i += 1) {
	        if (obj.hasOwnProperty(dtKeys[i])) {
	            return false;
	        }
	    }
	    return true;
	}

	function createDateTimeFormat(format) {
	    if (unwantedDTCs.test(format))
	        return undefined;

	    var formatObj = {};

	    // Replace the pattern string with the one required by the specification, whilst
	    // at the same time evaluating it for the subsets and formats
	    formatObj.pattern = format.replace(expDTComponents, function ($0) {
	        // See which symbol we're dealing with
	        switch ($0.charAt(0)) {
	            case 'E':
	            case 'e':
	            case 'c':
	                formatObj.weekday = dtcLengthMap.weekday[$0.length-1];
	                return '{weekday}';

	            // Not supported yet
	            case 'G':
	                formatObj.era = dtcLengthMap.era[$0.length-1];
	                return '{era}';

	            case 'y':
	            case 'Y':
	            case 'u':
	            case 'U':
	                formatObj.year = $0.length === 2 ? '2-digit' : 'numeric';
	                return '{year}';

	            case 'M':
	            case 'L':
	                formatObj.month = dtcLengthMap.month[$0.length-1];
	                return '{month}';

	            case 'd':
	                formatObj.day = $0.length === 2 ? '2-digit' : 'numeric';
	                return '{day}';

	            case 'a':
	                return '{ampm}';

	            case 'h':
	            case 'H':
	            case 'k':
	            case 'K':
	                formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
	                return '{hour}';

	            case 'm':
	                formatObj.minute = $0.length === 2 ? '2-digit' : 'numeric';
	                return '{minute}';

	            case 's':
	                formatObj.second = $0.length === 2 ? '2-digit' : 'numeric';
	                return '{second}';

	            case 'z':
	                formatObj.timeZoneName = $0.length < 4 ? 'short' : 'long';
	                return '{timeZoneName}';
	        }
	    });

	    // From http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns:
	    //  'In patterns, two single quotes represents a literal single quote, either
	    //   inside or outside single quotes. Text within single quotes is not
	    //   interpreted in any way (except for two adjacent single quotes).'
	    formatObj.pattern = formatObj.pattern.replace(/'([^']*)'/g, function ($0, literal) {
	        return literal ? literal : "'";
	    });

	    if (formatObj.pattern.indexOf('{ampm}') > -1) {
	        formatObj.hour12 = true;
	        formatObj.pattern12 = formatObj.pattern;
	        formatObj.pattern = formatObj.pattern.replace('{ampm}', '').replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
	    }

	    return formatObj;
	}

	function createDateTimeFormats(formats) {
	    var availableFormats = formats.availableFormats;
	    var timeFormats = formats.timeFormats;
	    var dateFormats = formats.dateFormats;
	    var order = formats.medium;
	    var result = [];
	    var key, format, computed, i, j;
	    var timeRelatedFormats = [];
	    var dateRelatedFormats = [];

	    function expandFormat(key, pattern) {
	        // Expand component lengths if necessary, as allowed in the LDML spec
	        // Get the lengths of 'M' and 'E' substrings in the date pattern
	        // as arrays that can be joined to create a new substring
	        var M = new Array((key.match(/M/g)||[]).length + 1);
	        var E = new Array((key.match(/E/g)||[]).length + 1);

	        // note from caridy: I'm not sure we really need this, seems to be
	        //                   useless since it relies on the keys from CLDR
	        //                   instead of the actual format pattern, but I'm not sure.
	        if (M.length > 2)
	            pattern = pattern.replace(/(M|L)+/, M.join('$1'));

	        if (E.length > 2)
	            pattern = pattern.replace(/([Eec])+/, E.join('$1'));

	        return pattern;
	    }

	    // Map available (custom) formats into a pattern for createDateTimeFormats
	    for (key in availableFormats) {
	        if (availableFormats.hasOwnProperty(key)) {
	            format = expandFormat(key, availableFormats[key]);
	            computed = createDateTimeFormat(format);
	            if (computed) {
	                result.push(computed);
	                // in some cases, the format is only displaying date specific props
	                // or time specific props, in which case we need to also produce the
	                // combined formats.
	                if (isDateFormatOnly(computed)) {
	                    dateRelatedFormats.push(format);
	                } else if (isTimeFormatOnly(computed)) {
	                    timeRelatedFormats.push(format);
	                }
	            }
	        }
	    }

	    // combine custom time and custom date formats when they are orthogonals to complete the
	    // formats supported by browsers by relying on the value of "formats.medium" which defines
	    // how to join custom formats into a single pattern.
	    for (i = 0; i < timeRelatedFormats.length; i += 1) {
	        for (j = 0; j < dateRelatedFormats.length; j += 1) {
	            format = order
	                .replace('{0}', timeRelatedFormats[i])
	                .replace('{1}', dateRelatedFormats[j])
	                .replace(/^[,\s]+|[,\s]+$/gi, '');
	            computed = createDateTimeFormat(format);
	            if (computed) {
	                result.push(computed);
	            }
	        }
	    }

	    // Map time formats into a pattern for createDateTimeFormats
	    for (key in timeFormats) {
	        if (timeFormats.hasOwnProperty(key)) {
	            format = expandFormat(key, timeFormats[key]);
	            computed = createDateTimeFormat(format);
	            if (computed) {
	                result.push(computed);
	            }
	        }
	    }

	    // Map date formats into a pattern for createDateTimeFormats
	    for (key in dateFormats) {
	        if (dateFormats.hasOwnProperty(key)) {
	            format = expandFormat(key, dateFormats[key]);
	            computed = createDateTimeFormat(format);
	            if (computed) {
	                result.push(computed);
	            }
	        }
	    }

	    return result;
	}

	//# sourceMappingURL=cldr.js.map

/***/ },
/* 59 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/* jshint node:true */
	'use strict';

	// Expose `React` as a global, because the ReactIntlMixin assumes it's global.
	var oldReact = global.React;
	global.React = __webpack_require__(2);

	// Require the lib and add all locale data to `ReactIntl`. This module will be
	// ignored when bundling for the browser with Browserify/Webpack.
	var ReactIntl = __webpack_require__(61);
	__webpack_require__(92);

	// Export the Mixin as the default export for back-compat with v1.0.0. This will
	// be changed to simply re-exporting `ReactIntl` as the default export in v2.0.
	exports = module.exports = ReactIntl.IntlMixin;

	// Define non-enumerable expandos for each named export on the default export --
	// which is the Mixin for back-compat with v1.0.0.
	Object.keys(ReactIntl).forEach(function (namedExport) {
	    Object.defineProperty(exports, namedExport, {
	        enumerable: true,
	        value     : ReactIntl[namedExport]
	    });
	});

	// Put back `global.React` to how it was.
	if (oldReact) {
	    global.React = oldReact;
	} else {
	    // IE < 9 will throw when trying to delete something off the global object,
	    // `window`, so this does the next best thing as sets it to `undefined`.
	    try {
	        delete global.React;
	    } catch (e) {
	        global.React = undefined;
	    }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext: true */

	"use strict";
	exports.__addLocaleData = __addLocaleData;
	var intl$messageformat$$ = __webpack_require__(62), intl$relativeformat$$ = __webpack_require__(72), src$en$$ = __webpack_require__(79), src$mixin$$ = __webpack_require__(80), src$components$date$$ = __webpack_require__(85), src$components$time$$ = __webpack_require__(86), src$components$relative$$ = __webpack_require__(87), src$components$number$$ = __webpack_require__(88), src$components$message$$ = __webpack_require__(89), src$components$html$message$$ = __webpack_require__(90);
	function __addLocaleData(data) {
	    intl$messageformat$$["default"].__addLocaleData(data);
	    intl$relativeformat$$["default"].__addLocaleData(data);
	}

	__addLocaleData(src$en$$["default"]);
	exports.IntlMixin = src$mixin$$["default"], exports.FormattedDate = src$components$date$$["default"], exports.FormattedTime = src$components$time$$["default"], exports.FormattedRelative = src$components$relative$$["default"], exports.FormattedNumber = src$components$number$$["default"], exports.FormattedMessage = src$components$message$$["default"], exports.FormattedHTMLMessage = src$components$html$message$$["default"];

	//# sourceMappingURL=react-intl.js.map

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint node:true */

	'use strict';

	var IntlMessageFormat = __webpack_require__(63)['default'];

	// Add all locale data to `IntlMessageFormat`. This module will be ignored when
	// bundling for the browser with Browserify/Webpack.
	__webpack_require__(71);

	// Re-export `IntlMessageFormat` as the CommonJS default exports with all the
	// locale data registered, and with English set as the default locale. Define
	// the `default` prop for use with other compiled ES6 Modules.
	exports = module.exports = IntlMessageFormat;
	exports['default'] = exports;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* jslint esnext: true */

	"use strict";
	var src$core$$ = __webpack_require__(64), src$en$$ = __webpack_require__(70);

	src$core$$["default"].__addLocaleData(src$en$$["default"]);
	src$core$$["default"].defaultLocale = 'en';

	exports["default"] = src$core$$["default"];

	//# sourceMappingURL=main.js.map

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Yahoo! Inc. All rights reserved.
	Copyrights licensed under the New BSD License.
	See the accompanying LICENSE file for terms.
	*/

	/* jslint esnext: true */

	"use strict";
	var src$utils$$ = __webpack_require__(65), src$es5$$ = __webpack_require__(66), src$compiler$$ = __webpack_require__(67), intl$messageformat$parser$$ = __webpack_require__(68);
	exports["default"] = MessageFormat;

	// -- MessageFormat --------------------------------------------------------

	function MessageFormat(message, locales, formats) {
	    // Parse string messages into an AST.
	    var ast = typeof message === 'string' ?
	            MessageFormat.__parse(message) : message;

	    if (!(ast && ast.type === 'messageFormatPattern')) {
	        throw new TypeError('A message must be provided as a String or AST.');
	    }

	    // Creates a new object with the specified `formats` merged with the default
	    // formats.
	    formats = this._mergeFormats(MessageFormat.formats, formats);

	    // Defined first because it's used to build the format pattern.
	    src$es5$$.defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});

	    // Compile the `ast` to a pattern that is highly optimized for repeated
	    // `format()` invocations. **Note:** This passes the `locales` set provided
	    // to the constructor instead of just the resolved locale.
	    var pluralFn = this._findPluralRuleFunction(this._locale);
	    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);

	    // "Bind" `format()` method to `this` so it can be passed by reference like
	    // the other `Intl` APIs.
	    var messageFormat = this;
	    this.format = function (values) {
	        return messageFormat._format(pattern, values);
	    };
	}

	// Default format options used as the prototype of the `formats` provided to the
	// constructor. These are used when constructing the internal Intl.NumberFormat
	// and Intl.DateTimeFormat instances.
	src$es5$$.defineProperty(MessageFormat, 'formats', {
	    enumerable: true,

	    value: {
	        number: {
	            'currency': {
	                style: 'currency'
	            },

	            'percent': {
	                style: 'percent'
	            }
	        },

	        date: {
	            'short': {
	                month: 'numeric',
	                day  : 'numeric',
	                year : '2-digit'
	            },

	            'medium': {
	                month: 'short',
	                day  : 'numeric',
	                year : 'numeric'
	            },

	            'long': {
	                month: 'long',
	                day  : 'numeric',
	                year : 'numeric'
	            },

	            'full': {
	                weekday: 'long',
	                month  : 'long',
	                day    : 'numeric',
	                year   : 'numeric'
	            }
	        },

	        time: {
	            'short': {
	                hour  : 'numeric',
	                minute: 'numeric'
	            },

	            'medium':  {
	                hour  : 'numeric',
	                minute: 'numeric',
	                second: 'numeric'
	            },

	            'long': {
	                hour        : 'numeric',
	                minute      : 'numeric',
	                second      : 'numeric',
	                timeZoneName: 'short'
	            },

	            'full': {
	                hour        : 'numeric',
	                minute      : 'numeric',
	                second      : 'numeric',
	                timeZoneName: 'short'
	            }
	        }
	    }
	});

	// Define internal private properties for dealing with locale data.
	src$es5$$.defineProperty(MessageFormat, '__localeData__', {value: src$es5$$.objCreate(null)});
	src$es5$$.defineProperty(MessageFormat, '__addLocaleData', {value: function (data) {
	    if (!(data && data.locale)) {
	        throw new Error(
	            'Locale data provided to IntlMessageFormat is missing a ' +
	            '`locale` property'
	        );
	    }

	    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;
	}});

	// Defines `__parse()` static method as an exposed private.
	src$es5$$.defineProperty(MessageFormat, '__parse', {value: intl$messageformat$parser$$["default"].parse});

	// Define public `defaultLocale` property which defaults to English, but can be
	// set by the developer.
	src$es5$$.defineProperty(MessageFormat, 'defaultLocale', {
	    enumerable: true,
	    writable  : true,
	    value     : undefined
	});

	MessageFormat.prototype.resolvedOptions = function () {
	    // TODO: Provide anything else?
	    return {
	        locale: this._locale
	    };
	};

	MessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {
	    var compiler = new src$compiler$$["default"](locales, formats, pluralFn);
	    return compiler.compile(ast);
	};

	MessageFormat.prototype._findPluralRuleFunction = function (locale) {
	    var localeData = MessageFormat.__localeData__;
	    var data       = localeData[locale.toLowerCase()];

	    // The locale data is de-duplicated, so we have to traverse the locale's
	    // hierarchy until we find a `pluralRuleFunction` to return.
	    while (data) {
	        if (data.pluralRuleFunction) {
	            return data.pluralRuleFunction;
	        }

	        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];
	    }

	    throw new Error(
	        'Locale data added to IntlMessageFormat is missing a ' +
	        '`pluralRuleFunction` for :' + locale
	    );
	};

	MessageFormat.prototype._format = function (pattern, values) {
	    var result = '',
	        i, len, part, id, value;

	    for (i = 0, len = pattern.length; i < len; i += 1) {
	        part = pattern[i];

	        // Exist early for string parts.
	        if (typeof part === 'string') {
	            result += part;
	            continue;
	        }

	        id = part.id;

	        // Enforce that all required values are provided by the caller.
	        if (!(values && src$utils$$.hop.call(values, id))) {
	            throw new Error('A value must be provided for: ' + id);
	        }

	        value = values[id];

	        // Recursively format plural and select parts' option — which can be a
	        // nested pattern structure. The choosing of the option to use is
	        // abstracted-by and delegated-to the part helper object.
	        if (part.options) {
	            result += this._format(part.getOption(value), values);
	        } else {
	            result += part.format(value);
	        }
	    }

	    return result;
	};

	MessageFormat.prototype._mergeFormats = function (defaults, formats) {
	    var mergedFormats = {},
	        type, mergedType;

	    for (type in defaults) {
	        if (!src$utils$$.hop.call(defaults, type)) { continue; }

	        mergedFormats[type] = mergedType = src$es5$$.objCreate(defaults[type]);

	        if (formats && src$utils$$.hop.call(formats, type)) {
	            src$utils$$.extend(mergedType, formats[type]);
	        }
	    }

	    return mergedFormats;
	};

	MessageFormat.prototype._resolveLocale = function (locales) {
	    if (typeof locales === 'string') {
	        locales = [locales];
	    }

	    // Create a copy of the array so we can push on the default locale.
	    locales = (locales || []).concat(MessageFormat.defaultLocale);

	    var localeData = MessageFormat.__localeData__;
	    var i, len, localeParts, data;

	    // Using the set of locales + the default locale, we look for the first one
	    // which that has been registered. When data does not exist for a locale, we
	    // traverse its ancestors to find something that's been registered within
	    // its hierarchy of locales. Since we lack the proper `parentLocale` data
	    // here, we must take a naive approach to traversal.
	    for (i = 0, len = locales.length; i < len; i += 1) {
	        localeParts = locales[i].toLowerCase().split('-');

	        while (localeParts.length) {
	            data = localeData[localeParts.join('-')];
	            if (data) {
	                // Return the normalized locale string; e.g., we return "en-US",
	                // instead of "en-us".
	                return data.locale;
	            }

	            localeParts.pop();
	        }
	    }

	    var defaultLocale = locales.pop();
	    throw new Error(
	        'No locale data has been added to IntlMessageFormat for: ' +
	        locales.join(', ') + ', or the default locale: ' + defaultLocale
	    );
	};

	//# sourceMappingURL=core.js.map

/***/ },
/* 65 */
/***/ function(module, exports) {

	/*
	Copyright (c) 2014, Yahoo! Inc. All rights reserved.
	Copyrights licensed under the New BSD License.
	See the accompanying LICENSE file for terms.
	*/

	/* jslint esnext: true */

	"use strict";
	exports.extend = extend;
	var hop = Object.prototype.hasOwnProperty;

	function extend(obj) {
	    var sources = Array.prototype.slice.call(arguments, 1),
	        i, len, source, key;

	    for (i = 0, len = sources.length; i < len; i += 1) {
	        source = sources[i];
	        if (!source) { continue; }

	        for (key in source) {
	            if (hop.call(source, key)) {
	                obj[key] = source[key];
	            }
	        }
	    }

	    return obj;
	}
	exports.hop = hop;

	//# sourceMappingURL=utils.js.map

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Yahoo! Inc. All rights reserved.
	Copyrights licensed under the New BSD License.
	See the accompanying LICENSE file for terms.
	*/

	/* jslint esnext: true */

	"use strict";
	var src$utils$$ = __webpack_require__(65);

	// Purposely using the same implementation as the Intl.js `Intl` polyfill.
	// Copyright 2013 Andy Earnshaw, MIT License

	var realDefineProp = (function () {
	    try { return !!Object.defineProperty({}, 'a', {}); }
	    catch (e) { return false; }
	})();

	var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

	var defineProperty = realDefineProp ? Object.defineProperty :
	        function (obj, name, desc) {

	    if ('get' in desc && obj.__defineGetter__) {
	        obj.__defineGetter__(name, desc.get);
	    } else if (!src$utils$$.hop.call(obj, name) || 'value' in desc) {
	        obj[name] = desc.value;
	    }
	};

	var objCreate = Object.create || function (proto, props) {
	    var obj, k;

	    function F() {}
	    F.prototype = proto;
	    obj = new F();

	    for (k in props) {
	        if (src$utils$$.hop.call(props, k)) {
	            defineProperty(obj, k, props[k]);
	        }
	    }

	    return obj;
	};
	exports.defineProperty = defineProperty, exports.objCreate = objCreate;

	//# sourceMappingURL=es5.js.map

/***/ },
/* 67 */
/***/ function(module, exports) {

	/*
	Copyright (c) 2014, Yahoo! Inc. All rights reserved.
	Copyrights licensed under the New BSD License.
	See the accompanying LICENSE file for terms.
	*/

	/* jslint esnext: true */

	"use strict";
	exports["default"] = Compiler;

	function Compiler(locales, formats, pluralFn) {
	    this.locales  = locales;
	    this.formats  = formats;
	    this.pluralFn = pluralFn;
	}

	Compiler.prototype.compile = function (ast) {
	    this.pluralStack        = [];
	    this.currentPlural      = null;
	    this.pluralNumberFormat = null;

	    return this.compileMessage(ast);
	};

	Compiler.prototype.compileMessage = function (ast) {
	    if (!(ast && ast.type === 'messageFormatPattern')) {
	        throw new Error('Message AST is not of type: "messageFormatPattern"');
	    }

	    var elements = ast.elements,
	        pattern  = [];

	    var i, len, element;

	    for (i = 0, len = elements.length; i < len; i += 1) {
	        element = elements[i];

	        switch (element.type) {
	            case 'messageTextElement':
	                pattern.push(this.compileMessageText(element));
	                break;

	            case 'argumentElement':
	                pattern.push(this.compileArgument(element));
	                break;

	            default:
	                throw new Error('Message element does not have a valid type');
	        }
	    }

	    return pattern;
	};

	Compiler.prototype.compileMessageText = function (element) {
	    // When this `element` is part of plural sub-pattern and its value contains
	    // an unescaped '#', use a `PluralOffsetString` helper to properly output
	    // the number with the correct offset in the string.
	    if (this.currentPlural && /(^|[^\\])#/g.test(element.value)) {
	        // Create a cache a NumberFormat instance that can be reused for any
	        // PluralOffsetString instance in this message.
	        if (!this.pluralNumberFormat) {
	            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);
	        }

	        return new PluralOffsetString(
	                this.currentPlural.id,
	                this.currentPlural.format.offset,
	                this.pluralNumberFormat,
	                element.value);
	    }

	    // Unescape the escaped '#'s in the message text.
	    return element.value.replace(/\\#/g, '#');
	};

	Compiler.prototype.compileArgument = function (element) {
	    var format = element.format;

	    if (!format) {
	        return new StringFormat(element.id);
	    }

	    var formats  = this.formats,
	        locales  = this.locales,
	        pluralFn = this.pluralFn,
	        options;

	    switch (format.type) {
	        case 'numberFormat':
	            options = formats.number[format.style];
	            return {
	                id    : element.id,
	                format: new Intl.NumberFormat(locales, options).format
	            };

	        case 'dateFormat':
	            options = formats.date[format.style];
	            return {
	                id    : element.id,
	                format: new Intl.DateTimeFormat(locales, options).format
	            };

	        case 'timeFormat':
	            options = formats.time[format.style];
	            return {
	                id    : element.id,
	                format: new Intl.DateTimeFormat(locales, options).format
	            };

	        case 'pluralFormat':
	            options = this.compileOptions(element);
	            return new PluralFormat(
	                element.id, format.ordinal, format.offset, options, pluralFn
	            );

	        case 'selectFormat':
	            options = this.compileOptions(element);
	            return new SelectFormat(element.id, options);

	        default:
	            throw new Error('Message element does not have a valid format type');
	    }
	};

	Compiler.prototype.compileOptions = function (element) {
	    var format      = element.format,
	        options     = format.options,
	        optionsHash = {};

	    // Save the current plural element, if any, then set it to a new value when
	    // compiling the options sub-patterns. This conforms the spec's algorithm
	    // for handling `"#"` syntax in message text.
	    this.pluralStack.push(this.currentPlural);
	    this.currentPlural = format.type === 'pluralFormat' ? element : null;

	    var i, len, option;

	    for (i = 0, len = options.length; i < len; i += 1) {
	        option = options[i];

	        // Compile the sub-pattern and save it under the options's selector.
	        optionsHash[option.selector] = this.compileMessage(option.value);
	    }

	    // Pop the plural stack to put back the original current plural value.
	    this.currentPlural = this.pluralStack.pop();

	    return optionsHash;
	};

	// -- Compiler Helper Classes --------------------------------------------------

	function StringFormat(id) {
	    this.id = id;
	}

	StringFormat.prototype.format = function (value) {
	    if (!value) {
	        return '';
	    }

	    return typeof value === 'string' ? value : String(value);
	};

	function PluralFormat(id, useOrdinal, offset, options, pluralFn) {
	    this.id         = id;
	    this.useOrdinal = useOrdinal;
	    this.offset     = offset;
	    this.options    = options;
	    this.pluralFn   = pluralFn;
	}

	PluralFormat.prototype.getOption = function (value) {
	    var options = this.options;

	    var option = options['=' + value] ||
	            options[this.pluralFn(value - this.offset, this.useOrdinal)];

	    return option || options.other;
	};

	function PluralOffsetString(id, offset, numberFormat, string) {
	    this.id           = id;
	    this.offset       = offset;
	    this.numberFormat = numberFormat;
	    this.string       = string;
	}

	PluralOffsetString.prototype.format = function (value) {
	    var number = this.numberFormat.format(value - this.offset);

	    return this.string
	            .replace(/(^|[^\\])#/g, '$1' + number)
	            .replace(/\\#/g, '#');
	};

	function SelectFormat(id, options) {
	    this.id      = id;
	    this.options = options;
	}

	SelectFormat.prototype.getOption = function (value) {
	    var options = this.options;
	    return options[value] || options.other;
	};

	//# sourceMappingURL=compiler.js.map

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports = module.exports = __webpack_require__(69)['default'];
	exports['default'] = exports;


/***/ },
/* 69 */
/***/ function(module, exports) {

	"use strict";

	exports["default"] = (function() {
	  /*
	   * Generated by PEG.js 0.8.0.
	   *
	   * http://pegjs.majda.cz/
	   */

	  function peg$subclass(child, parent) {
	    function ctor() { this.constructor = child; }
	    ctor.prototype = parent.prototype;
	    child.prototype = new ctor();
	  }

	  function SyntaxError(message, expected, found, offset, line, column) {
	    this.message  = message;
	    this.expected = expected;
	    this.found    = found;
	    this.offset   = offset;
	    this.line     = line;
	    this.column   = column;

	    this.name     = "SyntaxError";
	  }

	  peg$subclass(SyntaxError, Error);

	  function parse(input) {
	    var options = arguments.length > 1 ? arguments[1] : {},

	        peg$FAILED = {},

	        peg$startRuleFunctions = { start: peg$parsestart },
	        peg$startRuleFunction  = peg$parsestart,

	        peg$c0 = [],
	        peg$c1 = function(elements) {
	                return {
	                    type    : 'messageFormatPattern',
	                    elements: elements
	                };
	            },
	        peg$c2 = peg$FAILED,
	        peg$c3 = function(text) {
	                var string = '',
	                    i, j, outerLen, inner, innerLen;

	                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {
	                    inner = text[i];

	                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {
	                        string += inner[j];
	                    }
	                }

	                return string;
	            },
	        peg$c4 = function(messageText) {
	                return {
	                    type : 'messageTextElement',
	                    value: messageText
	                };
	            },
	        peg$c5 = /^[^ \t\n\r,.+={}#]/,
	        peg$c6 = { type: "class", value: "[^ \\t\\n\\r,.+={}#]", description: "[^ \\t\\n\\r,.+={}#]" },
	        peg$c7 = "{",
	        peg$c8 = { type: "literal", value: "{", description: "\"{\"" },
	        peg$c9 = null,
	        peg$c10 = ",",
	        peg$c11 = { type: "literal", value: ",", description: "\",\"" },
	        peg$c12 = "}",
	        peg$c13 = { type: "literal", value: "}", description: "\"}\"" },
	        peg$c14 = function(id, format) {
	                return {
	                    type  : 'argumentElement',
	                    id    : id,
	                    format: format && format[2]
	                };
	            },
	        peg$c15 = "number",
	        peg$c16 = { type: "literal", value: "number", description: "\"number\"" },
	        peg$c17 = "date",
	        peg$c18 = { type: "literal", value: "date", description: "\"date\"" },
	        peg$c19 = "time",
	        peg$c20 = { type: "literal", value: "time", description: "\"time\"" },
	        peg$c21 = function(type, style) {
	                return {
	                    type : type + 'Format',
	                    style: style && style[2]
	                };
	            },
	        peg$c22 = "plural",
	        peg$c23 = { type: "literal", value: "plural", description: "\"plural\"" },
	        peg$c24 = function(pluralStyle) {
	                return {
	                    type   : pluralStyle.type,
	                    ordinal: false,
	                    offset : pluralStyle.offset || 0,
	                    options: pluralStyle.options
	                };
	            },
	        peg$c25 = "selectordinal",
	        peg$c26 = { type: "literal", value: "selectordinal", description: "\"selectordinal\"" },
	        peg$c27 = function(pluralStyle) {
	                return {
	                    type   : pluralStyle.type,
	                    ordinal: true,
	                    offset : pluralStyle.offset || 0,
	                    options: pluralStyle.options
	                }
	            },
	        peg$c28 = "select",
	        peg$c29 = { type: "literal", value: "select", description: "\"select\"" },
	        peg$c30 = function(options) {
	                return {
	                    type   : 'selectFormat',
	                    options: options
	                };
	            },
	        peg$c31 = "=",
	        peg$c32 = { type: "literal", value: "=", description: "\"=\"" },
	        peg$c33 = function(selector, pattern) {
	                return {
	                    type    : 'optionalFormatPattern',
	                    selector: selector,
	                    value   : pattern
	                };
	            },
	        peg$c34 = "offset:",
	        peg$c35 = { type: "literal", value: "offset:", description: "\"offset:\"" },
	        peg$c36 = function(number) {
	                return number;
	            },
	        peg$c37 = function(offset, options) {
	                return {
	                    type   : 'pluralFormat',
	                    offset : offset,
	                    options: options
	                };
	            },
	        peg$c38 = { type: "other", description: "whitespace" },
	        peg$c39 = /^[ \t\n\r]/,
	        peg$c40 = { type: "class", value: "[ \\t\\n\\r]", description: "[ \\t\\n\\r]" },
	        peg$c41 = { type: "other", description: "optionalWhitespace" },
	        peg$c42 = /^[0-9]/,
	        peg$c43 = { type: "class", value: "[0-9]", description: "[0-9]" },
	        peg$c44 = /^[0-9a-f]/i,
	        peg$c45 = { type: "class", value: "[0-9a-f]i", description: "[0-9a-f]i" },
	        peg$c46 = "0",
	        peg$c47 = { type: "literal", value: "0", description: "\"0\"" },
	        peg$c48 = /^[1-9]/,
	        peg$c49 = { type: "class", value: "[1-9]", description: "[1-9]" },
	        peg$c50 = function(digits) {
	            return parseInt(digits, 10);
	        },
	        peg$c51 = /^[^{}\\\0-\x1F \t\n\r]/,
	        peg$c52 = { type: "class", value: "[^{}\\\\\\0-\\x1F \\t\\n\\r]", description: "[^{}\\\\\\0-\\x1F \\t\\n\\r]" },
	        peg$c53 = "\\#",
	        peg$c54 = { type: "literal", value: "\\#", description: "\"\\\\#\"" },
	        peg$c55 = function() { return '\\#'; },
	        peg$c56 = "\\{",
	        peg$c57 = { type: "literal", value: "\\{", description: "\"\\\\{\"" },
	        peg$c58 = function() { return '\u007B'; },
	        peg$c59 = "\\}",
	        peg$c60 = { type: "literal", value: "\\}", description: "\"\\\\}\"" },
	        peg$c61 = function() { return '\u007D'; },
	        peg$c62 = "\\u",
	        peg$c63 = { type: "literal", value: "\\u", description: "\"\\\\u\"" },
	        peg$c64 = function(digits) {
	                return String.fromCharCode(parseInt(digits, 16));
	            },
	        peg$c65 = function(chars) { return chars.join(''); },

	        peg$currPos          = 0,
	        peg$reportedPos      = 0,
	        peg$cachedPos        = 0,
	        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
	        peg$maxFailPos       = 0,
	        peg$maxFailExpected  = [],
	        peg$silentFails      = 0,

	        peg$result;

	    if ("startRule" in options) {
	      if (!(options.startRule in peg$startRuleFunctions)) {
	        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
	      }

	      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
	    }

	    function text() {
	      return input.substring(peg$reportedPos, peg$currPos);
	    }

	    function offset() {
	      return peg$reportedPos;
	    }

	    function line() {
	      return peg$computePosDetails(peg$reportedPos).line;
	    }

	    function column() {
	      return peg$computePosDetails(peg$reportedPos).column;
	    }

	    function expected(description) {
	      throw peg$buildException(
	        null,
	        [{ type: "other", description: description }],
	        peg$reportedPos
	      );
	    }

	    function error(message) {
	      throw peg$buildException(message, null, peg$reportedPos);
	    }

	    function peg$computePosDetails(pos) {
	      function advance(details, startPos, endPos) {
	        var p, ch;

	        for (p = startPos; p < endPos; p++) {
	          ch = input.charAt(p);
	          if (ch === "\n") {
	            if (!details.seenCR) { details.line++; }
	            details.column = 1;
	            details.seenCR = false;
	          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
	            details.line++;
	            details.column = 1;
	            details.seenCR = true;
	          } else {
	            details.column++;
	            details.seenCR = false;
	          }
	        }
	      }

	      if (peg$cachedPos !== pos) {
	        if (peg$cachedPos > pos) {
	          peg$cachedPos = 0;
	          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
	        }
	        advance(peg$cachedPosDetails, peg$cachedPos, pos);
	        peg$cachedPos = pos;
	      }

	      return peg$cachedPosDetails;
	    }

	    function peg$fail(expected) {
	      if (peg$currPos < peg$maxFailPos) { return; }

	      if (peg$currPos > peg$maxFailPos) {
	        peg$maxFailPos = peg$currPos;
	        peg$maxFailExpected = [];
	      }

	      peg$maxFailExpected.push(expected);
	    }

	    function peg$buildException(message, expected, pos) {
	      function cleanupExpected(expected) {
	        var i = 1;

	        expected.sort(function(a, b) {
	          if (a.description < b.description) {
	            return -1;
	          } else if (a.description > b.description) {
	            return 1;
	          } else {
	            return 0;
	          }
	        });

	        while (i < expected.length) {
	          if (expected[i - 1] === expected[i]) {
	            expected.splice(i, 1);
	          } else {
	            i++;
	          }
	        }
	      }

	      function buildMessage(expected, found) {
	        function stringEscape(s) {
	          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

	          return s
	            .replace(/\\/g,   '\\\\')
	            .replace(/"/g,    '\\"')
	            .replace(/\x08/g, '\\b')
	            .replace(/\t/g,   '\\t')
	            .replace(/\n/g,   '\\n')
	            .replace(/\f/g,   '\\f')
	            .replace(/\r/g,   '\\r')
	            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
	            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
	            .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
	            .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
	        }

	        var expectedDescs = new Array(expected.length),
	            expectedDesc, foundDesc, i;

	        for (i = 0; i < expected.length; i++) {
	          expectedDescs[i] = expected[i].description;
	        }

	        expectedDesc = expected.length > 1
	          ? expectedDescs.slice(0, -1).join(", ")
	              + " or "
	              + expectedDescs[expected.length - 1]
	          : expectedDescs[0];

	        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

	        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
	      }

	      var posDetails = peg$computePosDetails(pos),
	          found      = pos < input.length ? input.charAt(pos) : null;

	      if (expected !== null) {
	        cleanupExpected(expected);
	      }

	      return new SyntaxError(
	        message !== null ? message : buildMessage(expected, found),
	        expected,
	        found,
	        pos,
	        posDetails.line,
	        posDetails.column
	      );
	    }

	    function peg$parsestart() {
	      var s0;

	      s0 = peg$parsemessageFormatPattern();

	      return s0;
	    }

	    function peg$parsemessageFormatPattern() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$parsemessageFormatElement();
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        s2 = peg$parsemessageFormatElement();
	      }
	      if (s1 !== peg$FAILED) {
	        peg$reportedPos = s0;
	        s1 = peg$c1(s1);
	      }
	      s0 = s1;

	      return s0;
	    }

	    function peg$parsemessageFormatElement() {
	      var s0;

	      s0 = peg$parsemessageTextElement();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseargumentElement();
	      }

	      return s0;
	    }

	    function peg$parsemessageText() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$currPos;
	      s3 = peg$parse_();
	      if (s3 !== peg$FAILED) {
	        s4 = peg$parsechars();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parse_();
	          if (s5 !== peg$FAILED) {
	            s3 = [s3, s4, s5];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$c2;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$c2;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$c2;
	      }
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          s2 = peg$currPos;
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parsechars();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parse_();
	              if (s5 !== peg$FAILED) {
	                s3 = [s3, s4, s5];
	                s2 = s3;
	              } else {
	                peg$currPos = s2;
	                s2 = peg$c2;
	              }
	            } else {
	              peg$currPos = s2;
	              s2 = peg$c2;
	            }
	          } else {
	            peg$currPos = s2;
	            s2 = peg$c2;
	          }
	        }
	      } else {
	        s1 = peg$c2;
	      }
	      if (s1 !== peg$FAILED) {
	        peg$reportedPos = s0;
	        s1 = peg$c3(s1);
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parsews();
	        if (s1 !== peg$FAILED) {
	          s1 = input.substring(s0, peg$currPos);
	        }
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parsemessageTextElement() {
	      var s0, s1;

	      s0 = peg$currPos;
	      s1 = peg$parsemessageText();
	      if (s1 !== peg$FAILED) {
	        peg$reportedPos = s0;
	        s1 = peg$c4(s1);
	      }
	      s0 = s1;

	      return s0;
	    }

	    function peg$parseargument() {
	      var s0, s1, s2;

	      s0 = peg$parsenumber();
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = [];
	        if (peg$c5.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c6); }
	        }
	        if (s2 !== peg$FAILED) {
	          while (s2 !== peg$FAILED) {
	            s1.push(s2);
	            if (peg$c5.test(input.charAt(peg$currPos))) {
	              s2 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s2 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c6); }
	            }
	          }
	        } else {
	          s1 = peg$c2;
	        }
	        if (s1 !== peg$FAILED) {
	          s1 = input.substring(s0, peg$currPos);
	        }
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseargumentElement() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 123) {
	        s1 = peg$c7;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c8); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseargument();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$currPos;
	              if (input.charCodeAt(peg$currPos) === 44) {
	                s6 = peg$c10;
	                peg$currPos++;
	              } else {
	                s6 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c11); }
	              }
	              if (s6 !== peg$FAILED) {
	                s7 = peg$parse_();
	                if (s7 !== peg$FAILED) {
	                  s8 = peg$parseelementFormat();
	                  if (s8 !== peg$FAILED) {
	                    s6 = [s6, s7, s8];
	                    s5 = s6;
	                  } else {
	                    peg$currPos = s5;
	                    s5 = peg$c2;
	                  }
	                } else {
	                  peg$currPos = s5;
	                  s5 = peg$c2;
	                }
	              } else {
	                peg$currPos = s5;
	                s5 = peg$c2;
	              }
	              if (s5 === peg$FAILED) {
	                s5 = peg$c9;
	              }
	              if (s5 !== peg$FAILED) {
	                s6 = peg$parse_();
	                if (s6 !== peg$FAILED) {
	                  if (input.charCodeAt(peg$currPos) === 125) {
	                    s7 = peg$c12;
	                    peg$currPos++;
	                  } else {
	                    s7 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c13); }
	                  }
	                  if (s7 !== peg$FAILED) {
	                    peg$reportedPos = s0;
	                    s1 = peg$c14(s3, s5);
	                    s0 = s1;
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$c2;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$c2;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$c2;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$c2;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parseelementFormat() {
	      var s0;

	      s0 = peg$parsesimpleFormat();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parsepluralFormat();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseselectOrdinalFormat();
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseselectFormat();
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parsesimpleFormat() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6) === peg$c15) {
	        s1 = peg$c15;
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c16); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.substr(peg$currPos, 4) === peg$c17) {
	          s1 = peg$c17;
	          peg$currPos += 4;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c18); }
	        }
	        if (s1 === peg$FAILED) {
	          if (input.substr(peg$currPos, 4) === peg$c19) {
	            s1 = peg$c19;
	            peg$currPos += 4;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c20); }
	          }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$currPos;
	          if (input.charCodeAt(peg$currPos) === 44) {
	            s4 = peg$c10;
	            peg$currPos++;
	          } else {
	            s4 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c11); }
	          }
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parse_();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parsechars();
	              if (s6 !== peg$FAILED) {
	                s4 = [s4, s5, s6];
	                s3 = s4;
	              } else {
	                peg$currPos = s3;
	                s3 = peg$c2;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$c2;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$c2;
	          }
	          if (s3 === peg$FAILED) {
	            s3 = peg$c9;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$reportedPos = s0;
	            s1 = peg$c21(s1, s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parsepluralFormat() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6) === peg$c22) {
	        s1 = peg$c22;
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c23); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 44) {
	            s3 = peg$c10;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c11); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parsepluralStyle();
	              if (s5 !== peg$FAILED) {
	                peg$reportedPos = s0;
	                s1 = peg$c24(s5);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$c2;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$c2;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parseselectOrdinalFormat() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 13) === peg$c25) {
	        s1 = peg$c25;
	        peg$currPos += 13;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c26); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 44) {
	            s3 = peg$c10;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c11); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parsepluralStyle();
	              if (s5 !== peg$FAILED) {
	                peg$reportedPos = s0;
	                s1 = peg$c27(s5);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$c2;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$c2;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parseselectFormat() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6) === peg$c28) {
	        s1 = peg$c28;
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c29); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 44) {
	            s3 = peg$c10;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c11); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              s5 = [];
	              s6 = peg$parseoptionalFormatPattern();
	              if (s6 !== peg$FAILED) {
	                while (s6 !== peg$FAILED) {
	                  s5.push(s6);
	                  s6 = peg$parseoptionalFormatPattern();
	                }
	              } else {
	                s5 = peg$c2;
	              }
	              if (s5 !== peg$FAILED) {
	                peg$reportedPos = s0;
	                s1 = peg$c30(s5);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$c2;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$c2;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parseselector() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 61) {
	        s2 = peg$c31;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c32); }
	      }
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parsenumber();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$c2;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$c2;
	      }
	      if (s1 !== peg$FAILED) {
	        s1 = input.substring(s0, peg$currPos);
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$parsechars();
	      }

	      return s0;
	    }

	    function peg$parseoptionalFormatPattern() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

	      s0 = peg$currPos;
	      s1 = peg$parse_();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseselector();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            if (input.charCodeAt(peg$currPos) === 123) {
	              s4 = peg$c7;
	              peg$currPos++;
	            } else {
	              s4 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c8); }
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parse_();
	              if (s5 !== peg$FAILED) {
	                s6 = peg$parsemessageFormatPattern();
	                if (s6 !== peg$FAILED) {
	                  s7 = peg$parse_();
	                  if (s7 !== peg$FAILED) {
	                    if (input.charCodeAt(peg$currPos) === 125) {
	                      s8 = peg$c12;
	                      peg$currPos++;
	                    } else {
	                      s8 = peg$FAILED;
	                      if (peg$silentFails === 0) { peg$fail(peg$c13); }
	                    }
	                    if (s8 !== peg$FAILED) {
	                      peg$reportedPos = s0;
	                      s1 = peg$c33(s2, s6);
	                      s0 = s1;
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$c2;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$c2;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$c2;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$c2;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$c2;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parseoffset() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7) === peg$c34) {
	        s1 = peg$c34;
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c35); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parsenumber();
	          if (s3 !== peg$FAILED) {
	            peg$reportedPos = s0;
	            s1 = peg$c36(s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parsepluralStyle() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseoffset();
	      if (s1 === peg$FAILED) {
	        s1 = peg$c9;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$parseoptionalFormatPattern();
	          if (s4 !== peg$FAILED) {
	            while (s4 !== peg$FAILED) {
	              s3.push(s4);
	              s4 = peg$parseoptionalFormatPattern();
	            }
	          } else {
	            s3 = peg$c2;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$reportedPos = s0;
	            s1 = peg$c37(s1, s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$c2;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$c2;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$c2;
	      }

	      return s0;
	    }

	    function peg$parsews() {
	      var s0, s1;

	      peg$silentFails++;
	      s0 = [];
	      if (peg$c39.test(input.charAt(peg$currPos))) {
	        s1 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c40); }
	      }
	      if (s1 !== peg$FAILED) {
	        while (s1 !== peg$FAILED) {
	          s0.push(s1);
	          if (peg$c39.test(input.charAt(peg$currPos))) {
	            s1 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c40); }
	          }
	        }
	      } else {
	        s0 = peg$c2;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c38); }
	      }

	      return s0;
	    }

	    function peg$parse_() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$parsews();
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        s2 = peg$parsews();
	      }
	      if (s1 !== peg$FAILED) {
	        s1 = input.substring(s0, peg$currPos);
	      }
	      s0 = s1;
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c41); }
	      }

	      return s0;
	    }

	    function peg$parsedigit() {
	      var s0;

	      if (peg$c42.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c43); }
	      }

	      return s0;
	    }

	    function peg$parsehexDigit() {
	      var s0;

	      if (peg$c44.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c45); }
	      }

	      return s0;
	    }

	    function peg$parsenumber() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 48) {
	        s1 = peg$c46;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c47); }
	      }
	      if (s1 === peg$FAILED) {
	        s1 = peg$currPos;
	        s2 = peg$currPos;
	        if (peg$c48.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c49); }
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = [];
	          s5 = peg$parsedigit();
	          while (s5 !== peg$FAILED) {
	            s4.push(s5);
	            s5 = peg$parsedigit();
	          }
	          if (s4 !== peg$FAILED) {
	            s3 = [s3, s4];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$c2;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$c2;
	        }
	        if (s2 !== peg$FAILED) {
	          s2 = input.substring(s1, peg$currPos);
	        }
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        peg$reportedPos = s0;
	        s1 = peg$c50(s1);
	      }
	      s0 = s1;

	      return s0;
	    }

	    function peg$parsechar() {
	      var s0, s1, s2, s3, s4, s5, s6, s7;

	      if (peg$c51.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c52); }
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.substr(peg$currPos, 2) === peg$c53) {
	          s1 = peg$c53;
	          peg$currPos += 2;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c54); }
	        }
	        if (s1 !== peg$FAILED) {
	          peg$reportedPos = s0;
	          s1 = peg$c55();
	        }
	        s0 = s1;
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.substr(peg$currPos, 2) === peg$c56) {
	            s1 = peg$c56;
	            peg$currPos += 2;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c57); }
	          }
	          if (s1 !== peg$FAILED) {
	            peg$reportedPos = s0;
	            s1 = peg$c58();
	          }
	          s0 = s1;
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.substr(peg$currPos, 2) === peg$c59) {
	              s1 = peg$c59;
	              peg$currPos += 2;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c60); }
	            }
	            if (s1 !== peg$FAILED) {
	              peg$reportedPos = s0;
	              s1 = peg$c61();
	            }
	            s0 = s1;
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              if (input.substr(peg$currPos, 2) === peg$c62) {
	                s1 = peg$c62;
	                peg$currPos += 2;
	              } else {
	                s1 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c63); }
	              }
	              if (s1 !== peg$FAILED) {
	                s2 = peg$currPos;
	                s3 = peg$currPos;
	                s4 = peg$parsehexDigit();
	                if (s4 !== peg$FAILED) {
	                  s5 = peg$parsehexDigit();
	                  if (s5 !== peg$FAILED) {
	                    s6 = peg$parsehexDigit();
	                    if (s6 !== peg$FAILED) {
	                      s7 = peg$parsehexDigit();
	                      if (s7 !== peg$FAILED) {
	                        s4 = [s4, s5, s6, s7];
	                        s3 = s4;
	                      } else {
	                        peg$currPos = s3;
	                        s3 = peg$c2;
	                      }
	                    } else {
	                      peg$currPos = s3;
	                      s3 = peg$c2;
	                    }
	                  } else {
	                    peg$currPos = s3;
	                    s3 = peg$c2;
	                  }
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$c2;
	                }
	                if (s3 !== peg$FAILED) {
	                  s3 = input.substring(s2, peg$currPos);
	                }
	                s2 = s3;
	                if (s2 !== peg$FAILED) {
	                  peg$reportedPos = s0;
	                  s1 = peg$c64(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$c2;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$c2;
	              }
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parsechars() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$parsechar();
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          s2 = peg$parsechar();
	        }
	      } else {
	        s1 = peg$c2;
	      }
	      if (s1 !== peg$FAILED) {
	        peg$reportedPos = s0;
	        s1 = peg$c65(s1);
	      }
	      s0 = s1;

	      return s0;
	    }

	    peg$result = peg$startRuleFunction();

	    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
	      return peg$result;
	    } else {
	      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
	        peg$fail({ type: "end", description: "end of input" });
	      }

	      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
	    }
	  }

	  return {
	    SyntaxError: SyntaxError,
	    parse:       parse
	  };
	})();

	//# sourceMappingURL=parser.js.map

/***/ },
/* 70 */
/***/ function(module, exports) {

	// GENERATED FILE
	"use strict";
	exports["default"] = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"}};

	//# sourceMappingURL=en.js.map

/***/ },
/* 71 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint node:true */

	'use strict';

	var IntlRelativeFormat = __webpack_require__(73)['default'];

	// Add all locale data to `IntlRelativeFormat`. This module will be ignored when
	// bundling for the browser with Browserify/Webpack.
	__webpack_require__(78);

	// Re-export `IntlRelativeFormat` as the CommonJS default exports with all the
	// locale data registered, and with English set as the default locale. Define
	// the `default` prop for use with other compiled ES6 Modules.
	exports = module.exports = IntlRelativeFormat;
	exports['default'] = exports;


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/* jslint esnext: true */

	"use strict";
	var src$core$$ = __webpack_require__(74), src$en$$ = __webpack_require__(77);

	src$core$$["default"].__addLocaleData(src$en$$["default"]);
	src$core$$["default"].defaultLocale = 'en';

	exports["default"] = src$core$$["default"];

	//# sourceMappingURL=main.js.map

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/*
	Copyright (c) 2014, Yahoo! Inc. All rights reserved.
	Copyrights licensed under the New BSD License.
	See the accompanying LICENSE file for terms.
	*/

	/* jslint esnext: true */

	"use strict";
	var intl$messageformat$$ = __webpack_require__(62), src$diff$$ = __webpack_require__(75), src$es5$$ = __webpack_require__(76);
	exports["default"] = RelativeFormat;

	// -----------------------------------------------------------------------------

	var FIELDS = ['second', 'minute', 'hour', 'day', 'month', 'year'];
	var STYLES = ['best fit', 'numeric'];

	// -- RelativeFormat -----------------------------------------------------------

	function RelativeFormat(locales, options) {
	    options = options || {};

	    // Make a copy of `locales` if it's an array, so that it doesn't change
	    // since it's used lazily.
	    if (src$es5$$.isArray(locales)) {
	        locales = locales.concat();
	    }

	    src$es5$$.defineProperty(this, '_locale', {value: this._resolveLocale(locales)});
	    src$es5$$.defineProperty(this, '_options', {value: {
	        style: this._resolveStyle(options.style),
	        units: this._isValidUnits(options.units) && options.units
	    }});

	    src$es5$$.defineProperty(this, '_locales', {value: locales});
	    src$es5$$.defineProperty(this, '_fields', {value: this._findFields(this._locale)});
	    src$es5$$.defineProperty(this, '_messages', {value: src$es5$$.objCreate(null)});

	    // "Bind" `format()` method to `this` so it can be passed by reference like
	    // the other `Intl` APIs.
	    var relativeFormat = this;
	    this.format = function format(date, options) {
	        return relativeFormat._format(date, options);
	    };
	}

	// Define internal private properties for dealing with locale data.
	src$es5$$.defineProperty(RelativeFormat, '__localeData__', {value: src$es5$$.objCreate(null)});
	src$es5$$.defineProperty(RelativeFormat, '__addLocaleData', {value: function (data) {
	    if (!(data && data.locale)) {
	        throw new Error(
	            'Locale data provided to IntlRelativeFormat is missing a ' +
	            '`locale` property value'
	        );
	    }

	    RelativeFormat.__localeData__[data.locale.toLowerCase()] = data;

	    // Add data to IntlMessageFormat.
	    intl$messageformat$$["default"].__addLocaleData(data);
	}});

	// Define public `defaultLocale` property which can be set by the developer, or
	// it will be set when the first RelativeFormat instance is created by
	// leveraging the resolved locale from `Intl`.
	src$es5$$.defineProperty(RelativeFormat, 'defaultLocale', {
	    enumerable: true,
	    writable  : true,
	    value     : undefined
	});

	// Define public `thresholds` property which can be set by the developer, and
	// defaults to relative time thresholds from moment.js.
	src$es5$$.defineProperty(RelativeFormat, 'thresholds', {
	    enumerable: true,

	    value: {
	        second: 45,  // seconds to minute
	        minute: 45,  // minutes to hour
	        hour  : 22,  // hours to day
	        day   : 26,  // days to month
	        month : 11   // months to year
	    }
	});

	RelativeFormat.prototype.resolvedOptions = function () {
	    return {
	        locale: this._locale,
	        style : this._options.style,
	        units : this._options.units
	    };
	};

	RelativeFormat.prototype._compileMessage = function (units) {
	    // `this._locales` is the original set of locales the user specified to the
	    // constructor, while `this._locale` is the resolved root locale.
	    var locales        = this._locales;
	    var resolvedLocale = this._locale;

	    var field        = this._fields[units];
	    var relativeTime = field.relativeTime;
	    var future       = '';
	    var past         = '';
	    var i;

	    for (i in relativeTime.future) {
	        if (relativeTime.future.hasOwnProperty(i)) {
	            future += ' ' + i + ' {' +
	                relativeTime.future[i].replace('{0}', '#') + '}';
	        }
	    }

	    for (i in relativeTime.past) {
	        if (relativeTime.past.hasOwnProperty(i)) {
	            past += ' ' + i + ' {' +
	                relativeTime.past[i].replace('{0}', '#') + '}';
	        }
	    }

	    var message = '{when, select, future {{0, plural, ' + future + '}}' +
	                                 'past {{0, plural, ' + past + '}}}';

	    // Create the synthetic IntlMessageFormat instance using the original
	    // locales value specified by the user when constructing the the parent
	    // IntlRelativeFormat instance.
	    return new intl$messageformat$$["default"](message, locales);
	};

	RelativeFormat.prototype._getMessage = function (units) {
	    var messages = this._messages;

	    // Create a new synthetic message based on the locale data from CLDR.
	    if (!messages[units]) {
	        messages[units] = this._compileMessage(units);
	    }

	    return messages[units];
	};

	RelativeFormat.prototype._getRelativeUnits = function (diff, units) {
	    var field = this._fields[units];

	    if (field.relative) {
	        return field.relative[diff];
	    }
	};

	RelativeFormat.prototype._findFields = function (locale) {
	    var localeData = RelativeFormat.__localeData__;
	    var data       = localeData[locale.toLowerCase()];

	    // The locale data is de-duplicated, so we have to traverse the locale's
	    // hierarchy until we find `fields` to return.
	    while (data) {
	        if (data.fields) {
	            return data.fields;
	        }

	        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];
	    }

	    throw new Error(
	        'Locale data added to IntlRelativeFormat is missing `fields` for :' +
	        locale
	    );
	};

	RelativeFormat.prototype._format = function (date, options) {
	    var now = options && options.now !== undefined ? options.now : src$es5$$.dateNow();

	    if (date === undefined) {
	        date = now;
	    }

	    // Determine if the `date` and optional `now` values are valid, and throw a
	    // similar error to what `Intl.DateTimeFormat#format()` would throw.
	    if (!isFinite(now)) {
	        throw new RangeError(
	            'The `now` option provided to IntlRelativeFormat#format() is not ' +
	            'in valid range.'
	        );
	    }

	    if (!isFinite(date)) {
	        throw new RangeError(
	            'The date value provided to IntlRelativeFormat#format() is not ' +
	            'in valid range.'
	        );
	    }

	    var diffReport  = src$diff$$["default"](now, date);
	    var units       = this._options.units || this._selectUnits(diffReport);
	    var diffInUnits = diffReport[units];

	    if (this._options.style !== 'numeric') {
	        var relativeUnits = this._getRelativeUnits(diffInUnits, units);
	        if (relativeUnits) {
	            return relativeUnits;
	        }
	    }

	    return this._getMessage(units).format({
	        '0' : Math.abs(diffInUnits),
	        when: diffInUnits < 0 ? 'past' : 'future'
	    });
	};

	RelativeFormat.prototype._isValidUnits = function (units) {
	    if (!units || src$es5$$.arrIndexOf.call(FIELDS, units) >= 0) {
	        return true;
	    }

	    if (typeof units === 'string') {
	        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);
	        if (suggestion && src$es5$$.arrIndexOf.call(FIELDS, suggestion) >= 0) {
	            throw new Error(
	                '"' + units + '" is not a valid IntlRelativeFormat `units` ' +
	                'value, did you mean: ' + suggestion
	            );
	        }
	    }

	    throw new Error(
	        '"' + units + '" is not a valid IntlRelativeFormat `units` value, it ' +
	        'must be one of: "' + FIELDS.join('", "') + '"'
	    );
	};

	RelativeFormat.prototype._resolveLocale = function (locales) {
	    if (typeof locales === 'string') {
	        locales = [locales];
	    }

	    // Create a copy of the array so we can push on the default locale.
	    locales = (locales || []).concat(RelativeFormat.defaultLocale);

	    var localeData = RelativeFormat.__localeData__;
	    var i, len, localeParts, data;

	    // Using the set of locales + the default locale, we look for the first one
	    // which that has been registered. When data does not exist for a locale, we
	    // traverse its ancestors to find something that's been registered within
	    // its hierarchy of locales. Since we lack the proper `parentLocale` data
	    // here, we must take a naive approach to traversal.
	    for (i = 0, len = locales.length; i < len; i += 1) {
	        localeParts = locales[i].toLowerCase().split('-');

	        while (localeParts.length) {
	            data = localeData[localeParts.join('-')];
	            if (data) {
	                // Return the normalized locale string; e.g., we return "en-US",
	                // instead of "en-us".
	                return data.locale;
	            }

	            localeParts.pop();
	        }
	    }

	    var defaultLocale = locales.pop();
	    throw new Error(
	        'No locale data has been added to IntlRelativeFormat for: ' +
	        locales.join(', ') + ', or the default locale: ' + defaultLocale
	    );
	};

	RelativeFormat.prototype._resolveStyle = function (style) {
	    // Default to "best fit" style.
	    if (!style) {
	        return STYLES[0];
	    }

	    if (src$es5$$.arrIndexOf.call(STYLES, style) >= 0) {
	        return style;
	    }

	    throw new Error(
	        '"' + style + '" is not a valid IntlRelativeFormat `style` value, it ' +
	        'must be one of: "' + STYLES.join('", "') + '"'
	    );
	};

	RelativeFormat.prototype._selectUnits = function (diffReport) {
	    var i, l, units;

	    for (i = 0, l = FIELDS.length; i < l; i += 1) {
	        units = FIELDS[i];

	        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {
	            break;
	        }
	    }

	    return units;
	};

	//# sourceMappingURL=core.js.map

/***/ },
/* 75 */
/***/ function(module, exports) {

	/*
	Copyright (c) 2014, Yahoo! Inc. All rights reserved.
	Copyrights licensed under the New BSD License.
	See the accompanying LICENSE file for terms.
	*/

	/* jslint esnext: true */

	"use strict";

	var round = Math.round;

	function daysToYears(days) {
	    // 400 years have 146097 days (taking into account leap year rules)
	    return days * 400 / 146097;
	}

	exports["default"] = function (from, to) {
	    // Convert to ms timestamps.
	    from = +from;
	    to   = +to;

	    var millisecond = round(to - from),
	        second      = round(millisecond / 1000),
	        minute      = round(second / 60),
	        hour        = round(minute / 60),
	        day         = round(hour / 24),
	        week        = round(day / 7);

	    var rawYears = daysToYears(day),
	        month    = round(rawYears * 12),
	        year     = round(rawYears);

	    return {
	        millisecond: millisecond,
	        second     : second,
	        minute     : minute,
	        hour       : hour,
	        day        : day,
	        week       : week,
	        month      : month,
	        year       : year
	    };
	};

	//# sourceMappingURL=diff.js.map

/***/ },
/* 76 */
/***/ function(module, exports) {

	/*
	Copyright (c) 2014, Yahoo! Inc. All rights reserved.
	Copyrights licensed under the New BSD License.
	See the accompanying LICENSE file for terms.
	*/

	/* jslint esnext: true */

	"use strict";

	// Purposely using the same implementation as the Intl.js `Intl` polyfill.
	// Copyright 2013 Andy Earnshaw, MIT License

	var hop = Object.prototype.hasOwnProperty;
	var toString = Object.prototype.toString;

	var realDefineProp = (function () {
	    try { return !!Object.defineProperty({}, 'a', {}); }
	    catch (e) { return false; }
	})();

	var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

	var defineProperty = realDefineProp ? Object.defineProperty :
	        function (obj, name, desc) {

	    if ('get' in desc && obj.__defineGetter__) {
	        obj.__defineGetter__(name, desc.get);
	    } else if (!hop.call(obj, name) || 'value' in desc) {
	        obj[name] = desc.value;
	    }
	};

	var objCreate = Object.create || function (proto, props) {
	    var obj, k;

	    function F() {}
	    F.prototype = proto;
	    obj = new F();

	    for (k in props) {
	        if (hop.call(props, k)) {
	            defineProperty(obj, k, props[k]);
	        }
	    }

	    return obj;
	};

	var arrIndexOf = Array.prototype.indexOf || function (search, fromIndex) {
	    /*jshint validthis:true */
	    var arr = this;
	    if (!arr.length) {
	        return -1;
	    }

	    for (var i = fromIndex || 0, max = arr.length; i < max; i++) {
	        if (arr[i] === search) {
	            return i;
	        }
	    }

	    return -1;
	};

	var isArray = Array.isArray || function (obj) {
	    return toString.call(obj) === '[object Array]';
	};

	var dateNow = Date.now || function () {
	    return new Date().getTime();
	};
	exports.defineProperty = defineProperty, exports.objCreate = objCreate, exports.arrIndexOf = arrIndexOf, exports.isArray = isArray, exports.dateNow = dateNow;

	//# sourceMappingURL=es5.js.map

/***/ },
/* 77 */
/***/ function(module, exports) {

	// GENERATED FILE
	"use strict";
	exports["default"] = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"in {0} year","other":"in {0} years"},"past":{"one":"{0} year ago","other":"{0} years ago"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"in {0} month","other":"in {0} months"},"past":{"one":"{0} month ago","other":"{0} months ago"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"in {0} day","other":"in {0} days"},"past":{"one":"{0} day ago","other":"{0} days ago"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"in {0} hour","other":"in {0} hours"},"past":{"one":"{0} hour ago","other":"{0} hours ago"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"in {0} minute","other":"in {0} minutes"},"past":{"one":"{0} minute ago","other":"{0} minutes ago"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"one":"in {0} second","other":"in {0} seconds"},"past":{"one":"{0} second ago","other":"{0} seconds ago"}}}}};

	//# sourceMappingURL=en.js.map

/***/ },
/* 78 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 79 */
/***/ function(module, exports) {

	// GENERATED FILE
	"use strict";
	exports["default"] = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"in {0} year","other":"in {0} years"},"past":{"one":"{0} year ago","other":"{0} years ago"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"in {0} month","other":"in {0} months"},"past":{"one":"{0} month ago","other":"{0} months ago"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"in {0} day","other":"in {0} days"},"past":{"one":"{0} day ago","other":"{0} days ago"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"in {0} hour","other":"in {0} hours"},"past":{"one":"{0} hour ago","other":"{0} hours ago"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"in {0} minute","other":"in {0} minutes"},"past":{"one":"{0} minute ago","other":"{0} minutes ago"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"one":"in {0} second","other":"in {0} seconds"},"past":{"one":"{0} second ago","other":"{0} seconds ago"}}}}};

	//# sourceMappingURL=en.js.map

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext:true */

	// TODO: Use `import React from "react";` when external modules are supported.
	"use strict";
	var src$react$$ = __webpack_require__(81), intl$messageformat$$ = __webpack_require__(62), intl$relativeformat$$ = __webpack_require__(72), intl$format$cache$$ = __webpack_require__(82);

	// -----------------------------------------------------------------------------

	var typesSpec = {
	    locales: src$react$$["default"].PropTypes.oneOfType([
	        src$react$$["default"].PropTypes.string,
	        src$react$$["default"].PropTypes.array
	    ]),

	    formats : src$react$$["default"].PropTypes.object,
	    messages: src$react$$["default"].PropTypes.object
	};

	function assertIsDate(date, errMsg) {
	    // Determine if the `date` is valid by checking if it is finite, which is
	    // the same way that `Intl.DateTimeFormat#format()` checks.
	    if (!isFinite(date)) {
	        throw new TypeError(errMsg);
	    }
	}

	exports["default"] = {
	    statics: {
	        filterFormatOptions: function (obj, defaults) {
	            if (!defaults) { defaults = {}; }

	            return (this.formatOptions || []).reduce(function (opts, name) {
	                if (obj.hasOwnProperty(name)) {
	                    opts[name] = obj[name];
	                } else if (defaults.hasOwnProperty(name)) {
	                    opts[name] = defaults[name];
	                }

	                return opts;
	            }, {});
	        }
	    },

	    propTypes        : typesSpec,
	    contextTypes     : typesSpec,
	    childContextTypes: typesSpec,

	    getNumberFormat  : intl$format$cache$$["default"](Intl.NumberFormat),
	    getDateTimeFormat: intl$format$cache$$["default"](Intl.DateTimeFormat),
	    getMessageFormat : intl$format$cache$$["default"](intl$messageformat$$["default"]),
	    getRelativeFormat: intl$format$cache$$["default"](intl$relativeformat$$["default"]),

	    getChildContext: function () {
	        var context = this.context;
	        var props   = this.props;

	        return {
	            locales:  props.locales  || context.locales,
	            formats:  props.formats  || context.formats,
	            messages: props.messages || context.messages
	        };
	    },

	    formatDate: function (date, options) {
	        date = new Date(date);
	        assertIsDate(date, 'A date or timestamp must be provided to formatDate()');
	        return this._format('date', date, options);
	    },

	    formatTime: function (date, options) {
	        date = new Date(date);
	        assertIsDate(date, 'A date or timestamp must be provided to formatTime()');
	        return this._format('time', date, options);
	    },

	    formatRelative: function (date, options, formatOptions) {
	        date = new Date(date);
	        assertIsDate(date, 'A date or timestamp must be provided to formatRelative()');
	        return this._format('relative', date, options, formatOptions);
	    },

	    formatNumber: function (num, options) {
	        return this._format('number', num, options);
	    },

	    formatMessage: function (message, values) {
	        var locales = this.props.locales || this.context.locales;
	        var formats = this.props.formats || this.context.formats;

	        // When `message` is a function, assume it's an IntlMessageFormat
	        // instance's `format()` method passed by reference, and call it. This
	        // is possible because its `this` will be pre-bound to the instance.
	        if (typeof message === 'function') {
	            return message(values);
	        }

	        if (typeof message === 'string') {
	            message = this.getMessageFormat(message, locales, formats);
	        }

	        return message.format(values);
	    },

	    getIntlMessage: function (path) {
	        var messages  = this.props.messages || this.context.messages;
	        var pathParts = path.split('.');

	        var message;

	        try {
	            message = pathParts.reduce(function (obj, pathPart) {
	                return obj[pathPart];
	            }, messages);
	        } finally {
	            if (message === undefined) {
	                throw new ReferenceError('Could not find Intl message: ' + path);
	            }
	        }

	        return message;
	    },

	    getNamedFormat: function (type, name) {
	        var formats = this.props.formats || this.context.formats;
	        var format  = null;

	        try {
	            format = formats[type][name];
	        } finally {
	            if (!format) {
	                throw new ReferenceError(
	                    'No ' + type + ' format named: ' + name
	                );
	            }
	        }

	        return format;
	    },

	    _format: function (type, value, options, formatOptions) {
	        var locales = this.props.locales || this.context.locales;

	        if (options && typeof options === 'string') {
	            options = this.getNamedFormat(type, options);
	        }

	        switch(type) {
	            case 'date':
	            case 'time':
	                return this.getDateTimeFormat(locales, options).format(value);
	            case 'number':
	                return this.getNumberFormat(locales, options).format(value);
	            case 'relative':
	                return this.getRelativeFormat(locales, options).format(value, formatOptions);
	            default:
	                throw new Error('Unrecognized format type: ' + type);
	        }
	    }
	};

	//# sourceMappingURL=mixin.js.map

/***/ },
/* 81 */
/***/ function(module, exports) {

	/* global React */
	/* jshint esnext:true */

	// TODO: Remove the global `React` binding lookup once the ES6 Module Transpiler
	// supports external modules. This is a hack for now that provides the local
	// modules a referece to React.
	"use strict";
	exports["default"] = React;

	//# sourceMappingURL=react.js.map

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports = module.exports = __webpack_require__(83)['default'];
	exports['default'] = exports;


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var src$es5$$ = __webpack_require__(84);
	exports["default"] = createFormatCache;

	// -----------------------------------------------------------------------------

	function createFormatCache(FormatConstructor) {
	    var cache = src$es5$$.objCreate(null);

	    return function () {
	        var args    = Array.prototype.slice.call(arguments);
	        var cacheId = getCacheId(args);
	        var format  = cacheId && cache[cacheId];

	        if (!format) {
	            format = src$es5$$.objCreate(FormatConstructor.prototype);
	            FormatConstructor.apply(format, args);

	            if (cacheId) {
	                cache[cacheId] = format;
	            }
	        }

	        return format;
	    };
	}

	// -- Utilities ----------------------------------------------------------------

	function getCacheId(inputs) {
	    // When JSON is not available in the runtime, we will not create a cache id.
	    if (typeof JSON === 'undefined') { return; }

	    var cacheId = [];

	    var i, len, input;

	    for (i = 0, len = inputs.length; i < len; i += 1) {
	        input = inputs[i];

	        if (input && typeof input === 'object') {
	            cacheId.push(orderedProps(input));
	        } else {
	            cacheId.push(input);
	        }
	    }

	    return JSON.stringify(cacheId);
	}

	function orderedProps(obj) {
	    var props = [],
	        keys  = [];

	    var key, i, len, prop;

	    for (key in obj) {
	        if (obj.hasOwnProperty(key)) {
	            keys.push(key);
	        }
	    }

	    var orderedKeys = keys.sort();

	    for (i = 0, len = orderedKeys.length; i < len; i += 1) {
	        key  = orderedKeys[i];
	        prop = {};

	        prop[key] = obj[key];
	        props[i]  = prop;
	    }

	    return props;
	}

	//# sourceMappingURL=memoizer.js.map

/***/ },
/* 84 */
/***/ function(module, exports) {

	"use strict";

	// Purposely using the same implementation as the Intl.js `Intl` polyfill.
	// Copyright 2013 Andy Earnshaw, MIT License

	var hop = Object.prototype.hasOwnProperty;

	var realDefineProp = (function () {
	    try { return !!Object.defineProperty({}, 'a', {}); }
	    catch (e) { return false; }
	})();

	var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

	var defineProperty = realDefineProp ? Object.defineProperty :
	        function (obj, name, desc) {

	    if ('get' in desc && obj.__defineGetter__) {
	        obj.__defineGetter__(name, desc.get);
	    } else if (!hop.call(obj, name) || 'value' in desc) {
	        obj[name] = desc.value;
	    }
	};

	var objCreate = Object.create || function (proto, props) {
	    var obj, k;

	    function F() {}
	    F.prototype = proto;
	    obj = new F();

	    for (k in props) {
	        if (hop.call(props, k)) {
	            defineProperty(obj, k, props[k]);
	        }
	    }

	    return obj;
	};
	exports.defineProperty = defineProperty, exports.objCreate = objCreate;

	//# sourceMappingURL=es5.js.map

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext:true */

	// TODO: Use `import React from "react";` when external modules are supported.
	"use strict";
	var src$react$$ = __webpack_require__(81), src$mixin$$ = __webpack_require__(80);

	var FormattedDate = src$react$$["default"].createClass({
	    displayName: 'FormattedDate',
	    mixins     : [src$mixin$$["default"]],

	    statics: {
	        formatOptions: [
	            'localeMatcher', 'timeZone', 'hour12', 'formatMatcher', 'weekday',
	            'era', 'year', 'month', 'day', 'hour', 'minute', 'second',
	            'timeZoneName'
	        ]
	    },

	    propTypes: {
	        format: src$react$$["default"].PropTypes.string,
	        value : src$react$$["default"].PropTypes.any.isRequired
	    },

	    render: function () {
	        var props    = this.props;
	        var value    = props.value;
	        var format   = props.format;
	        var defaults = format && this.getNamedFormat('date', format);
	        var options  = FormattedDate.filterFormatOptions(props, defaults);

	        return src$react$$["default"].DOM.span(null, this.formatDate(value, options));
	    }
	});

	exports["default"] = FormattedDate;

	//# sourceMappingURL=date.js.map

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext:true */

	// TODO: Use `import React from "react";` when external modules are supported.
	"use strict";
	var src$react$$ = __webpack_require__(81), src$mixin$$ = __webpack_require__(80);

	var FormattedTime = src$react$$["default"].createClass({
	    displayName: 'FormattedTime',
	    mixins     : [src$mixin$$["default"]],

	    statics: {
	        formatOptions: [
	            'localeMatcher', 'timeZone', 'hour12', 'formatMatcher', 'weekday',
	            'era', 'year', 'month', 'day', 'hour', 'minute', 'second',
	            'timeZoneName'
	        ]
	    },

	    propTypes: {
	        format: src$react$$["default"].PropTypes.string,
	        value : src$react$$["default"].PropTypes.any.isRequired
	    },

	    render: function () {
	        var props    = this.props;
	        var value    = props.value;
	        var format   = props.format;
	        var defaults = format && this.getNamedFormat('time', format);
	        var options  = FormattedTime.filterFormatOptions(props, defaults);

	        return src$react$$["default"].DOM.span(null, this.formatTime(value, options));
	    }
	});

	exports["default"] = FormattedTime;

	//# sourceMappingURL=time.js.map

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext:true */

	// TODO: Use `import React from "react";` when external modules are supported.
	"use strict";
	var src$react$$ = __webpack_require__(81), src$mixin$$ = __webpack_require__(80);

	var FormattedRelative = src$react$$["default"].createClass({
	    displayName: 'FormattedRelative',
	    mixins     : [src$mixin$$["default"]],

	    statics: {
	        formatOptions: [
	            'style', 'units'
	        ]
	    },

	    propTypes: {
	        format: src$react$$["default"].PropTypes.string,
	        value : src$react$$["default"].PropTypes.any.isRequired,
	        now   : src$react$$["default"].PropTypes.any
	    },

	    render: function () {
	        var props    = this.props;
	        var value    = props.value;
	        var format   = props.format;
	        var defaults = format && this.getNamedFormat('relative', format);
	        var options  = FormattedRelative.filterFormatOptions(props, defaults);

	        var formattedRelativeTime = this.formatRelative(value, options, {
	            now: props.now
	        });

	        return src$react$$["default"].DOM.span(null, formattedRelativeTime);
	    }
	});

	exports["default"] = FormattedRelative;

	//# sourceMappingURL=relative.js.map

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext:true */

	// TODO: Use `import React from "react";` when external modules are supported.
	"use strict";
	var src$react$$ = __webpack_require__(81), src$mixin$$ = __webpack_require__(80);

	var FormattedNumber = src$react$$["default"].createClass({
	    displayName: 'FormattedNumber',
	    mixins     : [src$mixin$$["default"]],

	    statics: {
	        formatOptions: [
	            'localeMatcher', 'style', 'currency', 'currencyDisplay',
	            'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits',
	            'maximumFractionDigits', 'minimumSignificantDigits',
	            'maximumSignificantDigits'
	        ]
	    },

	    propTypes: {
	        format: src$react$$["default"].PropTypes.string,
	        value : src$react$$["default"].PropTypes.any.isRequired
	    },

	    render: function () {
	        var props    = this.props;
	        var value    = props.value;
	        var format   = props.format;
	        var defaults = format && this.getNamedFormat('number', format);
	        var options  = FormattedNumber.filterFormatOptions(props, defaults);

	        return src$react$$["default"].DOM.span(null, this.formatNumber(value, options));
	    }
	});

	exports["default"] = FormattedNumber;

	//# sourceMappingURL=number.js.map

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext:true */

	// TODO: Use `import React from "react";` when external modules are supported.
	"use strict";
	var src$react$$ = __webpack_require__(81), src$mixin$$ = __webpack_require__(80);

	var FormattedMessage = src$react$$["default"].createClass({
	    displayName: 'FormattedMessage',
	    mixins     : [src$mixin$$["default"]],

	    propTypes: {
	        tagName: src$react$$["default"].PropTypes.string,
	        message: src$react$$["default"].PropTypes.string.isRequired
	    },

	    getDefaultProps: function () {
	        return {tagName: 'span'};
	    },

	    render: function () {
	        var props   = this.props;
	        var tagName = props.tagName;
	        var message = props.message;

	        // Creates a token with a random guid that should not be guessable or
	        // conflict with other parts of the `message` string.
	        var guid       = Math.floor(Math.random() * 0x10000000000).toString(16);
	        var tokenRegex = new RegExp('(@__ELEMENT-' + guid + '-\\d+__@)', 'g');
	        var elements   = {};

	        var generateToken = (function () {
	            var counter = 0;
	            return function () {
	                return '@__ELEMENT-' + guid + '-' + (counter += 1) + '__@';
	            };
	        }());

	        // Iterates over the `props` to keep track of any React Element values
	        // so they can be represented by the `token` as a placeholder when the
	        // `message` is formatted. This allows the formatted message to then be
	        // broken-up into parts with references to the React Elements inserted
	        // back in.
	        var values = Object.keys(props).reduce(function (values, name) {
	            var value = props[name];
	            var token;

	            if (src$react$$["default"].isValidElement(value)) {
	                token           = generateToken();
	                values[name]    = token;
	                elements[token] = value;
	            } else {
	                values[name] = value;
	            }

	            return values;
	        }, {});

	        // Formats the `message` with the `values`, including the `token`
	        // placeholders for React Element values.
	        var formattedMessage = this.formatMessage(message, values);

	        // Split the message into parts so the React Element values captured
	        // above can be inserted back into the rendered message. This
	        // approach allows messages to render with React Elements while keeping
	        // React's virtual diffing working properly.
	        var children = formattedMessage.split(tokenRegex)
	            .filter(function (part) {
	                // Ignore empty string parts.
	                return !!part;
	            })
	            .map(function (part) {
	                // When the `part` is a token, get a ref to the React Element.
	                return elements[part] || part;
	            });

	        var elementArgs = [tagName, null].concat(children);
	        return src$react$$["default"].createElement.apply(null, elementArgs);
	    }
	});

	exports["default"] = FormattedMessage;

	//# sourceMappingURL=message.js.map

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* jshint esnext:true */

	// TODO: Use `import React from "react";` when external modules are supported.
	"use strict";
	var src$react$$ = __webpack_require__(81), src$escape$$ = __webpack_require__(91), src$mixin$$ = __webpack_require__(80);

	var FormattedHTMLMessage = src$react$$["default"].createClass({
	    displayName: 'FormattedHTMLMessage',
	    mixins     : [src$mixin$$["default"]],

	    propTypes: {
	        tagName: src$react$$["default"].PropTypes.string,
	        message: src$react$$["default"].PropTypes.string.isRequired
	    },

	    getDefaultProps: function () {
	        return {tagName: 'span'};
	    },

	    render: function () {
	        var props   = this.props;
	        var tagName = props.tagName;
	        var message = props.message;

	        // Process all the props before they are used as values when formatting
	        // the ICU Message string. Since the formatted message will be injected
	        // via `innerHTML`, all String-based values need to be HTML-escaped. Any
	        // React Elements that are passed as props will be rendered to a static
	        // markup string that is presumed to be safe.
	        var values = Object.keys(props).reduce(function (values, name) {
	            var value = props[name];

	            if (typeof value === 'string') {
	                value = src$escape$$["default"](value);
	            } else if (src$react$$["default"].isValidElement(value)) {
	                value = src$react$$["default"].renderToStaticMarkup(value);
	            }

	            values[name] = value;
	            return values;
	        }, {});

	        // Since the message presumably has HTML in it, we need to set
	        // `innerHTML` in order for it to be rendered and not escaped by React.
	        // To be safe, all string prop values were escaped before formatting the
	        // message. It is assumed that the message is not UGC, and came from
	        // the developer making it more like a template.
	        //
	        // Note: There's a perf impact of using this component since there's no
	        // way for React to do its virtual DOM diffing.
	        return src$react$$["default"].DOM[tagName]({
	            dangerouslySetInnerHTML: {
	                __html: this.formatMessage(message, values)
	            }
	        });
	    }
	});

	exports["default"] = FormattedHTMLMessage;

	//# sourceMappingURL=html-message.js.map

/***/ },
/* 91 */
/***/ function(module, exports) {

	/* jshint esnext:true */

	/*
	HTML escaping implementation is the same as React's (on purpose.) Therefore, it
	has the following Copyright and Licensing:

	Copyright 2013-2014, Facebook, Inc.
	All rights reserved.

	This source code is licensed under the BSD-style license found in the LICENSE
	file in the root directory of React's source tree.
	*/
	"use strict";
	var ESCAPED_CHARS = {
	    '&' : '&amp;',
	    '>' : '&gt;',
	    '<' : '&lt;',
	    '"' : '&quot;',
	    '\'': '&#x27;'
	};

	var UNSAFE_CHARS_REGEX = /[&><"']/g;

	exports["default"] = function (str) {
	    return ('' + str).replace(UNSAFE_CHARS_REGEX, function (match) {
	        return ESCAPED_CHARS[match];
	    });
	};

	//# sourceMappingURL=escape.js.map

/***/ },
/* 92 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./en-US": 94,
		"./en-US.js": 94,
		"./pt-BR": 95,
		"./pt-BR.js": 95
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 93;


/***/ },
/* 94 */
/***/ function(module, exports) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	module.exports = {
	  IndexFilters: {
	    filters: '{quantity, plural,\n  =0 {Filters}\n  =1 {one filter}\n  other {# filters}\n}'
	  },
	  Active: 'Active',
	  Alerts: 'Alerts',
	  All: 'All',
	  Category: 'Category',
	  Cleared: 'Cleared',
	  Completed: 'Completed',
	  created: 'Created',
	  Critical: 'Critical',
	  Disabled: 'Disabled',
	  Error: 'Error',
	  Filter: 'Filter',
	  Footer: 'Footer',
	  'Grommet Logo': 'Grommet Logo',
	  loginInvalidPassword: 'Please provide Username and Password.',
	  'Log In': 'Log In',
	  Logout: 'Logout',
	  'Main Content': 'Main Content',
	  model: 'Model',
	  modified: 'Modified',
	  Name: 'Name',
	  OK: 'OK',
	  Password: 'Password',
	  'Remember me': 'Remember me',
	  Resource: 'Resource',
	  Running: 'Running',
	  Search: 'Search',
	  'Skip to': 'Skip to',
	  State: 'State',
	  Status: 'Status',
	  Tasks: 'Tasks',
	  Time: 'Time',
	  Total: 'Total',
	  Unknown: 'Unknown',
	  Username: 'Username',
	  uri: 'URI',
	  Warning: 'Warning'
	};

/***/ },
/* 95 */
/***/ function(module, exports) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	module.exports = {
	  IndexFilters: {
	    filters: '{quantity, plural,\n  =0 {Filtros}\n  =1 {um filtro}\n  other {# filtros}\n}'
	  },
	  Active: 'Ativos',
	  Alerts: 'Alertas',
	  All: 'Todos',
	  Category: 'Categoria',
	  Cleared: 'Livre',
	  Completed: 'Completado',
	  created: 'Criado',
	  Critical: 'Crítico',
	  Disabled: 'Desabilitado',
	  Error: 'Erro',
	  Filter: 'Filtro',
	  Footer: 'Rodapé',
	  'Grommet Logo': 'Gromment Logomarca',
	  loginInvalidPassword: 'Por favor, informe Usuário e Senha.',
	  'Log In': 'Logar',
	  Logout: 'Deslogar',
	  'Main Content': 'Conteúdo Principal',
	  model: 'Modelo',
	  modified: 'Modificado',
	  Name: 'Nome',
	  OK: 'OK',
	  Password: 'Senha',
	  'Remember me': 'Lembrar Usuário',
	  Resource: 'Recurso',
	  Running: 'Executando',
	  Search: 'Buscar',
	  'Skip to': 'Saltar para',
	  State: 'Estado',
	  Status: 'Situaçāo',
	  Tasks: 'Tarefas',
	  Time: 'Data',
	  Total: 'Total',
	  Unknown: 'Desconhecido',
	  Username: 'Usuário',
	  uri: 'URI',
	  Warning: 'Alerta'
	};

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.
	'use strict';

	var merge = __webpack_require__(10);
	var Cookies = __webpack_require__(97);
	var fallbackLocale = 'en-US';

	function normalizeLocale(locale) {
	  var locales = locale.replace(/_/g, '-').split('-');
	  var normalizedLocale = locales[0];
	  if (locales.length > 1) {
	    normalizedLocale += '-' + locales[1].toUpperCase();
	  }

	  return normalizedLocale;
	}

	module.exports = {
	  getCurrentLocale: function getCurrentLocale() {
	    var cookieLanguages = Cookies.get('languages');
	    var locale = cookieLanguages ? JSON.parse(cookieLanguages)[0] : undefined;
	    if (!locale) {
	      locale = window.navigator.languages ? window.navigator.languages[0] : window.navigator.language || window.navigator.userLanguage;
	    }

	    return normalizeLocale(locale || fallbackLocale);
	  },

	  getLocaleData: function getLocaleData(appLocale) {
	    var locale = this.getCurrentLocale();
	    var grommetMessages;
	    try {
	      grommetMessages = __webpack_require__(93)("./" + locale);
	    } catch (e) {
	      console.warn(locale + ' not supported, fallback to English has been applied.');
	      locale = fallbackLocale;
	      grommetMessages = __webpack_require__(94);
	    }

	    var messages = merge(grommetMessages, appLocale || {});

	    return {
	      locale: locale,
	      messages: messages
	    };
	  }
	};

/***/ },
/* 97 */
/***/ function(module, exports) {

	// (C) Copyright 2015 Hewlett-Packard Development Company, L.P.

	// Slightly modified version of the Mozilla Developer Network version.
	// renamed the module and the functions.

	/*\
	|*|
	|*|  :: cookies.js ::
	|*|
	|*|  A complete cookies reader/writer framework with full unicode support.
	|*|
	|*|  Revision #1 - September 4, 2014
	|*|
	|*|  https://developer.mozilla.org/en-US/docs/Web/API/document.cookie
	|*|  https://developer.mozilla.org/User:fusionchess
	|*|
	|*|  This framework is released under the GNU Public License, version 3 or later.
	|*|  http://www.gnu.org/licenses/gpl-3.0-standalone.html
	|*|
	|*|  Syntaxes:
	|*|
	|*|  * Cookies.set(name, value[, end[, path[, domain[, secure]]]])
	|*|  * Cookies.get(name)
	|*|  * Cookies.remove(name[, path[, domain]])
	|*|  * Cookies.has(name)
	|*|  * Cookies.keys()
	|*|
	\*/

	"use strict";

	var Cookies = {
	  get: function get(sKey) {
	    if (!sKey) {
	      return null;
	    }
	    return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
	  },
	  set: function set(sKey, sValue, vEnd, sPath, sDomain, bSecure) {
	    if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) {
	      return false;
	    }
	    var sExpires = "";
	    if (vEnd) {
	      switch (vEnd.constructor) {
	        case Number:
	          sExpires = vEnd === Infinity ? "; expires=Fri, 31 Dec 9999 23:59:59 GMT" : "; max-age=" + vEnd;
	          break;
	        case String:
	          sExpires = "; expires=" + vEnd;
	          break;
	        case Date:
	          sExpires = "; expires=" + vEnd.toUTCString();
	          break;
	      }
	    }
	    document.cookie = encodeURIComponent(sKey) + "=" + encodeURIComponent(sValue) + sExpires + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "") + (bSecure ? "; secure" : "");
	    return true;
	  },
	  remove: function remove(sKey, sPath, sDomain) {
	    if (!this.has(sKey)) {
	      return false;
	    }
	    document.cookie = encodeURIComponent(sKey) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT" + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "");
	    return true;
	  },
	  has: function has(sKey) {
	    if (!sKey) {
	      return false;
	    }
	    return new RegExp("(?:^|;\\s*)" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=").test(document.cookie);
	  },
	  keys: function keys() {
	    var aKeys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, "").split(/\s*(?:\=[^;]*)?;\s*/);
	    for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) {
	      aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]);
	    }
	    return aKeys;
	  }
	};

	module.exports = Cookies;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var merge = __webpack_require__(10);
	var pick = __webpack_require__(43);
	var keys = __webpack_require__(36);
	var Box = __webpack_require__(51);
	var KeyboardAccelerators = __webpack_require__(8);
	var DOM = __webpack_require__(49);
	var Scroll = __webpack_require__(99);
	var SkipLinkAnchor = __webpack_require__(100);

	var CLASS_ROOT = "article";

	var Article = React.createClass({
	  displayName: 'Article',

	  propTypes: merge({
	    scrollStep: React.PropTypes.bool,
	    primary: React.PropTypes.bool
	  }, Box.propTypes),

	  mixins: [KeyboardAccelerators],

	  getDefaultProps: function getDefaultProps() {
	    return {
	      pad: 'none',
	      direction: 'column'
	    };
	  },

	  _markInactive: function _markInactive() {
	    var articleElement = this.refs.component.getDOMNode();
	    var sections = articleElement.querySelectorAll('.section.box--full');
	    for (var i = 0; i < sections.length; i += 1) {
	      var section = sections[i];
	      var rect = section.getBoundingClientRect();
	      if (rect.top > window.innerHeight - 10) {
	        section.classList.add('section--inactive');
	      } else {
	        section.classList.remove('section--inactive');
	      }
	    }
	  },

	  _onScroll: function _onScroll(event) {
	    clearTimeout(this._scrollTimer);
	    this._scrollTimer = setTimeout(this._markInactive, 50);
	  },

	  _onWheel: function _onWheel(event) {
	    if (Math.abs(event.deltaY) > 100) {
	      clearInterval(this._scrollTimer);
	    } else if (event.deltaY > 5) {
	      this._onDown();
	    } else if (event.deltaY < -5) {
	      this._onUp();
	    }
	  },

	  _onDown: function _onDown(event) {
	    if (event) {
	      event.preventDefault();
	    }
	    var articleElement = this.refs.component.getDOMNode();
	    var sections = articleElement.querySelectorAll('.section.box--full');
	    for (var i = 0; i < sections.length; i += 1) {
	      var section = sections[i];
	      var rect = section.getBoundingClientRect();
	      // 10 is for fuzziness
	      if (rect.bottom > 10 && (event || rect.bottom < window.innerHeight)) {
	        Scroll.scrollBy(this._scrollParent, 'scrollTop', rect.bottom);
	        break;
	      }
	    }
	  },

	  _onUp: function _onUp(event) {
	    if (event) {
	      event.preventDefault();
	    }
	    var articleElement = this.refs.component.getDOMNode();
	    var sections = articleElement.querySelectorAll('.section.box--full');
	    for (var i = 0; i < sections.length; i += 1) {
	      var section = sections[i];
	      var rect = section.getBoundingClientRect();
	      // -10 is for fuzziness
	      if ((rect.top >= -10 || i === sections.length - 1) && (event || rect.top < window.innerHeight)) {
	        if (i > 0) {
	          section = sections[i - 1];
	          rect = section.getBoundingClientRect();
	          Scroll.scrollBy(this._scrollParent, 'scrollTop', rect.top);
	        }
	        break;
	      }
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { scrollTop: 0 };
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.props.scrollStep) {
	      this._markInactive();
	      var articleElement = this.refs.component.getDOMNode();
	      this._scrollParent = DOM.findScrollParents(articleElement)[0];
	      document.addEventListener('wheel', this._onWheel);
	      this._scrollParent.addEventListener('scroll', this._onScroll);
	      this.startListeningToKeyboard({
	        up: this._onUp,
	        down: this._onDown
	      });
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this.props.scrollStep) {
	      document.removeEventListener('wheel', this._onWheel);
	      clearInterval(this._scrollToTimer);
	      this._scrollParent.removeEventListener('scroll', this._onScroll);
	      clearTimeout(this._scrollTimer);
	      this.stopListeningToKeyboard({
	        up: this._onUp,
	        down: this._onDown
	      });
	    }
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    var other = pick(this.props, keys(Box.propTypes));
	    if (this.props.scrollStep) {
	      classes.push(CLASS_ROOT + "--scroll-step");
	    }

	    var skipLinkAnchor = null;
	    if (this.props.primary) {
	      skipLinkAnchor = React.createElement(SkipLinkAnchor, { label: 'Main Content' });
	    }
	    return React.createElement(
	      Box,
	      _extends({ ref: 'component', tag: 'article' }, other, { className: classes.join(' ') }),
	      skipLinkAnchor,
	      this.props.children
	    );
	  }
	});

	module.exports = Article;

/***/ },
/* 99 */
/***/ function(module, exports) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	/*
	 * Scroll provides smooth scrolling.
	 */

	"use strict";

	var SCROLL_STEPS = 25;

	var Scroll = {

	  _easeInOutQuad: function _easeInOutQuad(t) {
	    return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
	  },

	  // component: component to scroll
	  // property: 'scrollTop' | 'scrollLeft'
	  // delta: amount to scroll

	  scrollBy: function scrollBy(component, property, delta) {
	    clearInterval(this._scrollToTimer);
	    var start = component[property];
	    var position = start + delta;
	    var step = 1;
	    this._scrollToTimer = setInterval((function () {
	      var next;
	      var easing = this._easeInOutQuad(step / SCROLL_STEPS);
	      if (position > start) {
	        next = Math.min(position, Math.max(component[property], Math.round(start + (position - start) * easing)));
	      } else {
	        next = Math.max(position, Math.min(component[property], Math.round(start - (start - position) * easing)));
	      }
	      component[property] = next;
	      step += 1;
	      if (step > SCROLL_STEPS) {
	        // we're done
	        clearInterval(this._scrollToTimer);
	      }
	    }).bind(this), 8);
	  }
	};

	module.exports = Scroll;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);

	var SkipLinkAnchor = React.createClass({
	  displayName: 'SkipLinkAnchor',

	  propTypes: {
	    label: React.PropTypes.string.isRequired
	  },

	  mixins: [IntlMixin],

	  render: function render() {
	    var id = 'skip-link-' + this.props.label.toLowerCase().replace(/ /g, '_');
	    return React.createElement('a', { tabIndex: '-1', id: id, 'data-skip-label': this.getGrommetIntlMessage(this.props.label), className: 'skip-link-anchor' });
	  }

	});

	module.exports = SkipLinkAnchor;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	var React = __webpack_require__(2);

	var CLASS_ROOT = "button";

	var Button = React.createClass({
	  displayName: "Button",

	  propTypes: {
	    accent: React.PropTypes.bool,
	    label: React.PropTypes.string.isRequired,
	    large: React.PropTypes.bool,
	    onClick: React.PropTypes.func,
	    primary: React.PropTypes.bool,
	    id: React.PropTypes.string
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.primary) {
	      classes.push(CLASS_ROOT + "--primary");
	    }
	    if (this.props.accent) {
	      classes.push(CLASS_ROOT + "--accent");
	    }
	    if (!this.props.onClick) {
	      classes.push(CLASS_ROOT + "--disabled");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      "button",
	      { id: this.props.id, className: classes.join(' '),
	        onClick: this.props.onClick },
	      this.props.label
	    );
	  }

	});

	module.exports = Button;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var moment = __webpack_require__(103);
	var KeyboardAccelerators = __webpack_require__(8);
	var Drop = __webpack_require__(48);
	var CalendarIcon = __webpack_require__(191);
	var PreviousIcon = __webpack_require__(192);
	var NextIcon = __webpack_require__(3);
	var Header = __webpack_require__(193);
	var Menu = __webpack_require__(9);
	var Title = __webpack_require__(194);

	var CLASS_ROOT = "calendar";

	var Calendar = React.createClass({
	  displayName: 'Calendar',

	  propTypes: {
	    id: React.PropTypes.string,
	    name: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    value: React.PropTypes.string
	  },

	  mixins: [KeyboardAccelerators],

	  getDefaultProps: function getDefaultProps() {
	    return {
	      value: moment().format('YYYY-MM-DD')
	    };
	  },

	  _onInputChange: function _onInputChange(event) {
	    if (this.props.onChange) {
	      this.props.onChange(event.target.value);
	    }
	  },

	  _onOpen: function _onOpen(event) {
	    event.preventDefault();
	    this.setState({ dropActive: true });
	  },

	  _onClose: function _onClose() {
	    this.setState({ dropActive: false });
	  },

	  _onClickDay: function _onClickDay(date) {
	    if (this.props.onChange) {
	      this.props.onChange(moment(date).format('YYYY-MM-DD'));
	    }
	  },

	  _onPrevious: function _onPrevious(event) {
	    event.preventDefault();
	    event.stopPropagation();
	    if (event.nativeEvent && event.nativeEvent.stopImmediatePropagation) {
	      event.nativeEvent.stopImmediatePropagation();
	    }
	    this.setState({
	      reference: this.state.reference.subtract(1, 'month'),
	      current: this.state.reference
	    });
	  },

	  _onNext: function _onNext(event) {
	    event.preventDefault();
	    event.stopPropagation();
	    if (event.nativeEvent && event.nativeEvent.stopImmediatePropagation) {
	      event.nativeEvent.stopImmediatePropagation();
	    }
	    this.setState({
	      reference: this.state.reference.add(1, 'month'),
	      current: this.state.reference
	    });
	  },

	  _onNextDay: function _onNextDay(event) {
	    event.preventDefault();
	    event.stopPropagation();
	    var nextDay = moment(this.state.current).add(1, 'days');

	    if (!nextDay.isSame(this.state.reference, 'month')) {
	      this.setState({ reference: this.state.reference.add(1, 'month'), current: nextDay });
	    } else {
	      this.setState({ current: nextDay });
	    }
	  },

	  _onPreviousDay: function _onPreviousDay(event) {
	    event.preventDefault();
	    event.stopPropagation();
	    var previousDay = moment(this.state.current).subtract(1, 'days');
	    if (!previousDay.isSame(this.state.reference, 'month')) {
	      this.setState({ reference: this.state.reference.subtract(1, 'month'), current: previousDay });
	    } else {
	      this.setState({ current: previousDay });
	    }
	  },

	  _onNextWeek: function _onNextWeek(event) {
	    event.preventDefault();
	    event.stopPropagation();
	    var nextWeek = moment(this.state.current).add(1, 'week');

	    if (!nextWeek.isSame(this.state.reference, 'month')) {
	      this.setState({ reference: this.state.reference.add(1, 'month'), current: nextWeek });
	    } else {
	      this.setState({ current: nextWeek });
	    }
	  },

	  _onPreviousWeek: function _onPreviousWeek(event) {
	    event.preventDefault();
	    event.stopPropagation();
	    var previousWeek = moment(this.state.current).subtract(1, 'week');
	    if (!previousWeek.isSame(this.state.reference, 'month')) {
	      this.setState({ reference: this.state.reference.subtract(1, 'month'), current: previousWeek });
	    } else {
	      this.setState({ current: previousWeek });
	    }
	  },

	  _onSelectDate: function _onSelectDate(event) {
	    event.preventDefault();
	    event.stopPropagation();
	    this._onClickDay(this.state.current);
	    this._onClose();
	  },

	  _activation: function _activation(dropActive) {

	    var listeners = {
	      esc: this._onClose,
	      tab: this._onClose,
	      right: this._onNextDay,
	      left: this._onPreviousDay,
	      down: this._onNextWeek,
	      up: this._onPreviousWeek,
	      shiftLeft: this._onPrevious,
	      shiftRight: this._onNext,
	      enter: this._onSelectDate,
	      space: this._onSelectDate
	    };

	    if (dropActive) {

	      document.addEventListener('click', this._onClose);
	      this.startListeningToKeyboard(listeners);

	      this._drop = Drop.add(this.refs.component.getDOMNode(), this._renderDrop(), { top: 'bottom', left: 'left' });
	    } else {

	      document.removeEventListener('click', this._onClose);
	      this.stopListeningToKeyboard(listeners);

	      if (this._drop) {
	        this._drop.remove();
	        this._drop = null;
	      }
	    }
	  },

	  _stateFromProps: function _stateFromProps(props) {
	    var result = {
	      current: null,
	      reference: moment().startOf('day')
	    };
	    var date = moment(props.value);
	    if (date.isValid()) {
	      result.current = moment(date).startOf('day');
	      result.reference = moment(date).startOf('day');
	    }
	    return result;
	  },

	  getInitialState: function getInitialState() {
	    var state = this._stateFromProps(this.props);
	    state.dropActive = false;
	    return state;
	  },

	  componentDidMount: function componentDidMount() {
	    this._activation(this.state.dropActive);
	  },

	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    // Set up keyboard listeners appropriate to the current state.
	    if (!this.state.dropActive && prevState.dropActive) {
	      this._activation(this.state.dropActive);
	    }
	    if (this.state.dropActive && !prevState.dropActive) {
	      this._activation(this.state.dropActive);
	    }
	    if (this.state.dropActive) {
	      this._drop.render(this._renderDrop());
	    }
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    var state = this._stateFromProps(newProps);
	    this.setState(state);
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    this._activation(false);
	  },

	  _renderDrop: function _renderDrop() {
	    var weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
	    var headerCells = weekDays.map(function (day) {
	      return React.createElement(
	        'th',
	        { key: day },
	        day
	      );
	    });

	    var reference = this.state.reference;
	    var start = moment(reference).startOf('month').startOf('week');
	    var end = moment(reference).endOf('month').endOf('week');
	    var date = moment(start);
	    var rows = [];

	    while (date.valueOf() <= end.valueOf()) {
	      var days = [];
	      for (var i = 0; i < 7; i += 1) {
	        var classes = [CLASS_ROOT + "__day"];
	        if (this.state.current && date.isSame(this.state.current)) {
	          classes.push(CLASS_ROOT + "__day--active");
	        }
	        if (!date.isSame(reference, 'month')) {
	          classes.push(CLASS_ROOT + "__day--other-month");
	        }
	        days.push(React.createElement(
	          'td',
	          { key: date.valueOf() },
	          React.createElement(
	            'div',
	            { className: classes.join(' '),
	              onClick: this._onClickDay.bind(this, moment(date)) },
	            date.date()
	          )
	        ));
	        date.add(1, 'days');
	      }
	      rows.push(React.createElement(
	        'tr',
	        { key: date.valueOf() },
	        days
	      ));
	    }

	    return React.createElement(
	      'div',
	      { id: CLASS_ROOT + "-drop", className: CLASS_ROOT + "__drop",
	        onClick: this._onClose },
	      React.createElement(
	        Header,
	        { justify: 'between' },
	        React.createElement(
	          Menu,
	          { responsive: false },
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__previous", onClick: this._onPrevious },
	            React.createElement(PreviousIcon, null)
	          )
	        ),
	        React.createElement(
	          Title,
	          { className: CLASS_ROOT + "__title", responsive: false },
	          this.state.reference.format('MMMM YYYY')
	        ),
	        React.createElement(
	          Menu,
	          { responsive: false },
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__next", onClick: this._onNext },
	            React.createElement(NextIcon, null)
	          )
	        )
	      ),
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__grid" },
	        React.createElement(
	          'table',
	          null,
	          React.createElement(
	            'thead',
	            null,
	            React.createElement(
	              'tr',
	              null,
	              headerCells
	            )
	          ),
	          React.createElement(
	            'tbody',
	            null,
	            rows
	          )
	        )
	      )
	    );
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.state.dropActive) {
	      classes.push(CLASS_ROOT + "--active");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      'div',
	      { ref: 'component', className: classes.join(' ') },
	      React.createElement('input', { className: CLASS_ROOT + "__input",
	        id: this.props.id, ref: 'calendarInput', name: this.props.name,
	        value: this.props.value,
	        onChange: this._onInputChange }),
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__control", onClick: this._onOpen },
	        React.createElement(CalendarIcon, null)
	      )
	    );
	  }

	});

	module.exports = Calendar;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.10.6
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, function () { 'use strict';

	    var hookCallback;

	    function utils_hooks__hooks () {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }

	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function create_utc__createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    function valid__isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            m._isValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated;

	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }

	    function valid__createInvalid (flags) {
	        var m = create_utc__createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    var momentProperties = utils_hooks__hooks.momentProperties = [];

	    function copyConfig(to, from) {
	        var i, prop, val;

	        if (typeof from._isAMomentObject !== 'undefined') {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (typeof from._i !== 'undefined') {
	            to._i = from._i;
	        }
	        if (typeof from._f !== 'undefined') {
	            to._f = from._f;
	        }
	        if (typeof from._l !== 'undefined') {
	            to._l = from._l;
	        }
	        if (typeof from._strict !== 'undefined') {
	            to._strict = from._strict;
	        }
	        if (typeof from._tzm !== 'undefined') {
	            to._tzm = from._tzm;
	        }
	        if (typeof from._isUTC !== 'undefined') {
	            to._isUTC = from._isUTC;
	        }
	        if (typeof from._offset !== 'undefined') {
	            to._offset = from._offset;
	        }
	        if (typeof from._pf !== 'undefined') {
	            to._pf = getParsingFlags(from);
	        }
	        if (typeof from._locale !== 'undefined') {
	            to._locale = from._locale;
	        }

	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (typeof val !== 'undefined') {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    var updateInProgress = false;

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            utils_hooks__hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }

	    function absFloor (number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function Locale() {
	    }

	    var locales = {};
	    var globalLocale;

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && typeof module !== 'undefined' &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                __webpack_require__(105)("./" + name);
	                // because defineLocale currently also sets the global locale, we
	                // want to undo that for lazy loaded locales
	                locale_locales__getSetGlobalLocale(oldLocale);
	            } catch (e) { }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function locale_locales__getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (typeof values === 'undefined') {
	                data = locale_locales__getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale (name, values) {
	        if (values !== null) {
	            values.abbr = name;
	            locales[name] = locales[name] || new Locale();
	            locales[name].set(values);

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    // returns locale data
	    function locale_locales__getLocale (key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    var aliases = {};

	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                get_set__set(this, unit, value);
	                utils_hooks__hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get_set__get(this, unit);
	            }
	        };
	    }

	    function get_set__get (mom, unit) {
	        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
	    }

	    function get_set__set (mom, unit, value) {
	        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	    }

	    // MOMENTS

	    function getSet (units, value) {
	        var unit;
	        if (typeof units === 'object') {
	            for (unit in units) {
	                this.set(unit, units[unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (typeof this[units] === 'function') {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }

	    var formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	    var formatFunctions = {};

	    var formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '';
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	    // any word (or two) characters or numbers including two/three word month in arabic.
	    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

	    var regexes = {};

	    function isFunction (sth) {
	        // https://github.com/moment/moment/issues/2325
	        return typeof sth === 'function' &&
	            Object.prototype.toString.call(sth) === '[object Function]';
	    }


	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }

	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }).replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (typeof callback === 'number') {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;

	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PARSING

	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  matchWord);
	    addRegexToken('MMMM', matchWord);

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m) {
	        return this._months[m.month()];
	    }

	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m) {
	        return this._monthsShort[m.month()];
	    }

	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth (mom, value) {
	        var dayOfMonth;

	        // TODO: Move this out of here!
	        if (typeof value === 'string') {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (typeof value !== 'number') {
	                return mom;
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            utils_hooks__hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get_set__get(this, 'Month');
	        }
	    }

	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }

	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;

	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    function warn(msg) {
	        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (firstTime) {
	                warn(msg + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    utils_hooks__hooks.suppressDeprecationWarnings = false;

	    var from_string__isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
	        ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d{2}/],
	        ['YYYY-DDD', /\d{4}-\d{3}/]
	    ];

	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
	        ['HH:mm', /(T| )\d\d:\d\d/],
	        ['HH', /(T| )\d\d/]
	    ];

	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = from_string__isoRegex.exec(string);

	        if (match) {
	            getParsingFlags(config).iso = true;
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(string)) {
	                    config._f = isoDates[i][0];
	                    break;
	                }
	            }
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(string)) {
	                    // match[6] should be 'T' or space
	                    config._f += (match[6] || ' ') + isoTimes[i][0];
	                    break;
	                }
	            }
	            if (string.match(matchOffset)) {
	                config._f += 'Z';
	            }
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);

	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    utils_hooks__hooks.createFromInputFallback = deprecate(
	        'moment construction falls back to js Date. This is ' +
	        'discouraged and will be removed in upcoming major ' +
	        'release. Please refer to ' +
	        'https://github.com/moment/moment/issues/1407 for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    function createDate (y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor doesn't accept years < 1970
	        if (y < 1970) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	        if (y < 1970) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PARSING

	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    // HOOKS

	    utils_hooks__hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', false);

	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PARSING

	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });

	    // HELPERS

	    // firstDayOfWeek       0 = sun, 6 = sat
	    //                      the day of the week that starts the week
	    //                      (usually sunday or monday)
	    // firstDayOfWeekOfYear 0 = sun, 6 = sat
	    //                      the first week is the week that contains the first
	    //                      of this day of the week
	    //                      (eg. ISO weeks use thursday (4))
	    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
	        var end = firstDayOfWeekOfYear - firstDayOfWeek,
	            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
	            adjustedMoment;


	        if (daysToDayOfWeek > end) {
	            daysToDayOfWeek -= 7;
	        }

	        if (daysToDayOfWeek < end - 7) {
	            daysToDayOfWeek += 7;
	        }

	        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');
	        return {
	            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
	            year: adjustedMoment.year()
	        };
	    }

	    // LOCALES

	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };

	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PARSING

	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
	        var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear, janX = createUTCDate(year, 0, 1 + week1Jan), d = janX.getUTCDay(), dayOfYear;
	        if (d < firstDayOfWeek) {
	            d += 7;
	        }

	        weekday = weekday != null ? 1 * weekday : firstDayOfWeek;

	        dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

	        return {
	            year: dayOfYear > 0 ? year : year - 1,
	            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
	        };
	    }

	    // MOMENTS

	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        var now = new Date();
	        if (config._useUTC) {
	            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
	        }
	        return [now.getFullYear(), now.getMonth(), now.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
	            week = defaults(w.w, 1);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < dow) {
	                    ++week;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }

	    utils_hooks__hooks.ISO_8601 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === utils_hooks__hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }

	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (getParsingFlags(config).bigHour === true &&
	                config._a[HOUR] <= 12 &&
	                config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	        configFromArray(config);
	        checkOverflow(config);
	    }


	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,

	            scoreToBeat,
	            i,
	            currentScore;

	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (!valid__isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i);
	        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];

	        configFromArray(config);
	    }

	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || locale_locales__getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return valid__createInvalid({nullInput: true});
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else if (isDate(input)) {
	            config._d = input;
	        } else {
	            configFromInput(config);
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (input === undefined) {
	            config._d = new Date();
	        } else if (isDate(input)) {
	            config._d = new Date(+input);
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (typeof(input) === 'object') {
	            configFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};

	        if (typeof(locale) === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function local__createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
	         function () {
	             var other = local__createLocal.apply(null, arguments);
	             return other < this ? this : other;
	         }
	     );

	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
	        function () {
	            var other = local__createLocal.apply(null, arguments);
	            return other > this ? this : other;
	        }
	    );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return local__createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 36e5; // 1000 * 60 * 60
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;

	        this._data = {};

	        this._locale = locale_locales__getLocale();

	        this._bubble();
	    }

	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }

	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z',  matchOffset);
	    addRegexToken('ZZ', matchOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(string) {
	        var matches = ((string || '').match(matchOffset) || []);
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(+res._d + diff);
	            utils_hooks__hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return local__createLocal(input).local();
	        }
	    }

	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    utils_hooks__hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(input);
	            }
	            if (Math.abs(input) < 16) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    utils_hooks__hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset () {
	        if (this._tzm) {
	            this.utcOffset(this._tzm);
	        } else if (typeof this._i === 'string') {
	            this.utcOffset(offsetFromString(this._i));
	        }
	        return this;
	    }

	    function hasAlignedHourOffset (input) {
	        input = input ? local__createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted () {
	        if (typeof this._isDSTShifted !== 'undefined') {
	            return this._isDSTShifted;
	        }

	        var c = {};

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal () {
	        return !this._isUTC;
	    }

	    function isUtcOffset () {
	        return this._isUTC;
	    }

	    function isUtc () {
	        return this._isUTC && this._offset === 0;
	    }

	    var aspNetRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;

	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

	    function create__createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])        * sign,
	                h  : toInt(match[HOUR])        * sign,
	                m  : toInt(match[MINUTE])      * sign,
	                s  : toInt(match[SECOND])      * sign,
	                ms : toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = create__isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                d : parseIso(match[4], sign),
	                h : parseIso(match[5], sign),
	                m : parseIso(match[6], sign),
	                s : parseIso(match[7], sign),
	                w : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        return ret;
	    }

	    create__createDuration.fn = Duration.prototype;

	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};

	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val; val = period; period = tmp;
	            }

	            val = typeof val === 'string' ? +val : val;
	            dur = create__createDuration(val, period);
	            add_subtract__addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = duration._days,
	            months = duration._months;
	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(+mom._d + milliseconds * isAdding);
	        }
	        if (days) {
	            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            utils_hooks__hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add_subtract__add      = createAdder(1, 'add');
	    var add_subtract__subtract = createAdder(-1, 'subtract');

	    function moment_calendar__calendar (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || local__createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            diff = this.diff(sod, 'days', true),
	            format = diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';
	        return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));
	    }

	    function clone () {
	        return new Moment(this);
	    }

	    function isAfter (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this > +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return inputMs < +this.clone().startOf(units);
	        }
	    }

	    function isBefore (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this < +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return +this.clone().endOf(units) < inputMs;
	        }
	    }

	    function isBetween (from, to, units) {
	        return this.isAfter(from, units) && this.isBefore(to, units);
	    }

	    function isSame (input, units) {
	        var inputMs;
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this === +input;
	        } else {
	            inputMs = +local__createLocal(input);
	            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));
	        }
	    }

	    function diff (input, units, asFloat) {
	        var that = cloneWithOffset(input, this),
	            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,
	            delta, output;

	        units = normalizeUnits(units);

	        if (units === 'year' || units === 'month' || units === 'quarter') {
	            output = monthDiff(this, that);
	            if (units === 'quarter') {
	                output = output / 3;
	            } else if (units === 'year') {
	                output = output / 12;
	            }
	        } else {
	            delta = this - that;
	            output = units === 'second' ? delta / 1e3 : // 1000
	                units === 'minute' ? delta / 6e4 : // 1000 * 60
	                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                delta;
	        }
	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        return -(wholeMonthDiff + adjust);
	    }

	    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function moment_format__toISOString () {
	        var m = this.clone().utc();
	        if (0 < m.year() && m.year() <= 9999) {
	            if ('function' === typeof Date.prototype.toISOString) {
	                // native implementation is ~50x faster, use it when we can
	                return this.toDate().toISOString();
	            } else {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        } else {
	            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    }

	    function format (inputString) {
	        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
	        return this.localeData().postformat(output);
	    }

	    function from (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function fromNow (withoutSuffix) {
	        return this.from(local__createLocal(), withoutSuffix);
	    }

	    function to (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function toNow (withoutSuffix) {
	        return this.to(local__createLocal(), withoutSuffix);
	    }

	    function locale (key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = locale_locales__getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData () {
	        return this._locale;
	    }

	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	        }

	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }

	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }

	        return this;
	    }

	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }
	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }

	    function to_type__valueOf () {
	        return +this._d - ((this._offset || 0) * 60000);
	    }

	    function unix () {
	        return Math.floor(+this / 1000);
	    }

	    function toDate () {
	        return this._offset ? new Date(+this) : this._d;
	    }

	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }

	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }

	    function moment_valid__isValid () {
	        return valid__isValid(this);
	    }

	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PARSING

	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);

	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function weeksInYear(year, dow, doy) {
	        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;
	    }

	    // MOMENTS

	    function getSetWeekYear (input) {
	        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getSetISOWeekYear (input) {
	        var year = weekOfYear(this, 1, 4).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    addFormatToken('Q', 0, 0, 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PARSING

	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0], 10);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PARSING

	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   matchWord);
	    addRegexToken('ddd',  matchWord);
	    addRegexToken('dddd', matchWord);

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {
	        var weekday = config._locale.weekdaysParse(input);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    // LOCALES

	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m) {
	        return this._weekdays[m.day()];
	    }

	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return this._weekdaysShort[m.day()];
	    }

	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return this._weekdaysMin[m.day()];
	    }

	    function localeWeekdaysParse (weekdayName) {
	        var i, mom, regex;

	        this._weekdaysParse = this._weekdaysParse || [];

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            if (!this._weekdaysParse[i]) {
	                mom = local__createLocal([2000, 1]).day(i);
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek (input) {
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek (input) {
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek (input) {
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, function () {
	        return this.hours() % 12 || 12;
	    });

	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PARSING

	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });

	    // LOCALES

	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }


	    // MOMENTS

	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PARSING

	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PARSING

	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });


	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PARSING

	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);

	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS

	    var getSetMillisecond = makeGetSet('Milliseconds', false);

	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var momentPrototype__proto = Moment.prototype;

	    momentPrototype__proto.add          = add_subtract__add;
	    momentPrototype__proto.calendar     = moment_calendar__calendar;
	    momentPrototype__proto.clone        = clone;
	    momentPrototype__proto.diff         = diff;
	    momentPrototype__proto.endOf        = endOf;
	    momentPrototype__proto.format       = format;
	    momentPrototype__proto.from         = from;
	    momentPrototype__proto.fromNow      = fromNow;
	    momentPrototype__proto.to           = to;
	    momentPrototype__proto.toNow        = toNow;
	    momentPrototype__proto.get          = getSet;
	    momentPrototype__proto.invalidAt    = invalidAt;
	    momentPrototype__proto.isAfter      = isAfter;
	    momentPrototype__proto.isBefore     = isBefore;
	    momentPrototype__proto.isBetween    = isBetween;
	    momentPrototype__proto.isSame       = isSame;
	    momentPrototype__proto.isValid      = moment_valid__isValid;
	    momentPrototype__proto.lang         = lang;
	    momentPrototype__proto.locale       = locale;
	    momentPrototype__proto.localeData   = localeData;
	    momentPrototype__proto.max          = prototypeMax;
	    momentPrototype__proto.min          = prototypeMin;
	    momentPrototype__proto.parsingFlags = parsingFlags;
	    momentPrototype__proto.set          = getSet;
	    momentPrototype__proto.startOf      = startOf;
	    momentPrototype__proto.subtract     = add_subtract__subtract;
	    momentPrototype__proto.toArray      = toArray;
	    momentPrototype__proto.toObject     = toObject;
	    momentPrototype__proto.toDate       = toDate;
	    momentPrototype__proto.toISOString  = moment_format__toISOString;
	    momentPrototype__proto.toJSON       = moment_format__toISOString;
	    momentPrototype__proto.toString     = toString;
	    momentPrototype__proto.unix         = unix;
	    momentPrototype__proto.valueOf      = to_type__valueOf;

	    // Year
	    momentPrototype__proto.year       = getSetYear;
	    momentPrototype__proto.isLeapYear = getIsLeapYear;

	    // Week Year
	    momentPrototype__proto.weekYear    = getSetWeekYear;
	    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

	    // Quarter
	    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

	    // Month
	    momentPrototype__proto.month       = getSetMonth;
	    momentPrototype__proto.daysInMonth = getDaysInMonth;

	    // Week
	    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
	    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
	    momentPrototype__proto.weeksInYear    = getWeeksInYear;
	    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

	    // Day
	    momentPrototype__proto.date       = getSetDayOfMonth;
	    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
	    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
	    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
	    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

	    // Hour
	    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

	    // Minute
	    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

	    // Second
	    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

	    // Millisecond
	    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

	    // Offset
	    momentPrototype__proto.utcOffset            = getSetOffset;
	    momentPrototype__proto.utc                  = setOffsetToUTC;
	    momentPrototype__proto.local                = setOffsetToLocal;
	    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
	    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    momentPrototype__proto.isDST                = isDaylightSavingTime;
	    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
	    momentPrototype__proto.isLocal              = isLocal;
	    momentPrototype__proto.isUtcOffset          = isUtcOffset;
	    momentPrototype__proto.isUtc                = isUtc;
	    momentPrototype__proto.isUTC                = isUtc;

	    // Timezone
	    momentPrototype__proto.zoneAbbr = getZoneAbbr;
	    momentPrototype__proto.zoneName = getZoneName;

	    // Deprecations
	    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

	    var momentPrototype = momentPrototype__proto;

	    function moment__createUnix (input) {
	        return local__createLocal(input * 1000);
	    }

	    function moment__createInZone () {
	        return local__createLocal.apply(null, arguments).parseZone();
	    }

	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };

	    function locale_calendar__calendar (key, mom, now) {
	        var output = this._calendar[key];
	        return typeof output === 'function' ? output.call(mom, now) : output;
	    }

	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };

	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate () {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d';
	    var defaultOrdinalParse = /\d{1,2}/;

	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }

	    function preParsePostFormat (string) {
	        return string;
	    }

	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };

	    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (typeof output === 'function') ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }

	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
	    }

	    function locale_set__set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (typeof prop === 'function') {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _ordinalParseLenient.
	        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	    }

	    var prototype__proto = Locale.prototype;

	    prototype__proto._calendar       = defaultCalendar;
	    prototype__proto.calendar        = locale_calendar__calendar;
	    prototype__proto._longDateFormat = defaultLongDateFormat;
	    prototype__proto.longDateFormat  = longDateFormat;
	    prototype__proto._invalidDate    = defaultInvalidDate;
	    prototype__proto.invalidDate     = invalidDate;
	    prototype__proto._ordinal        = defaultOrdinal;
	    prototype__proto.ordinal         = ordinal;
	    prototype__proto._ordinalParse   = defaultOrdinalParse;
	    prototype__proto.preparse        = preParsePostFormat;
	    prototype__proto.postformat      = preParsePostFormat;
	    prototype__proto._relativeTime   = defaultRelativeTime;
	    prototype__proto.relativeTime    = relative__relativeTime;
	    prototype__proto.pastFuture      = pastFuture;
	    prototype__proto.set             = locale_set__set;

	    // Month
	    prototype__proto.months       =        localeMonths;
	    prototype__proto._months      = defaultLocaleMonths;
	    prototype__proto.monthsShort  =        localeMonthsShort;
	    prototype__proto._monthsShort = defaultLocaleMonthsShort;
	    prototype__proto.monthsParse  =        localeMonthsParse;

	    // Week
	    prototype__proto.week = localeWeek;
	    prototype__proto._week = defaultLocaleWeek;
	    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
	    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

	    // Day of Week
	    prototype__proto.weekdays       =        localeWeekdays;
	    prototype__proto._weekdays      = defaultLocaleWeekdays;
	    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
	    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
	    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
	    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
	    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

	    // Hours
	    prototype__proto.isPM = localeIsPM;
	    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
	    prototype__proto.meridiem = localeMeridiem;

	    function lists__get (format, index, field, setter) {
	        var locale = locale_locales__getLocale();
	        var utc = create_utc__createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function list (format, index, field, count, setter) {
	        if (typeof format === 'number') {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return lists__get(format, index, field, setter);
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < count; i++) {
	            out[i] = lists__get(format, i, field, setter);
	        }
	        return out;
	    }

	    function lists__listMonths (format, index) {
	        return list(format, index, 'months', 12, 'month');
	    }

	    function lists__listMonthsShort (format, index) {
	        return list(format, index, 'monthsShort', 12, 'month');
	    }

	    function lists__listWeekdays (format, index) {
	        return list(format, index, 'weekdays', 7, 'day');
	    }

	    function lists__listWeekdaysShort (format, index) {
	        return list(format, index, 'weekdaysShort', 7, 'day');
	    }

	    function lists__listWeekdaysMin (format, index) {
	        return list(format, index, 'weekdaysMin', 7, 'day');
	    }

	    locale_locales__getSetGlobalLocale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    // Side effect imports
	    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
	    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

	    var mathAbs = Math.abs;

	    function duration_abs__abs () {
	        var data           = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);

	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);

	        return this;
	    }

	    function duration_add_subtract__addSubtract (duration, input, value, direction) {
	        var other = create__createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function duration_add_subtract__add (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function duration_add_subtract__subtract (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, -1);
	    }

	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;

	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;

	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days   = days;
	        data.months = months;
	        data.years  = years;

	        return this;
	    }

	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }

	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }

	    function as (units) {
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function duration_as__valueOf () {
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');

	    function duration_get__get (units) {
	        units = normalizeUnits(units);
	        return this[units + 's']();
	    }

	    function makeGetter(name) {
	        return function () {
	            return this._data[name];
	        };
	    }

	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');

	    function weeks () {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round;
	    var thresholds = {
	        s: 45,  // seconds to minute
	        m: 45,  // minutes to hour
	        h: 22,  // hours to day
	        d: 26,  // days to month
	        M: 11   // months to year
	    };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
	        var duration = create__createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));

	        var a = seconds < thresholds.s && ['s', seconds]  ||
	                minutes === 1          && ['m']           ||
	                minutes < thresholds.m && ['mm', minutes] ||
	                hours   === 1          && ['h']           ||
	                hours   < thresholds.h && ['hh', hours]   ||
	                days    === 1          && ['d']           ||
	                days    < thresholds.d && ['dd', days]    ||
	                months  === 1          && ['M']           ||
	                months  < thresholds.M && ['MM', months]  ||
	                years   === 1          && ['y']           || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set a threshold for relative time strings
	    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        return true;
	    }

	    function humanize (withSuffix) {
	        var locale = this.localeData();
	        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var iso_string__abs = Math.abs;

	    function iso_string__toISOString() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        var seconds = iso_string__abs(this._milliseconds) / 1000;
	        var days         = iso_string__abs(this._days);
	        var months       = iso_string__abs(this._months);
	        var minutes, hours, years;

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;


	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds;
	        var total = this.asSeconds();

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        return (total < 0 ? '-' : '') +
	            'P' +
	            (Y ? Y + 'Y' : '') +
	            (M ? M + 'M' : '') +
	            (D ? D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? h + 'H' : '') +
	            (m ? m + 'M' : '') +
	            (s ? s + 'S' : '');
	    }

	    var duration_prototype__proto = Duration.prototype;

	    duration_prototype__proto.abs            = duration_abs__abs;
	    duration_prototype__proto.add            = duration_add_subtract__add;
	    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
	    duration_prototype__proto.as             = as;
	    duration_prototype__proto.asMilliseconds = asMilliseconds;
	    duration_prototype__proto.asSeconds      = asSeconds;
	    duration_prototype__proto.asMinutes      = asMinutes;
	    duration_prototype__proto.asHours        = asHours;
	    duration_prototype__proto.asDays         = asDays;
	    duration_prototype__proto.asWeeks        = asWeeks;
	    duration_prototype__proto.asMonths       = asMonths;
	    duration_prototype__proto.asYears        = asYears;
	    duration_prototype__proto.valueOf        = duration_as__valueOf;
	    duration_prototype__proto._bubble        = bubble;
	    duration_prototype__proto.get            = duration_get__get;
	    duration_prototype__proto.milliseconds   = milliseconds;
	    duration_prototype__proto.seconds        = seconds;
	    duration_prototype__proto.minutes        = minutes;
	    duration_prototype__proto.hours          = hours;
	    duration_prototype__proto.days           = days;
	    duration_prototype__proto.weeks          = weeks;
	    duration_prototype__proto.months         = months;
	    duration_prototype__proto.years          = years;
	    duration_prototype__proto.humanize       = humanize;
	    duration_prototype__proto.toISOString    = iso_string__toISOString;
	    duration_prototype__proto.toString       = iso_string__toISOString;
	    duration_prototype__proto.toJSON         = iso_string__toISOString;
	    duration_prototype__proto.locale         = locale;
	    duration_prototype__proto.localeData     = localeData;

	    // Deprecations
	    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
	    duration_prototype__proto.lang = lang;

	    // Side effect imports

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    // Side effect imports


	    utils_hooks__hooks.version = '2.10.6';

	    setHookCallback(local__createLocal);

	    utils_hooks__hooks.fn                    = momentPrototype;
	    utils_hooks__hooks.min                   = min;
	    utils_hooks__hooks.max                   = max;
	    utils_hooks__hooks.utc                   = create_utc__createUTC;
	    utils_hooks__hooks.unix                  = moment__createUnix;
	    utils_hooks__hooks.months                = lists__listMonths;
	    utils_hooks__hooks.isDate                = isDate;
	    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
	    utils_hooks__hooks.invalid               = valid__createInvalid;
	    utils_hooks__hooks.duration              = create__createDuration;
	    utils_hooks__hooks.isMoment              = isMoment;
	    utils_hooks__hooks.weekdays              = lists__listWeekdays;
	    utils_hooks__hooks.parseZone             = moment__createInZone;
	    utils_hooks__hooks.localeData            = locale_locales__getLocale;
	    utils_hooks__hooks.isDuration            = isDuration;
	    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
	    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
	    utils_hooks__hooks.defineLocale          = defineLocale;
	    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
	    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
	    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

	    var _moment = utils_hooks__hooks;

	    return _moment;

	}));
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(104)(module)))

/***/ },
/* 104 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 106,
		"./af.js": 106,
		"./ar": 107,
		"./ar-ma": 108,
		"./ar-ma.js": 108,
		"./ar-sa": 109,
		"./ar-sa.js": 109,
		"./ar-tn": 110,
		"./ar-tn.js": 110,
		"./ar.js": 107,
		"./az": 111,
		"./az.js": 111,
		"./be": 112,
		"./be.js": 112,
		"./bg": 113,
		"./bg.js": 113,
		"./bn": 114,
		"./bn.js": 114,
		"./bo": 115,
		"./bo.js": 115,
		"./br": 116,
		"./br.js": 116,
		"./bs": 117,
		"./bs.js": 117,
		"./ca": 118,
		"./ca.js": 118,
		"./cs": 119,
		"./cs.js": 119,
		"./cv": 120,
		"./cv.js": 120,
		"./cy": 121,
		"./cy.js": 121,
		"./da": 122,
		"./da.js": 122,
		"./de": 123,
		"./de-at": 124,
		"./de-at.js": 124,
		"./de.js": 123,
		"./el": 125,
		"./el.js": 125,
		"./en-au": 126,
		"./en-au.js": 126,
		"./en-ca": 127,
		"./en-ca.js": 127,
		"./en-gb": 128,
		"./en-gb.js": 128,
		"./eo": 129,
		"./eo.js": 129,
		"./es": 130,
		"./es.js": 130,
		"./et": 131,
		"./et.js": 131,
		"./eu": 132,
		"./eu.js": 132,
		"./fa": 133,
		"./fa.js": 133,
		"./fi": 134,
		"./fi.js": 134,
		"./fo": 135,
		"./fo.js": 135,
		"./fr": 136,
		"./fr-ca": 137,
		"./fr-ca.js": 137,
		"./fr.js": 136,
		"./fy": 138,
		"./fy.js": 138,
		"./gl": 139,
		"./gl.js": 139,
		"./he": 140,
		"./he.js": 140,
		"./hi": 141,
		"./hi.js": 141,
		"./hr": 142,
		"./hr.js": 142,
		"./hu": 143,
		"./hu.js": 143,
		"./hy-am": 144,
		"./hy-am.js": 144,
		"./id": 145,
		"./id.js": 145,
		"./is": 146,
		"./is.js": 146,
		"./it": 147,
		"./it.js": 147,
		"./ja": 148,
		"./ja.js": 148,
		"./jv": 149,
		"./jv.js": 149,
		"./ka": 150,
		"./ka.js": 150,
		"./km": 151,
		"./km.js": 151,
		"./ko": 152,
		"./ko.js": 152,
		"./lb": 153,
		"./lb.js": 153,
		"./lt": 154,
		"./lt.js": 154,
		"./lv": 155,
		"./lv.js": 155,
		"./me": 156,
		"./me.js": 156,
		"./mk": 157,
		"./mk.js": 157,
		"./ml": 158,
		"./ml.js": 158,
		"./mr": 159,
		"./mr.js": 159,
		"./ms": 160,
		"./ms-my": 161,
		"./ms-my.js": 161,
		"./ms.js": 160,
		"./my": 162,
		"./my.js": 162,
		"./nb": 163,
		"./nb.js": 163,
		"./ne": 164,
		"./ne.js": 164,
		"./nl": 165,
		"./nl.js": 165,
		"./nn": 166,
		"./nn.js": 166,
		"./pl": 167,
		"./pl.js": 167,
		"./pt": 168,
		"./pt-br": 169,
		"./pt-br.js": 169,
		"./pt.js": 168,
		"./ro": 170,
		"./ro.js": 170,
		"./ru": 171,
		"./ru.js": 171,
		"./si": 172,
		"./si.js": 172,
		"./sk": 173,
		"./sk.js": 173,
		"./sl": 174,
		"./sl.js": 174,
		"./sq": 175,
		"./sq.js": 175,
		"./sr": 176,
		"./sr-cyrl": 177,
		"./sr-cyrl.js": 177,
		"./sr.js": 176,
		"./sv": 178,
		"./sv.js": 178,
		"./ta": 179,
		"./ta.js": 179,
		"./th": 180,
		"./th.js": 180,
		"./tl-ph": 181,
		"./tl-ph.js": 181,
		"./tr": 182,
		"./tr.js": 182,
		"./tzl": 183,
		"./tzl.js": 183,
		"./tzm": 184,
		"./tzm-latn": 185,
		"./tzm-latn.js": 185,
		"./tzm.js": 184,
		"./uk": 186,
		"./uk.js": 186,
		"./uz": 187,
		"./uz.js": 187,
		"./vi": 188,
		"./vi.js": 188,
		"./zh-cn": 189,
		"./zh-cn.js": 189,
		"./zh-tw": 190,
		"./zh-tw.js": 190
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 105;


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : afrikaans (af)
	//! author : Werner Mollentze : https://github.com/wernerm

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });

	    return af;

	}));

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! Locale: Arabic (ar)
	//! Author: Abdel Said: https://github.com/abdelsaid
	//! Changes in months, weekdays: Ahmed Elkhatib
	//! Native plural forms: forabi https://github.com/forabi

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'كانون الثاني يناير',
	        'شباط فبراير',
	        'آذار مارس',
	        'نيسان أبريل',
	        'أيار مايو',
	        'حزيران يونيو',
	        'تموز يوليو',
	        'آب أغسطس',
	        'أيلول سبتمبر',
	        'تشرين الأول أكتوبر',
	        'تشرين الثاني نوفمبر',
	        'كانون الأول ديسمبر'
	    ];

	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar;

	}));

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Moroccan Arabic (ar-ma)
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_ma = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_ma;

	}));

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic Saudi Arabia (ar-sa)
	//! author : Suhail Alkowaileet : https://github.com/xsoh

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };

	    var ar_sa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_sa;

	}));

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  : Tunisian Arabic (ar-tn)

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_tn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ar_tn;

	}));

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : azerbaijani (az)
	//! author : topchiyev : https://github.com/topchiyev

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };

	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return az;

	}));

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : belarusian (be)
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),
	            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')
	        },
	        nounCase = (/\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var be = moment.defineLocale('be', {
	        months : monthsCaseReplace,
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return be;

	}));

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bulgarian (bg)
	//! author : Krasen Borisov : https://github.com/kraz

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bg;

	}));

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali (bn)
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };

	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split('_'),
	        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কএক সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকেল|রাত/,
	        isPM: function (input) {
	            return /^(দুপুর|বিকেল|রাত)$/.test(input);
	        },
	        //Bengali is a vast language its spoken
	        //in different forms in various parts of the world.
	        //I have just generalized with most common one used
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকেল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bn;

	}));

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tibetan (bo)
	//! author : Thupten N. Chakrishar : https://github.com/vajradog

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };

	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        isPM: function (input) {
	            return /^(ཉིན་གུང|དགོང་དག|མཚན་མོ)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bo;

	}));

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : breton (br)
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return br;

	}));

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bosnian (bs)
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bs;

	}));

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : catalan (ca)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ca = moment.defineLocale('ca', {
	        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'LT:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ca;

	}));

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : czech (cs)
	//! author : petrbela : https://github.com/petrbela

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	        }
	    }

	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cs;

	}));

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chuvash (cv)
	//! author : Anatoly Mironov : https://github.com/mirontoli

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        ordinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return cv;

	}));

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh (cy)
	//! author : Robert Allen

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cy;

	}));

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : danish (da)
	//! author : Ulrik Nielsen : https://github.com/mrbase

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[I dag kl.] LT',
	            nextDay : '[I morgen kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[I går kl.] LT',
	            lastWeek : '[sidste] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return da;

	}));

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : german (de)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de;

	}));

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : austrian german (de-at)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de_at = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de_at;

	}));

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : modern greek (el)
	//! author : Aggelos Karalias : https://github.com/mehiel

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (typeof output === 'function') {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });

	    return el;

	}));

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : australian english (en-au)

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_au = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_au;

	}));

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian english (en-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_ca = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM, YYYY',
	            LLL : 'D MMMM, YYYY h:mm A',
	            LLLL : 'dddd, D MMMM, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    return en_ca;

	}));

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain english (en-gb)
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_gb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_gb;

	}));

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : esperanto (eo)
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-an de] MMMM, YYYY',
	            LLL : 'D[-an de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'je %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eo;

	}));

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : spanish (es)
	//! author : Julio Napurí : https://github.com/julionc

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortDot = 'Ene._Feb._Mar._Abr._May._Jun._Jul._Ago._Sep._Oct._Nov._Dic.'.split('_'),
	        monthsShort = 'Ene_Feb_Mar_Abr_May_Jun_Jul_Ago_Sep_Oct_Nov_Dic'.split('_');

	    var es = moment.defineLocale('es', {
	        months : 'Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        weekdays : 'Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mié._Jue._Vie._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return es;

	}));

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : estonian (et)
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return et;

	}));

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : euskara (eu)
	//! author : Eneko Illarramendi : https://github.com/eillarra

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eu;

	}));

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian (fa)
	//! author : Ebrahim Byagowi : https://github.com/ebraminio

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چندین ثانیه',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return fa;

	}));

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : finnish (fi)
	//! author : Tarmo Aidantausta : https://github.com/bleadof

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }

	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fi;

	}));

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : faroese (fo)
	//! author : Ragnar Johannesen : https://github.com/ragnar123

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            m : 'ein minutt',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaði',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fo;

	}));

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : french (fr)
	//! author : John Fischer : https://github.com/jfroffice

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr;

	}));

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian french (fr-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr_ca = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        }
	    });

	    return fr_ca;

	}));

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : frisian (fy)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fy;

	}));

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : galician (gl)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var gl = moment.defineLocale('gl', {
	        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str === 'uns segundos') {
	                    return 'nuns segundos';
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return gl;

	}));

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew (he)
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        }
	    });

	    return he;

	}));

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hindi (hi)
	//! author : Mayank Singhal : https://github.com/mayanksinghal

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hi;

	}));

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hrvatski (hr)
	//! author : Bojan Marković : https://github.com/bmarkovic

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var hr = moment.defineLocale('hr', {
	        months : 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hr;

	}));

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hungarian (hu)
	//! author : Adam Brunner : https://github.com/adambrunner

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;
	        switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hu;

	}));

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian (hy-am)
	//! author : Armendarabyan : https://github.com/armendarabyan

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),
	            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');
	        return monthsShort[m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');
	        return weekdays[m.day()];
	    }

	    var hy_am = moment.defineLocale('hy-am', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hy_am;

	}));

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Indonesia (id)
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return id;

	}));

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : icelandic (is)
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return is;

	}));

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : italian (it)
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin : 'D_L_Ma_Me_G_V_S'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return it;

	}));

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : japanese (ja)
	//! author : LI Long : https://github.com/baryon

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ja = moment.defineLocale('ja', {
	        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'Ah時m分',
	            LTS : 'Ah時m分s秒',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah時m分',
	            LLLL : 'YYYY年M月D日Ah時m分 dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : '[来週]dddd LT',
	            lastDay : '[昨日] LT',
	            lastWeek : '[前週]dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });

	    return ja;

	}));

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Boso Jowo (jv)
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return jv;

	}));

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian (ka)
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        nounCase = (/D[oD] *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')
	        },
	        nounCase = (/(წინა|შემდეგ)/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var ka = moment.defineLocale('ka', {
	        months : monthsCaseReplace,
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });

	    return ka;

	}));

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : khmer (km)
	//! author : Kruy Vanna : https://github.com/kruyvanna

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return km;

	}));

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : korean (ko)
	//!
	//! authors
	//!
	//! - Kyungwook, Park : https://github.com/kyungw00k
	//! - Jeeeyul Lee <jeeeyul@gmail.com>

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h시 m분',
	            LTS : 'A h시 m분 s초',
	            L : 'YYYY.MM.DD',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h시 m분',
	            LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇초',
	            ss : '%d초',
	            m : '일분',
	            mm : '%d분',
	            h : '한시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한달',
	            MM : '%d달',
	            y : '일년',
	            yy : '%d년'
	        },
	        ordinalParse : /\d{1,2}일/,
	        ordinal : '%d일',
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });

	    return ko;

	}));

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish (lb)
	//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }

	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lb;

	}));

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian (lt)
	//! author : Mindaugas Mozūras : https://github.com/mmozuras

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    },
	    weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_');
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	                'nominative': 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	                'accusative': 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_')
	            },
	            nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	                'accusative' :
	                'nominative';
	        return months[nounCase][m.month()];
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    function relativeWeekDay(moment, format) {
	        var nominative = format.indexOf('dddd HH:mm') === -1,
	            weekDay = weekDays[moment.day()];
	        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';
	    }

	    var lt = moment.defineLocale('lt', {
	        months : monthsCaseReplace,
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : relativeWeekDay,
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lt;

	}));

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : latvian (lv)
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }

	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lv;

	}));

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin (me)
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var me = moment.defineLocale('me', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sri.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',

	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return me;

	}));

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : macedonian (mk)
	//! author : Borislav Mickov : https://github.com/B0k0

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : 'dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Во изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Во изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mk;

	}));

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : malayalam (ml)
	//! author : Floyd Pink : https://github.com/floydpink

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        isPM : function (input) {
	            return /^(ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });

	    return ml;

	}));

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi (mr)
	//! author : Harshad Kale : https://github.com/kalehv

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s नंतर',
	            past : '%s पूर्वी',
	            s : 'सेकंद',
	            m: 'एक मिनिट',
	            mm: '%d मिनिटे',
	            h : 'एक तास',
	            hh : '%d तास',
	            d : 'एक दिवस',
	            dd : '%d दिवस',
	            M : 'एक महिना',
	            MM : '%d महिने',
	            y : 'एक वर्ष',
	            yy : '%d वर्षे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mr;

	}));

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms;

	}));

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms_my = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms_my;

	}));

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese (my)
	//! author : Squar team, mysquar.com

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };

	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return my;

	}));

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian bokmål (nb)
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tirs_ons_tors_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'H.mm',
	            LTS : 'H.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H.mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] H.mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'for %s siden',
	            s : 'noen sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nb;

	}));

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : nepali/nepalese
	//! author : suvash : https://github.com/suvash

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split('_'),
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राती|बिहान|दिउँसो|बेलुका|साँझ|राती/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राती') {
	                return hour < 3 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'बेलुका' || meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राती';
	            } else if (hour < 10) {
	                return 'बिहान';
	            } else if (hour < 15) {
	                return 'दिउँसो';
	            } else if (hour < 18) {
	                return 'बेलुका';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राती';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोली] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडी',
	            s : 'केही समय',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ne;

	}));

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dutch (nl)
	//! author : Joris Röling : https://github.com/jjupiter

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nl;

	}));

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian nynorsk (nn)
	//! author : https://github.com/mechuwind

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'for %s sidan',
	            s : 'nokre sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nn;

	}));

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : polish (pl)
	//! author : Rafal Hirsz : https://github.com/evoL

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin : 'N_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pl;

	}));

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : portuguese (pt)
	//! author : Jefferson : https://github.com/jalex79

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt = moment.defineLocale('pt', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pt;

	}));

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : brazilian portuguese (pt-br)
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt_br = moment.defineLocale('pt-br', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : '%s atrás',
	            s : 'poucos segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });

	    return pt_br;

	}));

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : romanian (ro)
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }

	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ro;

	}));

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : russian (ru)
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = {
	            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return monthsShort[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')
	        },
	        nounCase = (/\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var ru = moment.defineLocale('ru', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function () {
	                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ru;

	}));

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese (si)
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        ordinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });

	    return si;

	}));

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovak (sk)
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	        }
	    }

	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sk;

	}));

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovenian (sl)
	//! author : Robert Sedovšek : https://github.com/sedovsek

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	        }
	    }

	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sl;

	}));

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian (sq)
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author: Menelion Elensúle: https://github.com/Oire (tests)
	//! author : Oerd Cukalla : https://github.com/oerd (fixes)

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sq;

	}));

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-latin (sr)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr = moment.defineLocale('sr', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr;

	}));

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-cyrillic (sr-cyrl)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr_cyrl = moment.defineLocale('sr-cyrl', {
	        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],
	        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],
	        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],
	        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],
	        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr_cyrl;

	}));

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swedish (sv)
	//! author : Jens Alm : https://github.com/ulmus

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sv;

	}));

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tamil (ta)
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        ordinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ta;

	}));

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : thai (th)
	//! author : Kridsada Thanabulpong : https://github.com/sirn

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        longDateFormat : {
	            LT : 'H นาฬิกา m นาที',
	            LTS : 'H นาฬิกา m นาที s วินาที',
	            L : 'YYYY/MM/DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H นาฬิกา m นาที',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });

	    return th;

	}));

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog/Filipino (tl-ph)
	//! author : Dan Hagman

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tl_ph = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tl_ph;

	}));

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : turkish (tr)
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };

	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[haftaya] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen hafta] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tr;

	}));

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : talossan (tzl)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'LT.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY LT',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY LT'
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', ' ' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', ' ' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', ' ' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', ' ' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', ' ' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1].trim());
	    }

	    return tzl;

	}));

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt (tzm)
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm;

	}));

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm_latn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm_latn;

	}));

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : ukrainian (uk)
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'хвилина_хвилини_хвилин',
	            'hh': 'година_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),
	            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')
	        },
	        nounCase = (/D[oD]? *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    var uk = moment.defineLocale('uk', {
	        months : monthsCaseReplace,
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return uk;

	}));

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : uzbek (uz)
	//! author : Sardor Muminov : https://github.com/muminoff

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var uz = moment.defineLocale('uz', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return uz;

	}));

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : vietnamese (vi)
	//! author : Bang Nguyen : https://github.com/bangnk

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return vi;

	}));

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chinese (zh-cn)
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_cn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah点mm分',
	            LTS : 'Ah点m分s秒',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah点mm分',
	            LLLL : 'YYYY年MMMD日ddddAh点mm分',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah点mm分',
	            llll : 'YYYY年MMMD日ddddAh点mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : function () {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay : function () {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay : function () {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse : 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return zh_cn;

	}));

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : traditional chinese (zh-tw)
	//! author : Ben : https://github.com/ben-lin

	(function (global, factory) {
	    true ? factory(__webpack_require__(103)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_tw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah點mm分',
	            LTS : 'Ah點m分s秒',
	            L : 'YYYY年MMMD日',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah點mm分',
	            LLLL : 'YYYY年MMMD日ddddAh點mm分',
	            l : 'YYYY年MMMD日',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah點mm分',
	            llll : 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            m : '一分鐘',
	            mm : '%d分鐘',
	            h : '一小時',
	            hh : '%d小時',
	            d : '一天',
	            dd : '%d天',
	            M : '一個月',
	            MM : '%d個月',
	            y : '一年',
	            yy : '%d年'
	        }
	    });

	    return zh_tw;

	}));

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Calendar = React.createClass({
	  displayName: 'Calendar',

	  render: function render() {
	    var className = 'control-icon control-icon-calendar';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none', strokeWidth: '2' },
	        React.createElement('rect', { x: '13', y: '16', width: '22', height: '20' }),
	        React.createElement('path', { d: 'M17,16 L17,13' }),
	        React.createElement('path', { d: 'M31,16 L31,13' }),
	        React.createElement('path', { d: 'M13,23 L35,23' })
	      ),
	      React.createElement(
	        'g',
	        { stroke: 'none' },
	        React.createElement('rect', { x: '29', y: '30', width: '3', height: '3' })
	      )
	    );
	  }

	});

	module.exports = Calendar;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Left = React.createClass({
	  displayName: 'Left',

	  render: function render() {
	    var className = 'control-icon control-icon-left';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('polyline', { strokeWidth: '2', points: '20.9,34 13,24 21,14 ' }),
	        React.createElement('path', { strokeWidth: '2', d: 'M13.3,24C36,24,36,24,36,24' })
	      )
	    );
	  }

	});

	module.exports = Left;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var merge = __webpack_require__(10);
	var pick = __webpack_require__(43);
	var keys = __webpack_require__(36);
	var Box = __webpack_require__(51);

	var CLASS_ROOT = "header";

	var Header = React.createClass({
	  displayName: 'Header',

	  propTypes: merge({
	    fixed: React.PropTypes.bool,
	    float: React.PropTypes.bool,
	    large: React.PropTypes.bool,
	    small: React.PropTypes.bool,
	    splash: React.PropTypes.bool,
	    strong: React.PropTypes.bool,
	    tag: React.PropTypes.string
	  }, Box.propTypes),

	  getDefaultProps: function getDefaultProps() {
	    return {
	      pad: 'none',
	      direction: 'row',
	      align: 'center',
	      responsive: false,
	      tag: 'header'
	    };
	  },

	  _onResize: function _onResize() {
	    this._alignMirror();
	  },

	  _alignMirror: function _alignMirror() {
	    var contentElement = this.refs.content.getDOMNode();
	    var mirrorElement = this.refs.mirror.getDOMNode();

	    // constrain fixed content to the width of the mirror
	    var mirrorRect = mirrorElement.getBoundingClientRect();
	    contentElement.style.width = '' + Math.floor(mirrorRect.width) + 'px';

	    // align the mirror height with the content's height
	    var contentRect = contentElement.getBoundingClientRect();
	    mirrorElement.style.height = '' + Math.floor(contentRect.height) + 'px';
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.props.fixed) {
	      this._alignMirror();
	      window.addEventListener('resize', this._onResize);
	    }
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    if (this.props.fixed) {
	      this._alignMirror();
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this.props.fixed) {
	      window.removeEventListener('resize', this._onResize);
	    }
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    var containerClasses = [CLASS_ROOT + "__container"];
	    var other = pick(this.props, keys(Box.propTypes));
	    if (this.props.fixed) {
	      containerClasses.push(CLASS_ROOT + "__container--fixed");
	    }
	    if (this.props.float) {
	      classes.push(CLASS_ROOT + "--float");
	      containerClasses.push(CLASS_ROOT + "__container--float");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.splash) {
	      classes.push(CLASS_ROOT + "--splash");
	    }
	    if (this.props.strong) {
	      classes.push(CLASS_ROOT + "--strong");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    if (this.props.fixed) {
	      return React.createElement(
	        'div',
	        { className: containerClasses.join(' ') },
	        React.createElement('div', { ref: 'mirror', className: CLASS_ROOT + "__mirror" }),
	        React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__wrapper" },
	          React.createElement(
	            Box,
	            _extends({ ref: 'content', tag: this.props.header }, other, { className: classes.join(' ') }),
	            this.props.children
	          )
	        )
	      );
	    } else {
	      return React.createElement(
	        Box,
	        _extends({ tag: this.props.header }, other, { className: classes.join(' '),
	          containerClassName: containerClasses.join(' ') }),
	        this.props.children
	      );
	    }
	  }

	});

	module.exports = Header;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Box = __webpack_require__(51);

	var CLASS_ROOT = "title";

	var Title = React.createClass({
	  displayName: 'Title',

	  propTypes: {
	    onClick: React.PropTypes.func,
	    responsive: React.PropTypes.bool
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      responsive: true
	    };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.responsive) {
	      classes.push(CLASS_ROOT + "--responsive");
	    }
	    if (this.props.onClick) {
	      classes.push(CLASS_ROOT + "--interactive");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      Box,
	      { align: 'center', direction: 'row', responsive: false,
	        className: classes.join(' '), onClick: this.props.onClick },
	      this.props.children
	    );
	  }

	});

	module.exports = Title;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	var React = __webpack_require__(2);

	var CLASS_ROOT = "carousel";

	var Carousel = React.createClass({
	  displayName: "Carousel",

	  propTypes: {
	    auto: React.PropTypes.bool,
	    single: React.PropTypes.bool
	  },

	  getDefaultProps: function getDefaultProps() {
	    return { single: true };
	  },

	  _onSelect: function _onSelect(index) {
	    if (index !== this.state.activeIndex) {
	      this.setState({
	        activeIndex: index,
	        priorIndex: this.state.activeIndex,
	        sequence: this.state.sequence += 1
	      });
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { activeIndex: 0, priorIndex: 0, sequence: 1 };
	  },

	  // children should be an array of Tile
	  render: function render() {
	    var classes = [CLASS_ROOT];
	    classes.push(CLASS_ROOT + "--toggle-" + this.state.sequence % 2);
	    if (this.props.single) {
	      classes.push(CLASS_ROOT + "--single");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var index = -1;
	    var activeChild;
	    var priorChild;
	    var controls = React.Children.map(this.props.children, function (child) {
	      index += 1;
	      var controlClasses = [CLASS_ROOT + "__control"];
	      if (index === this.state.activeIndex) {
	        controlClasses.push(CLASS_ROOT + "__control--active");
	        activeChild = child;
	      } else if (index === this.state.priorIndex) {
	        priorChild = child;
	      }
	      return React.createElement(
	        "svg",
	        { className: controlClasses.join(' '), viewBox: "0 0 24 24", version: "1.1",
	          onClick: this._onSelect.bind(this, index) },
	        React.createElement("circle", { cx: 12, cy: 12, r: 6 })
	      );
	    }, this);

	    return React.createElement(
	      "div",
	      { className: classes.join(' ') },
	      React.createElement(
	        "div",
	        { className: CLASS_ROOT + "__prior" },
	        priorChild
	      ),
	      React.createElement(
	        "div",
	        { className: CLASS_ROOT + "__active" },
	        activeChild
	      ),
	      React.createElement(
	        "div",
	        { className: CLASS_ROOT + "__controls" },
	        controls
	      )
	    );
	  }

	});

	module.exports = Carousel;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Legend = __webpack_require__(197);

	var CLASS_ROOT = "chart";

	var DEFAULT_WIDTH = 384;
	var DEFAULT_HEIGHT = 192;
	var XAXIS_HEIGHT = 24;
	var YAXIS_WIDTH = 12;
	var BAR_PADDING = 2;
	var MIN_LABEL_WIDTH = 48;
	var SPARKLINE_STEP_WIDTH = 6;
	var SPARKLINE_BAR_PADDING = 1;

	var Chart = React.createClass({
	  displayName: 'Chart',

	  propTypes: {
	    important: React.PropTypes.number,
	    large: React.PropTypes.bool,
	    legend: React.PropTypes.shape({
	      position: React.PropTypes.oneOf(['over', 'after']),
	      total: React.PropTypes.bool
	    }),
	    max: React.PropTypes.number,
	    min: React.PropTypes.number,
	    series: React.PropTypes.arrayOf(React.PropTypes.shape({
	      label: React.PropTypes.string,
	      values: React.PropTypes.arrayOf(React.PropTypes.arrayOf(React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.object // Date
	      ]))).isRequired,
	      colorIndex: React.PropTypes.string
	    })).isRequired,
	    small: React.PropTypes.bool,
	    smooth: React.PropTypes.bool,
	    sparkline: React.PropTypes.bool,
	    threshold: React.PropTypes.number,
	    thresholds: React.PropTypes.arrayOf(React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.number.isRequired,
	      colorIndex: React.PropTypes.string
	    })),
	    type: React.PropTypes.oneOf(['line', 'bar', 'area']),
	    units: React.PropTypes.string,
	    xAxis: React.PropTypes.arrayOf(React.PropTypes.shape({
	      value: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.object // Date
	      ]).isRequired,
	      label: React.PropTypes.string.isRequired
	    }))
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      min: 0,
	      type: 'line'
	    };
	  },

	  _onMouseOver: function _onMouseOver(xIndex) {
	    this.setState({ activeXIndex: xIndex });
	  },

	  _onMouseOut: function _onMouseOut() {
	    this.setState({ activeXIndex: this.state.defaultXIndex });
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._resizeTimer);
	    this._resizeTimer = setTimeout(this._layout, 50);
	  },

	  // Performs some initial calculations to make subsequent calculations easier.
	  _bounds: function _bounds(series, xAxis, width, height) {
	    // analyze series data
	    var minX = null;
	    var maxX = null;
	    var minY = null;
	    var maxY = null;
	    xAxis = xAxis || [];

	    series.forEach(function (item) {
	      item.values.forEach(function (value, xIndex) {
	        var x = value[0];
	        var y = value[1];

	        if (null === minX) {
	          minX = x;
	          maxX = x;
	          minY = y;
	          maxY = y;
	        } else {
	          minX = Math.min(minX, x);
	          maxX = Math.max(maxX, x);
	          minY = Math.min(minY, y);
	          maxY = Math.max(maxY, y);
	        }
	        if (xIndex >= xAxis.length) {
	          xAxis.push({ value: x, label: '' });
	        }
	      });
	    });

	    if (null === minX) {
	      minX = 0;
	      maxX = 1;
	      minY = 0;
	      maxY = 100;
	    }

	    if ('bar' === this.props.type) {
	      xAxis.forEach(function (obj, xIndex) {
	        var sumY = 0;
	        series.forEach(function (item) {
	          sumY += item.values[xIndex][1];
	        });
	        maxY = Math.max(maxY, sumY);
	      });
	    }

	    if (this.props.threshold) {
	      minY = Math.min(minY, this.props.threshold);
	      maxY = Math.max(maxY, this.props.threshold);
	    }
	    if (this.props.thresholds) {
	      this.props.thresholds.forEach(function (obj) {
	        maxY = Math.max(maxY, obj.value);
	      });
	    }
	    if (this.props.hasOwnProperty('min')) {
	      minY = this.props.min;
	    }
	    if (this.props.hasOwnProperty('max')) {
	      maxY = this.props.max;
	    }
	    var spanX = maxX - minX;
	    var spanY = maxY - minY;

	    if (this.props.sparkline) {
	      width = spanX * (SPARKLINE_STEP_WIDTH + SPARKLINE_BAR_PADDING);
	    }
	    var thresholdWidth = width - YAXIS_WIDTH;
	    var thresholdHeight = height - XAXIS_HEIGHT;

	    var graphWidth = this.props.thresholds ? thresholdWidth : width;
	    var graphHeight = this.props.xAxis ? thresholdHeight : height;
	    var scaleX = graphWidth / spanX;
	    var xStepWidth = Math.round(graphWidth / (xAxis.length - 1));
	    if ('bar' === this.props.type) {
	      // allow room for bar width for last bar
	      scaleX = graphWidth / (spanX + spanX / (xAxis.length - 1));
	      xStepWidth = Math.round(graphWidth / xAxis.length);
	    }
	    var scaleY = graphHeight / spanY;
	    var barPadding = Math.max(BAR_PADDING, Math.round(xStepWidth / 8));
	    if (this.props.sparkline) {
	      xStepWidth = SPARKLINE_STEP_WIDTH;
	      barPadding = SPARKLINE_BAR_PADDING;
	    }

	    var result = {
	      minX: minX,
	      maxX: maxX,
	      minY: minY,
	      maxY: maxY,
	      spanX: spanX,
	      spanY: spanY,
	      scaleX: scaleX,
	      scaleY: scaleY,
	      graphWidth: graphWidth,
	      graphHeight: graphHeight,
	      xStepWidth: xStepWidth,
	      barPadding: barPadding,
	      xAxis: xAxis
	    };

	    return result;
	  },

	  // Aligns the legend with the current position of the cursor, if any.
	  _alignLegend: function _alignLegend() {
	    if (this.state.activeXIndex >= 0) {
	      var cursorElement = this.refs.cursor.getDOMNode();
	      var cursorRect = cursorElement.getBoundingClientRect();
	      var element = this.refs.chart.getDOMNode();
	      var rect = element.getBoundingClientRect();
	      var legendElement = this.refs.legend.getDOMNode();
	      var legendRect = legendElement.getBoundingClientRect();

	      var left = cursorRect.left - rect.left - legendRect.width - 1;
	      // if the legend would be outside the graphic, orient it to the right.
	      if (left < 0) {
	        left += legendRect.width + 2;
	      }

	      legendElement.style.left = '' + left + 'px ';
	      legendElement.style.top = '' + XAXIS_HEIGHT + 'px ';
	    }
	  },

	  // Adjusts the legend position and set the width, height, and
	  // redo the bounds calculations.
	  // Called whenever the browser resizes or new properties arrive.
	  _layout: function _layout() {
	    if (this.props.legend && 'below' !== this.props.legend.position) {
	      this._alignLegend();
	    }
	    var element = this.refs.chart.getDOMNode();
	    var rect = element.getBoundingClientRect();
	    if (rect.width !== this.state.width || rect.height !== this.state.height) {
	      var bounds = this._bounds(this.props.series, this.props.xAxis, rect.width, rect.height);
	      var width = rect.width;
	      if (this.props.sparkline) {
	        width = bounds.graphWidth;
	      }
	      this.setState({
	        width: width,
	        height: rect.height,
	        bounds: bounds
	      });
	    }
	  },

	  // Generates state based on the provided props.
	  _stateFromProps: function _stateFromProps(props, width, height) {
	    var bounds = this._bounds(props.series, props.xAxis, width, height);
	    var defaultXIndex = -1;
	    if (props.series && props.series.length > 0) {
	      defaultXIndex = 0;
	    }
	    if (props.hasOwnProperty('important')) {
	      defaultXIndex = props.important;
	    }
	    return {
	      bounds: bounds,
	      defaultXIndex: defaultXIndex,
	      activeXIndex: defaultXIndex,
	      width: width,
	      height: height
	    };
	  },

	  getInitialState: function getInitialState() {
	    return this._stateFromProps(this.props, DEFAULT_WIDTH, DEFAULT_HEIGHT);
	  },

	  componentDidMount: function componentDidMount() {
	    window.addEventListener('resize', this._onResize);
	    this._onResize();
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    clearTimeout(this._resizeTimer);
	    window.removeEventListener('resize', this._onResize);
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    var state = this._stateFromProps(newProps, this.state.width, this.state.height);
	    this.setState(state);
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    this._layout();
	  },

	  // Translates X value to X coordinate.
	  _translateX: function _translateX(x) {
	    var bounds = this.state.bounds;
	    return Math.round((x - bounds.minX) * bounds.scaleX);
	  },

	  // Translates Y value to Y coordinate.
	  _translateY: function _translateY(y) {
	    // leave room for line width since strokes are aligned to the center
	    return Math.max(1, this.state.height - Math.max(1, this._translateHeight(y)));
	  },

	  // Translates Y value to graph height.
	  _translateHeight: function _translateHeight(y) {
	    var bounds = this.state.bounds;
	    return Math.round((y - bounds.minY) * bounds.scaleY);
	  },

	  // Translates X and Y values to X and Y coordinates.
	  _coordinates: function _coordinates(point) {
	    return [this._translateX(point[0]), this._translateY(point[1])];
	  },

	  // Uses the provided colorIndex or provides one based on the seriesIndex.
	  _itemColorIndex: function _itemColorIndex(item, seriesIndex) {
	    return item.colorIndex || 'graph-' + (seriesIndex + 1);
	  },

	  // Determines what the appropriate control coordinates are on
	  // either side of the coordinate at the specified index.
	  // This calculation is a simplified smoothing function that
	  // just looks at whether the line through this coordinate is
	  // ascending, descending or not. Peaks, valleys, and flats are
	  // treated the same.
	  _controlCoordinates: function _controlCoordinates(coordinates, index) {
	    var current = coordinates[index];
	    // Use previous and next coordinates when available, otherwise use
	    // the current coordinate for them.
	    var previous = current;
	    if (index > 0) {
	      previous = coordinates[index - 1];
	    }
	    var next = current;
	    if (index < coordinates.length - 1) {
	      next = coordinates[index + 1];
	    }

	    // Put the control X coordinates midway between the coordinates.
	    var deltaX = (current[0] - previous[0]) / 2;
	    var deltaY;

	    // Start with a flat slope. This works for peaks, valleys, and flats.
	    var first = [current[0] - deltaX, current[1]];
	    var second = [current[0] + deltaX, current[1]];

	    if (previous[1] < current[1] && current[1] < next[1]) {
	      // Ascending, use the minimum positive slope.
	      deltaY = Math.min((current[1] - previous[1]) / 2, (next[1] - current[1]) / 2);
	      first[1] = current[1] - deltaY;
	      second[1] = current[1] + deltaY;
	    } else if (previous[1] > current[1] && current[1] > next[1]) {
	      // Descending, use the minimum negative slope.
	      deltaY = Math.min((previous[1] - current[1]) / 2, (current[1] - next[1]) / 2);
	      first[1] = current[1] + deltaY;
	      second[1] = current[1] - deltaY;
	    }
	    return [first, second];
	  },

	  // Converts the series data into paths for line or area types.
	  _renderLinesOrAreas: function _renderLinesOrAreas() {
	    var values = this.props.series.map(function (item, seriesIndex) {

	      // Get all coordinates up front so they are available
	      // if we are drawing a smooth chart.
	      var coordinates = item.values.map(function (value) {
	        return this._coordinates(value);
	      }, this);

	      var colorIndex = this._itemColorIndex(item, seriesIndex);
	      var classes = [CLASS_ROOT + "__values-" + this.props.type, "color-index-" + colorIndex];
	      var commands = null;
	      var controlCoordinates = null;
	      var previousControlCoordinates = null;

	      // Build the commands for this set of coordinates.
	      coordinates.forEach(function (coordinate, index) {
	        if (this.props.smooth) {
	          controlCoordinates = this._controlCoordinates(coordinates, index);
	        }
	        if (0 === index) {
	          commands = "M" + coordinate.join(',');
	        } else {
	          if (this.props.smooth) {
	            // Use the previous right control coordinate and the current
	            // left control coordinate. We do this because we calculate
	            // the left and right sides for a particular index together,
	            // so the path is smooth but the SVG C command needs the
	            // right one from the previous index and the left one from
	            // the current index.
	            commands += " C" + previousControlCoordinates[1].join(',') + " " + controlCoordinates[0].join(',') + " " + coordinate.join(',');
	          } else {
	            commands += " L" + coordinate.join(',');
	          }
	        }
	        previousControlCoordinates = controlCoordinates;
	      }, this);

	      var path = null;
	      if ('line' === this.props.type) {
	        path = React.createElement('path', { fill: 'none', className: classes.join(' '), d: commands });
	      } else if ('area' === this.props.type) {
	        // For area charts, close the path by drawing down to the bottom
	        // and across to the bottom of where we started.
	        var close = 'L' + coordinates[coordinates.length - 1][0] + ',' + this.state.height + 'L' + coordinates[0][0] + ',' + this.state.height + 'Z';
	        commands += close;

	        path = React.createElement('path', { stroke: 'none', className: classes.join(' '), d: commands });
	      }

	      return React.createElement(
	        'g',
	        { key: seriesIndex },
	        path
	      );
	    }, this);

	    return values;
	  },

	  // Converts the series data into rects for bar types.
	  _renderBars: function _renderBars() {
	    var bounds = this.state.bounds;

	    var values = bounds.xAxis.map(function (obj, xIndex) {
	      var baseY = bounds.minY;
	      var stepBars = this.props.series.map(function (item, seriesIndex) {

	        var colorIndex = item.colorIndex || 'graph-' + (seriesIndex + 1);
	        var value = item.values[xIndex];
	        var stepBarHeight = this._translateHeight(value[1]);
	        var stepBarBase = this._translateHeight(baseY);
	        baseY += value[1];

	        var classes = [CLASS_ROOT + "__values-bar", "color-index-" + colorIndex];
	        if (!this.props.legend || xIndex === this.state.activeXIndex) {
	          classes.push(CLASS_ROOT + "__values-bar--active");
	        }

	        return React.createElement('rect', { key: item.label || seriesIndex,
	          className: classes.join(' '),
	          x: this._translateX(value[0]) + bounds.barPadding,
	          y: this.state.height - (stepBarHeight + stepBarBase),
	          width: bounds.xStepWidth - 2 * bounds.barPadding,
	          height: stepBarHeight });
	      }, this);

	      return React.createElement(
	        'g',
	        { key: xIndex },
	        stepBars
	      );
	    }, this);

	    return values;
	  },

	  // Converts the threshold value into a line.
	  _renderThreshold: function _renderThreshold() {
	    var y = this._translateY(this.props.threshold);
	    var commands = 'M0,' + y + 'L' + this.state.width + ',' + y;
	    return React.createElement(
	      'g',
	      { className: CLASS_ROOT + "__threshold" },
	      React.createElement('path', { fill: 'none', d: commands })
	    );
	  },

	  _labelPosition: function _labelPosition(value, bounds) {
	    var x = this._translateX(value);
	    var startX = x;
	    var anchor;
	    if ('line' === this.props.type || 'area' === this.props.type) {
	      // Place the text in the middle for line and area type charts.
	      anchor = 'middle';
	      startX = x - MIN_LABEL_WIDTH / 2;
	    }
	    if (x <= 0) {
	      // This is the first data point, align the text to the left edge.
	      x = 0;
	      startX = x;
	      anchor = 'start';
	    }
	    if (x >= bounds.graphWidth - MIN_LABEL_WIDTH) {
	      // This is the last data point, align the text to the right edge.
	      x = bounds.graphWidth;
	      startX = x - MIN_LABEL_WIDTH;
	      anchor = 'end';
	    } else if ('bar' === this.props.type) {
	      x += bounds.barPadding;
	      startX = x;
	    }
	    return { x: x, anchor: anchor, startX: startX, endX: startX + MIN_LABEL_WIDTH };
	  },

	  _labelOverlaps: function _labelOverlaps(pos1, pos2) {
	    return pos1 && pos2 && pos1.endX > pos2.startX && pos1.startX < pos2.endX;
	  },

	  // Converts the xAxis labels into texts.
	  _renderXAxis: function _renderXAxis() {
	    var bounds = this.state.bounds;
	    var labelY = Math.round(XAXIS_HEIGHT * 0.6);
	    var priorPosition = null;
	    var activePosition = null;
	    if (bounds.xAxis && this.state.activeXIndex >= 0) {
	      activePosition = this._labelPosition(bounds.xAxis[this.state.activeXIndex].value, bounds);
	    }
	    var lastPosition = null;
	    if (bounds.xAxis.length > 0) {
	      lastPosition = this._labelPosition(bounds.xAxis[bounds.xAxis.length - 1].value, bounds);
	    }

	    var labels = bounds.xAxis.map(function (obj, xIndex) {
	      var classes = [CLASS_ROOT + "__xaxis-index"];
	      if (xIndex === this.state.activeXIndex) {
	        classes.push(CLASS_ROOT + "__xaxis-index--active");
	      }
	      var position = this._labelPosition(obj.value, bounds);

	      // Ensure we don't overlap labels. But, make sure we show the first and
	      // last ones.
	      if (this._labelOverlaps(position, activePosition) || xIndex !== 0 && xIndex !== bounds.xAxis.length - 1 && (this._labelOverlaps(position, priorPosition) || this._labelOverlaps(position, lastPosition))) {
	        classes.push(CLASS_ROOT + "__xaxis-index--eclipse");
	      } else {
	        priorPosition = position;
	      }

	      return React.createElement(
	        'g',
	        { key: xIndex, className: classes.join(' ') },
	        React.createElement(
	          'text',
	          { x: position.x, y: labelY,
	            textAnchor: position.anchor, fontSize: 16 },
	          obj.label
	        )
	      );
	    }, this);

	    return React.createElement(
	      'g',
	      { ref: 'xAxis', className: CLASS_ROOT + "__xaxis" },
	      labels
	    );
	  },

	  // Vertical bars for thresholds.
	  _renderYAxis: function _renderYAxis() {
	    var bounds = this.state.bounds;
	    var start = bounds.minY;
	    var end;
	    var width = Math.max(4, YAXIS_WIDTH / 2);

	    var bars = this.props.thresholds.map(function (item, index) {
	      var classes = [CLASS_ROOT + "__bar"];
	      classes.push("color-index-" + (item.colorIndex || 'graph-' + (index + 1)));
	      if (index < this.props.thresholds.length - 1) {
	        end = this.props.thresholds[index + 1].value;
	      } else {
	        end = bounds.maxY;
	      }
	      var height = this._translateHeight(end - start);
	      var y = this._translateY(end);
	      start = end;

	      return React.createElement('rect', { key: index,
	        className: classes.join(' '),
	        x: this.state.width - width,
	        y: y,
	        width: width,
	        height: height });
	    }, this);

	    return React.createElement(
	      'g',
	      { ref: 'yAxis', className: CLASS_ROOT + "__yaxis" },
	      bars
	    );
	  },

	  // Create vertical rects for each X data point.
	  // These are used to track the mouse hover.
	  _renderXBands: function _renderXBands(layer) {
	    var className = CLASS_ROOT + "__" + layer;
	    var bounds = this.state.bounds;

	    var bands = bounds.xAxis.map(function (obj, xIndex) {
	      var classes = [className + "-xband"];
	      if (xIndex === this.state.activeXIndex) {
	        classes.push(className + "-xband--active");
	      }

	      // For bar charts, the band is left aligned with the bars.
	      var x = this._translateX(obj.value);
	      if ('line' === this.props.type || 'area' === this.props.type) {
	        // For line and area charts, the band is centered.
	        x -= bounds.xStepWidth / 2;
	      }

	      var onMouseOver;
	      var onMouseOut;
	      if ('front' === layer) {
	        onMouseOver = this._onMouseOver.bind(this, xIndex);
	        onMouseOut = this._onMouseOut.bind(this, xIndex);
	      }

	      return React.createElement(
	        'g',
	        { key: xIndex, className: classes.join(' '),
	          onMouseOver: onMouseOver, onMouseOut: onMouseOut },
	        React.createElement('rect', { className: className + "-xband-background",
	          x: x, y: 0, width: bounds.xStepWidth, height: this.state.height })
	      );
	    }, this);

	    return React.createElement(
	      'g',
	      { ref: layer, className: className },
	      bands
	    );
	  },

	  // Converts the active X index to a line.
	  _renderCursor: function _renderCursor() {
	    var value = this.props.series[0].values[this.state.activeXIndex];
	    var coordinates = this._coordinates(value);
	    if ('bar' === this.props.type) {
	      coordinates[0] += this.state.bounds.barPadding;
	    }
	    // Offset it just a little if it is at an edge.
	    var x = Math.max(1, Math.min(coordinates[0], this.state.bounds.graphWidth - 1));
	    return React.createElement(
	      'g',
	      { ref: 'cursor', className: CLASS_ROOT + "__cursor" },
	      React.createElement('line', { fill: 'none', x1: x, y1: XAXIS_HEIGHT, x2: x, y2: this.state.height })
	    );
	  },

	  // Builds a Legend appropriate for the currently active X index.
	  _renderLegend: function _renderLegend() {
	    var activeSeries = this.props.series.map(function (item) {
	      return {
	        label: item.label,
	        value: item.values[this.state.activeXIndex][1],
	        units: item.units,
	        colorIndex: item.colorIndex
	      };
	    }, this);
	    var classes = [CLASS_ROOT + "__legend", CLASS_ROOT + "__legend--" + (this.props.legend.position || 'overlay')];

	    return React.createElement(Legend, { ref: 'legend', className: classes.join(' '),
	      series: activeSeries,
	      total: this.props.legend.total,
	      units: this.props.units });
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    classes.push(CLASS_ROOT + "--" + this.props.type);
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.sparkline) {
	      classes.push(CLASS_ROOT + "--sparkline");
	    }

	    var values = [];
	    if ('line' === this.props.type || 'area' === this.props.type) {
	      values = this._renderLinesOrAreas();
	    } else if ('bar' === this.props.type) {
	      values = this._renderBars();
	    }

	    if (values.length === 0) {
	      classes.push(CLASS_ROOT + "--loading");
	      var valueClasses = [CLASS_ROOT + "__values"];
	      valueClasses.push(CLASS_ROOT + "__values--loading");
	      valueClasses.push("color-index-loading");
	      var commands = "M0," + this.state.height / 2 + " L" + this.state.width + "," + this.state.height / 2;
	      values.push(React.createElement(
	        'g',
	        { key: 'loading' },
	        React.createElement('path', { stroke: 'none', className: valueClasses.join(' '), d: commands })
	      ));
	    }

	    var threshold = null;
	    if (this.props.threshold) {
	      threshold = this._renderThreshold();
	    }

	    var cursor = null;
	    var legend = null;
	    if (this.props.legend && this.state.activeXIndex >= 0) {
	      cursor = this._renderCursor();
	      legend = this._renderLegend();
	    }

	    var xAxis = null;
	    if (this.props.xAxis) {
	      xAxis = this._renderXAxis();
	    }

	    var yAxis = null;
	    if (this.props.thresholds) {
	      yAxis = this._renderYAxis();
	    }

	    var frontBands = null;
	    if (this.props.legend) {
	      frontBands = this._renderXBands('front');
	    }

	    return React.createElement(
	      'div',
	      { className: classes.join(' ') },
	      React.createElement(
	        'svg',
	        { ref: 'chart', className: CLASS_ROOT + "__graphic",
	          viewBox: "0 0 " + this.state.width + " " + this.state.height,
	          preserveAspectRatio: 'none' },
	        xAxis,
	        yAxis,
	        React.createElement(
	          'g',
	          { className: CLASS_ROOT + "__values" },
	          values
	        ),
	        frontBands,
	        threshold,
	        cursor
	      ),
	      legend
	    );
	  }

	});

	module.exports = Chart;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);

	var CLASS_ROOT = "legend";

	var Legend = React.createClass({
	  displayName: 'Legend',

	  mixins: [IntlMixin],

	  propTypes: {
	    activeIndex: React.PropTypes.number,
	    onActive: React.PropTypes.func,
	    series: React.PropTypes.arrayOf(React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.number,
	      units: React.PropTypes.string,
	      colorIndex: React.PropTypes.oneOfType([React.PropTypes.number, // 1-6
	      React.PropTypes.string // status
	      ]),
	      onClick: React.PropTypes.func
	    })).isRequired,
	    total: React.PropTypes.bool,
	    units: React.PropTypes.string,
	    value: React.PropTypes.number
	  },

	  _onActive: function _onActive(index) {
	    this.setState({ activeIndex: index });
	    if (this.props.onActive) {
	      this.props.onActive(index);
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { activeIndex: this.props.activeIndex };
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    this.setState({ activeIndex: newProps.activeIndex });
	  },

	  _itemColorIndex: function _itemColorIndex(item, index) {
	    return item.colorIndex || 'graph-' + (index + 1);
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.series.length === 1) {
	      classes.push(CLASS_ROOT + "--single");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var totalValue = 0;
	    var items = this.props.series.map(function (item, index) {
	      var legendClasses = [CLASS_ROOT + "__item"];
	      if (index === this.state.activeIndex) {
	        legendClasses.push(CLASS_ROOT + "__item--active");
	      }
	      var colorIndex = this._itemColorIndex(item, index);
	      totalValue += item.value;

	      var valueClasses = [CLASS_ROOT + "__item-value"];
	      if (1 === this.props.series.length) {
	        valueClasses.push("large-number-font");
	      }

	      return React.createElement(
	        'li',
	        { key: item.label || index, className: legendClasses.join(' '),
	          onClick: item.onClick,
	          onMouseOver: this._onActive.bind(this, index),
	          onMouseOut: this._onActive.bind(this, this.props.activeIndex) },
	        React.createElement(
	          'svg',
	          { className: CLASS_ROOT + "__item-swatch color-index-" + colorIndex,
	            viewBox: '0 0 12 12' },
	          React.createElement('path', { className: item.className, d: 'M 5 0 l 0 12' })
	        ),
	        React.createElement(
	          'span',
	          { className: CLASS_ROOT + "__item-label" },
	          item.label
	        ),
	        React.createElement(
	          'span',
	          { className: valueClasses.join(' ') },
	          item.value,
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__item-units" },
	            this.props.units
	          )
	        )
	      );
	    }, this);

	    var total = null;
	    if (this.props.total && this.props.series.length > 1) {
	      total = React.createElement(
	        'li',
	        { className: CLASS_ROOT + "__total" },
	        React.createElement(
	          'span',
	          { className: CLASS_ROOT + "__total-label" },
	          this.getGrommetIntlMessage('Total')
	        ),
	        React.createElement(
	          'span',
	          { className: CLASS_ROOT + "__total-value" },
	          totalValue,
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__total-units" },
	            this.props.units
	          )
	        )
	      );
	    }

	    return React.createElement(
	      'ol',
	      { className: classes.join(' ') },
	      items.reverse(),
	      total
	    );
	  }

	});

	module.exports = Legend;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var uuid = __webpack_require__(199);

	var CLASS_ROOT = "check-box";

	var CheckBox = React.createClass({
	  displayName: 'CheckBox',

	  propTypes: {
	    checked: React.PropTypes.bool,
	    defaultChecked: React.PropTypes.bool,
	    id: React.PropTypes.string.isRequired,
	    label: React.PropTypes.string.isRequired,
	    name: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    ariaDescribedby: React.PropTypes.string,
	    toggle: React.PropTypes.bool
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    var labelId = 'checkbox-label-' + uuid.v1();
	    if (this.props.toggle) {
	      classes.push(CLASS_ROOT + "--toggle");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      'label',
	      { className: classes.join(' '),
	        'aria-describedby': this.props.ariaDescribedby,
	        'aria-lebelledby': labelId },
	      React.createElement('input', { tabIndex: '0', className: CLASS_ROOT + "__input",
	        id: this.props.id, name: this.props.name, type: 'checkbox',
	        checked: this.props.checked,
	        defaultChecked: this.props.defaultChecked,
	        onChange: this.props.onChange }),
	      React.createElement(
	        'span',
	        { className: CLASS_ROOT + "__control" },
	        React.createElement(
	          'svg',
	          { className: CLASS_ROOT + "__control-check", viewBox: '0 0 24 24',
	            preserveAspectRatio: 'xMidYMid meet' },
	          React.createElement('path', { fill: 'none', d: 'M6,11.3 L10.3,16 L18,6.2' })
	        )
	      ),
	      React.createElement(
	        'span',
	        { role: 'label', id: labelId, tabIndex: '-1', className: CLASS_ROOT + "__label" },
	        this.props.label
	      )
	    );
	  }

	});

	module.exports = CheckBox;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;//     uuid.js
	//
	//     Copyright (c) 2010-2012 Robert Kieffer
	//     MIT License - http://opensource.org/licenses/mit-license.php

	(function() {
	  var _global = this;

	  // Unique ID creation requires a high quality random # generator.  We feature
	  // detect to determine the best RNG source, normalizing to a function that
	  // returns 128-bits of randomness, since that's what's usually required
	  var _rng;

	  // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html
	  //
	  // Moderately fast, high quality
	  if (typeof(_global.require) == 'function') {
	    try {
	      var _rb = _global.require('crypto').randomBytes;
	      _rng = _rb && function() {return _rb(16);};
	    } catch(e) {}
	  }

	  if (!_rng && _global.crypto && crypto.getRandomValues) {
	    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
	    //
	    // Moderately fast, high quality
	    var _rnds8 = new Uint8Array(16);
	    _rng = function whatwgRNG() {
	      crypto.getRandomValues(_rnds8);
	      return _rnds8;
	    };
	  }

	  if (!_rng) {
	    // Math.random()-based (RNG)
	    //
	    // If all else fails, use Math.random().  It's fast, but is of unspecified
	    // quality.
	    var  _rnds = new Array(16);
	    _rng = function() {
	      for (var i = 0, r; i < 16; i++) {
	        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
	        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
	      }

	      return _rnds;
	    };
	  }

	  // Buffer class to use
	  var BufferClass = typeof(_global.Buffer) == 'function' ? _global.Buffer : Array;

	  // Maps for number <-> hex string conversion
	  var _byteToHex = [];
	  var _hexToByte = {};
	  for (var i = 0; i < 256; i++) {
	    _byteToHex[i] = (i + 0x100).toString(16).substr(1);
	    _hexToByte[_byteToHex[i]] = i;
	  }

	  // **`parse()` - Parse a UUID into it's component bytes**
	  function parse(s, buf, offset) {
	    var i = (buf && offset) || 0, ii = 0;

	    buf = buf || [];
	    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
	      if (ii < 16) { // Don't overflow!
	        buf[i + ii++] = _hexToByte[oct];
	      }
	    });

	    // Zero out remaining bytes if string was short
	    while (ii < 16) {
	      buf[i + ii++] = 0;
	    }

	    return buf;
	  }

	  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**
	  function unparse(buf, offset) {
	    var i = offset || 0, bth = _byteToHex;
	    return  bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]];
	  }

	  // **`v1()` - Generate time-based UUID**
	  //
	  // Inspired by https://github.com/LiosK/UUID.js
	  // and http://docs.python.org/library/uuid.html

	  // random #'s we need to init node and clockseq
	  var _seedBytes = _rng();

	  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
	  var _nodeId = [
	    _seedBytes[0] | 0x01,
	    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
	  ];

	  // Per 4.2.2, randomize (14 bit) clockseq
	  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

	  // Previous uuid creation time
	  var _lastMSecs = 0, _lastNSecs = 0;

	  // See https://github.com/broofa/node-uuid for API details
	  function v1(options, buf, offset) {
	    var i = buf && offset || 0;
	    var b = buf || [];

	    options = options || {};

	    var clockseq = options.clockseq != null ? options.clockseq : _clockseq;

	    // UUID timestamps are 100 nano-second units since the Gregorian epoch,
	    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
	    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
	    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
	    var msecs = options.msecs != null ? options.msecs : new Date().getTime();

	    // Per 4.2.1.2, use count of uuid's generated during the current clock
	    // cycle to simulate higher resolution clock
	    var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;

	    // Time since last uuid creation (in msecs)
	    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

	    // Per 4.2.1.2, Bump clockseq on clock regression
	    if (dt < 0 && options.clockseq == null) {
	      clockseq = clockseq + 1 & 0x3fff;
	    }

	    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
	    // time interval
	    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {
	      nsecs = 0;
	    }

	    // Per 4.2.1.2 Throw error if too many uuids are requested
	    if (nsecs >= 10000) {
	      throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
	    }

	    _lastMSecs = msecs;
	    _lastNSecs = nsecs;
	    _clockseq = clockseq;

	    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
	    msecs += 12219292800000;

	    // `time_low`
	    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
	    b[i++] = tl >>> 24 & 0xff;
	    b[i++] = tl >>> 16 & 0xff;
	    b[i++] = tl >>> 8 & 0xff;
	    b[i++] = tl & 0xff;

	    // `time_mid`
	    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
	    b[i++] = tmh >>> 8 & 0xff;
	    b[i++] = tmh & 0xff;

	    // `time_high_and_version`
	    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
	    b[i++] = tmh >>> 16 & 0xff;

	    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
	    b[i++] = clockseq >>> 8 | 0x80;

	    // `clock_seq_low`
	    b[i++] = clockseq & 0xff;

	    // `node`
	    var node = options.node || _nodeId;
	    for (var n = 0; n < 6; n++) {
	      b[i + n] = node[n];
	    }

	    return buf ? buf : unparse(b);
	  }

	  // **`v4()` - Generate random UUID**

	  // See https://github.com/broofa/node-uuid for API details
	  function v4(options, buf, offset) {
	    // Deprecated - 'format' argument, as supported in v1.2
	    var i = buf && offset || 0;

	    if (typeof(options) == 'string') {
	      buf = options == 'binary' ? new BufferClass(16) : null;
	      options = null;
	    }
	    options = options || {};

	    var rnds = options.random || (options.rng || _rng)();

	    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	    rnds[6] = (rnds[6] & 0x0f) | 0x40;
	    rnds[8] = (rnds[8] & 0x3f) | 0x80;

	    // Copy bytes to buffer, if provided
	    if (buf) {
	      for (var ii = 0; ii < 16; ii++) {
	        buf[i + ii] = rnds[ii];
	      }
	    }

	    return buf || unparse(rnds);
	  }

	  // Export public API
	  var uuid = v4;
	  uuid.v1 = v1;
	  uuid.v4 = v4;
	  uuid.parse = parse;
	  uuid.unparse = unparse;
	  uuid.BufferClass = BufferClass;

	  if (typeof(module) != 'undefined' && module.exports) {
	    // Publish as node.js module
	    module.exports = uuid;
	  } else  if (true) {
	    // Publish as AMD module
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {return uuid;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	 

	  } else {
	    // Publish as global (in browsers)
	    var _previousRoot = _global.uuid;

	    // **`noConflict()` - (browser only) to reset global 'uuid' var**
	    uuid.noConflict = function() {
	      _global.uuid = _previousRoot;
	      return uuid;
	    };

	    _global.uuid = uuid;
	  }
	}).call(this);


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Legend = __webpack_require__(197);

	var CLASS_ROOT = "distribution";

	var DEFAULT_WIDTH = 400;
	var DEFAULT_HEIGHT = 200;

	var Distribution = React.createClass({
	  displayName: 'Distribution',

	  propTypes: {
	    large: React.PropTypes.bool,
	    legend: React.PropTypes.bool,
	    legendTotal: React.PropTypes.bool,
	    series: React.PropTypes.arrayOf(React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.number.isRequired,
	      colorIndex: React.PropTypes.string,
	      important: React.PropTypes.bool,
	      onClick: React.PropTypes.func,
	      icon: {
	        width: React.PropTypes.number,
	        height: React.PropTypes.number,
	        svgElement: React.PropTypes.node
	      }
	    })),
	    small: React.PropTypes.bool,
	    units: React.PropTypes.string,
	    vertical: React.PropTypes.bool
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._resizeTimer);
	    this._resizeTimer = setTimeout(this._layout, 50);
	  },

	  _layout: function _layout() {
	    // legendPosition based on available window orientation
	    var ratio = window.innerWidth / window.innerHeight;
	    if (ratio < 0.8) {
	      this.setState({ legendPosition: 'bottom' });
	    } else if (ratio > 1.2) {
	      this.setState({ legendPosition: 'right' });
	    }

	    var graphic = this.refs.graphic.getDOMNode();
	    var rect = graphic.getBoundingClientRect();
	    if (rect.width !== this.state.width || rect.height !== this.state.height) {
	      this.setState({
	        width: rect.width,
	        height: rect.height
	      });
	    }

	    // adjust box label positions
	    var container = this.refs.container.getDOMNode();
	    var labels = container.querySelectorAll('.distribution__label');
	    for (var i = 0; i < labels.length; i += 1) {
	      var label = labels[i];
	      label.style.top = null;
	      label.style.left = null;
	      var boxIndex = label.getAttribute('data-box-index');
	      var box = container.querySelectorAll('[data-index="' + boxIndex + '"]')[0];
	      var boxRect = box.getBoundingClientRect();
	      var labelRect = label.getBoundingClientRect();
	      label.style.top = boxRect.top - rect.top + boxRect.height / 2 - labelRect.height / 2 + 'px';
	      label.style.left = boxRect.left - rect.left + boxRect.width / 2 - labelRect.width / 2 + 'px';
	    }
	  },

	  _seriesTotal: function _seriesTotal(series) {
	    var total = 0;
	    series.some(function (item) {
	      total += item.value;
	    });
	    return total;
	  },

	  // Generates state based on the provided props.
	  _stateFromProps: function _stateFromProps(props) {
	    var total;
	    if (props.series) {
	      total = this._seriesTotal(props.series);
	    } else {
	      total = 100;
	    }

	    var state = {
	      total: total
	    };

	    return state;
	  },

	  getInitialState: function getInitialState() {
	    var state = this._stateFromProps(this.props);
	    state.legendPosition = 'bottom';
	    state.width = DEFAULT_WIDTH;
	    state.height = DEFAULT_HEIGHT;
	    return state;
	  },

	  componentDidMount: function componentDidMount() {
	    this._initialTimer = setTimeout(this._initialTimeout, 10);
	    window.addEventListener('resize', this._onResize);
	    this._onResize();
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    var state = this._stateFromProps(newProps);
	    state.width = this.state.width;
	    state.height = this.state.height;
	    this.setState(state);
	    this._onResize();
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    clearTimeout(this._resizeTimer);
	    window.removeEventListener('resize', this._onResize);
	  },

	  _itemColorIndex: function _itemColorIndex(item, index) {
	    return item.colorIndex || 'graph-' + (index + 1);
	  },

	  _renderLegend: function _renderLegend() {
	    return React.createElement(Legend, { className: CLASS_ROOT + "__legend",
	      series: this.props.series,
	      units: this.props.units,
	      activeIndex: this.state.activeIndex,
	      onActive: this._onActive });
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    classes.push(CLASS_ROOT + "--legend-" + this.state.legendPosition);
	    if (this.props.vertical) {
	      classes.push(CLASS_ROOT + "--vertical");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (!this.props.series || this.props.series.length === 0) {
	      classes.push(CLASS_ROOT + "--loading");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var legend = null;
	    if (this.props.legend) {
	      legend = this._renderLegend();
	    }

	    var boxes = [];
	    var labels = [];
	    if (this.props.series) {
	      var areaPer = this.state.width * this.state.height / this.state.total;
	      var origin = [0, 0];
	      var across = false;
	      boxes = this.props.series.filter(function (item) {
	        return item.value > 0;
	      }).map(function (item, index) {
	        var boxClasses = [CLASS_ROOT + "__box"];
	        var iconClasses = [CLASS_ROOT + "__icons"];
	        var labelClasses = [CLASS_ROOT + "__label"];
	        var colorIndex = this._itemColorIndex(item, index);
	        boxClasses.push("color-index-" + colorIndex);
	        iconClasses.push("color-index-" + colorIndex);
	        var x = origin[0];
	        var y = origin[1];
	        var width, height;
	        if (across) {
	          width = this.state.width - x;
	          height = areaPer * item.value / width;
	          across = false;
	          origin[1] += height;
	        } else {
	          height = this.state.height - y;
	          width = areaPer * item.value / height;
	          across = true;
	          origin[0] += width;
	        }

	        var text = '' + item.value;
	        if (this.props.units) {
	          text += ' ' + this.props.units;
	        }
	        if (item.label) {
	          text += ' ' + item.label;
	        }

	        var contents;
	        if (item.icon) {
	          labelClasses.push(CLASS_ROOT + "__label--icons");
	          var icons = [];
	          // fill box with icons
	          var iconX = 0;
	          var iconY = 0;
	          var iconIndex = 1;
	          while (iconY < height - item.icon.height) {
	            while (iconX < width - item.icon.width) {
	              icons.push(React.createElement(
	                'g',
	                { key: iconIndex,
	                  transform: "translate(" + (x + iconX) + "," + (y + iconY) + ")" },
	                item.icon.svgElement
	              ));
	              iconX += item.icon.width;
	              iconIndex += 1;
	            }
	            iconY += item.icon.height;
	            iconX = 0;
	          }
	          contents = React.createElement(
	            'g',
	            { className: iconClasses.join(' ') },
	            icons
	          );
	        } else {
	          contents = React.createElement('rect', { className: boxClasses.join(' '), x: x, y: y, width: width, height: height });
	        }

	        if (width < 144 || height < 144) {
	          labelClasses.push(CLASS_ROOT + "__label--small");
	        }

	        labels.push(React.createElement(
	          'div',
	          { key: index, className: labelClasses.join(' '), 'data-box-index': index },
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__label-value" },
	            item.value,
	            React.createElement(
	              'span',
	              { className: CLASS_ROOT + "__label-units" },
	              this.props.units
	            )
	          ),
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__label-label", y: 24 },
	            item.label
	          )
	        ));

	        return React.createElement(
	          'g',
	          { key: index, 'data-index': index },
	          contents
	        );
	      }, this);
	    }

	    if (boxes.length === 0) {
	      classes.push(CLASS_ROOT + "--loading");
	      var loadingClasses = [CLASS_ROOT + "__loading-indicator"];
	      loadingClasses.push("color-index-loading");
	      var commands = "M0," + this.state.height / 2 + " L" + this.state.width + "," + this.state.height / 2;
	      boxes.push(React.createElement(
	        'g',
	        { key: 'loading' },
	        React.createElement('path', { stroke: 'none', className: loadingClasses.join(' '), d: commands })
	      ));
	    }

	    return React.createElement(
	      'div',
	      { ref: 'container', className: classes.join(' ') },
	      React.createElement(
	        'svg',
	        { ref: 'graphic', className: CLASS_ROOT + "__graphic",
	          viewBox: "0 0 " + this.state.width + " " + this.state.height,
	          preserveAspectRatio: 'none' },
	        boxes
	      ),
	      labels,
	      legend
	    );
	  }

	});

	module.exports = Distribution;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var KeyboardAccelerators = __webpack_require__(8);
	var DOM = __webpack_require__(49);

	var CLASS_ROOT = "document";
	var SCROLL_STEPS = 25;

	var GrommetDocument = React.createClass({
	  displayName: 'GrommetDocument',

	  propTypes: {
	    flush: React.PropTypes.bool,
	    full: React.PropTypes.bool
	  },

	  mixins: [KeyboardAccelerators],

	  getDefaultProps: function getDefaultProps() {
	    return {
	      flush: true
	    };
	  },

	  _easeInOutQuad: function _easeInOutQuad(t) {
	    return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
	  },

	  _scrollTo: function _scrollTo(delta) {
	    clearInterval(this._scrollToTimer);
	    var start = this._scrollParent.scrollTop;
	    var position = start + delta;
	    var step = 1;
	    this._scrollToTimer = setInterval((function () {
	      var next;
	      var easing = this._easeInOutQuad(step / SCROLL_STEPS);
	      if (position > start) {
	        next = Math.min(position, Math.max(this._scrollParent.scrollTop, Math.round(start + (position - start) * easing)));
	      } else {
	        next = Math.max(position, Math.min(this._scrollParent.scrollTop, Math.round(start - (start - position) * easing)));
	      }
	      this._scrollParent.scrollTop = next;
	      step += 1;
	      if (step > SCROLL_STEPS) {
	        // we're done
	        clearInterval(this._scrollToTimer);
	      }
	    }).bind(this), 8);
	  },

	  _markInactive: function _markInactive() {
	    var doc = this.refs.document.getDOMNode();
	    var sections = doc.querySelectorAll('.section--full');
	    for (var i = 0; i < sections.length; i += 1) {
	      var section = sections[i];
	      var rect = section.getBoundingClientRect();
	      if (rect.top > window.innerHeight - 10) {
	        section.classList.add('section--inactive');
	      } else {
	        section.classList.remove('section--inactive');
	      }
	    }
	  },

	  _onScroll: function _onScroll(event) {
	    clearTimeout(this._scrollTimer);
	    this._scrollTimer = setTimeout(this._markInactive, 50);
	  },

	  _onWheel: function _onWheel(event) {
	    if (Math.abs(event.deltaY) > 100) {
	      clearInterval(this._scrollTimer);
	    } else if (event.deltaY > 5) {
	      this._onDown();
	    } else if (event.deltaY < -5) {
	      this._onUp();
	    }
	  },

	  _onDown: function _onDown(event) {
	    if (event) {
	      event.preventDefault();
	    }
	    var doc = this.refs.document.getDOMNode();
	    var sections = doc.querySelectorAll('.section--full');
	    for (var i = 0; i < sections.length; i += 1) {
	      var section = sections[i];
	      var rect = section.getBoundingClientRect();
	      if (rect.bottom > 0 && (event || rect.bottom < window.innerHeight)) {
	        this._scrollTo(rect.bottom);
	        break;
	      }
	    }
	  },

	  _onUp: function _onUp(event) {
	    if (event) {
	      event.preventDefault();
	    }
	    var doc = this.refs.document.getDOMNode();
	    var sections = doc.querySelectorAll('.section--full');
	    for (var i = 0; i < sections.length; i += 1) {
	      var section = sections[i];
	      var rect = section.getBoundingClientRect();
	      if ((rect.top >= 0 || i === sections.length - 1) && (event || rect.top < window.innerHeight)) {
	        section = sections[i - 1];
	        rect = section.getBoundingClientRect();
	        this._scrollTo(rect.top);
	        break;
	      }
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { scrollTop: 0 };
	  },

	  componentDidMount: function componentDidMount() {
	    console.warn('Warning: Grommet Document is deprecated. It has been superceded by Grommet Article.');
	    if (this.props.full) {
	      this._markInactive();
	      var doc = this.refs.document.getDOMNode();
	      this._scrollParent = DOM.findScrollParents(doc)[0];
	      document.addEventListener('wheel', this._onWheel);
	      this._scrollParent.addEventListener('scroll', this._onScroll);
	      this.startListeningToKeyboard({
	        up: this._onUp,
	        down: this._onDown
	      });
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this.props.full) {
	      document.removeEventListener('wheel', this._onWheel);
	      clearInterval(this._scrollToTimer);
	      this._scrollParent.removeEventListener('scroll', this._onScroll);
	      clearTimeout(this._scrollTimer);
	      this.stopListeningToKeyboard({
	        up: this._onUp,
	        down: this._onDown
	      });
	    }
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.flush) {
	      classes.push(CLASS_ROOT + "--flush");
	    }
	    if (this.props.full) {
	      classes.push(CLASS_ROOT + "--full");
	    }

	    return React.createElement(
	      'div',
	      { ref: 'document', className: classes.join(' ') },
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__content" },
	        this.props.children
	      )
	    );
	  }
	});

	module.exports = GrommetDocument;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Legend = __webpack_require__(197);

	var CLASS_ROOT = "donut";
	var BASE_SIZE = 192;
	var PARTIAL_SIZE = 168;

	function polarToCartesian(centerX, centerY, radius, angleInDegrees) {
	  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;
	  return {
	    x: centerX + radius * Math.cos(angleInRadians),
	    y: centerY + radius * Math.sin(angleInRadians)
	  };
	}

	function arcCommands(x, y, radius, startAngle, endAngle) {
	  var start = polarToCartesian(x, y, radius, endAngle);
	  var end = polarToCartesian(x, y, radius, startAngle);
	  var arcSweep = endAngle - startAngle <= 180 ? "0" : "1";
	  var d = ["M", start.x, start.y, "A", radius, radius, 0, arcSweep, 0, end.x, end.y].join(" ");
	  return d;
	}

	function activeIndicatorCommands(x, y, radius, startAngle, endAngle) {
	  var midAngle = endAngle - (endAngle - startAngle) / 2;
	  var point = polarToCartesian(x, y, radius - 24, midAngle);
	  var start = polarToCartesian(x, y, radius, midAngle - 10);
	  var end = polarToCartesian(x, y, radius, midAngle + 10);
	  //var arcSweep = endAngle - startAngle <= 180 ? "0" : "1";
	  var d = ["M", point.x, point.y, "L", start.x, start.y, "A", radius, radius, 0, 0, 0, end.x, end.y, "Z"].join(" ");
	  return d;
	}

	var Donut = React.createClass({
	  displayName: 'Donut',

	  propTypes: {
	    legend: React.PropTypes.bool,
	    partial: React.PropTypes.bool,
	    max: React.PropTypes.oneOfType([React.PropTypes.shape({
	      value: React.PropTypes.number,
	      label: React.PropTypes.string
	    }), React.PropTypes.number]),
	    min: React.PropTypes.oneOfType([React.PropTypes.shape({
	      value: React.PropTypes.number,
	      label: React.PropTypes.string
	    }), React.PropTypes.number]),
	    series: React.PropTypes.arrayOf(React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.number.isRequired,
	      units: React.PropTypes.string,
	      colorIndex: React.PropTypes.string,
	      important: React.PropTypes.bool,
	      onClick: React.PropTypes.func
	    })),
	    small: React.PropTypes.bool,
	    units: React.PropTypes.string,
	    value: React.PropTypes.number
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      max: { value: 100 },
	      min: { value: 0 }
	    };
	  },

	  _initialTimeout: function _initialTimeout() {
	    this.setState({
	      initial: false,
	      activeIndex: this.state.importantIndex
	    });
	    clearTimeout(this._timeout);
	  },

	  _onActive: function _onActive(index) {
	    this.setState({ initial: false, activeIndex: index });
	  },

	  _layout: function _layout() {
	    // orientation based on available window orientation
	    var ratio = window.innerWidth / window.innerHeight;
	    if (ratio < 0.8) {
	      this.setState({ orientation: 'portrait' });
	    } else if (ratio > 1.2) {
	      this.setState({ orientation: 'landscape' });
	    }
	    // content based on avialable real estate
	    var parentElement = this.refs.donut.getDOMNode().parentNode;
	    var width = parentElement.offsetWidth;
	    var height = parentElement.offsetHeight;
	    var donutHeight = BASE_SIZE;
	    if (this.props.partial) {
	      donutHeight = PARTIAL_SIZE;
	    }
	    if (height < donutHeight || width < BASE_SIZE || width < BASE_SIZE * 2 && height < donutHeight * 2) {
	      this.setState({ size: 'small' });
	    } else {
	      this.setState({ size: null });
	    }
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._resizeTimer);
	    this._resizeTimer = setTimeout(this._layout, 50);
	  },

	  _generateSeries: function _generateSeries(props) {
	    var total = props.max.value - props.min.value;
	    var remaining = total - (props.value - props.min.value);
	    return [{ value: props.value }, { value: remaining, colorIndex: 'unset' }];
	  },

	  _importantIndex: function _importantIndex(series) {
	    var result = 0;
	    series.some(function (data, index) {
	      if (data.important) {
	        result = index;
	        return true;
	      }
	    });
	    return result;
	  },

	  getInitialState: function getInitialState() {
	    var series = this.props.series || this._generateSeries(this.props);
	    var importantIndex = this._importantIndex(series);
	    return {
	      initial: true,
	      importantIndex: importantIndex,
	      activeIndex: importantIndex,
	      legend: false,
	      orientation: 'portrait',
	      series: series
	    };
	  },

	  componentDidMount: function componentDidMount() {
	    console.log('Grommet Donut is deprecated. Please use Grommet Meter instead.');
	    this._initialTimer = setTimeout(this._initialTimeout, 10);
	    this.setState({ initial: true, activeIndex: 0 });
	    window.addEventListener('resize', this._onResize);
	    this._onResize();
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    var series = newProps.series || this._generateSeries(newProps);
	    var importantIndex = this._importantIndex(series);
	    this.setState({
	      importantIndex: importantIndex,
	      activeIndex: importantIndex,
	      series: series
	    });
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    clearTimeout(this._initialTimer);
	    clearTimeout(this._resizeTimer);
	    window.removeEventListener('resize', this._onResize);
	  },

	  _itemColorIndex: function _itemColorIndex(item, index) {
	    return item.colorIndex || 'graph-' + (index + 1);
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT, CLASS_ROOT + "--" + this.state.orientation];
	    if (this.state.size) {
	      classes.push(CLASS_ROOT + "--" + this.state.size);
	    }
	    if (this.props.partial) {
	      classes.push(CLASS_ROOT + "--partial");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }

	    var viewBoxHeight = BASE_SIZE;
	    if (this.props.partial) {
	      viewBoxHeight = PARTIAL_SIZE;
	    }

	    var total = 0;
	    this.state.series.some(function (item) {
	      total += item.value;
	    });

	    var startAngle = 0;
	    var anglePer = 360.0 / total;
	    if (this.props.partial) {
	      startAngle = 60;
	      anglePer = 240.0 / total;
	    }
	    var value = null;
	    var units = null;
	    var label = null;
	    var activeIndicator = null;

	    var paths = this.state.series.map(function (item, index) {

	      var endAngle = Math.min(360, Math.max(10, startAngle + anglePer * item.value));
	      if (item.value > 0 && startAngle + 360 === endAngle) {
	        // full use for this item, make sure we render it.
	        endAngle -= 0.1;
	      }
	      var radius = 84;
	      // start from the bottom
	      var commands = arcCommands(BASE_SIZE / 2, BASE_SIZE / 2, radius, startAngle + 180, endAngle + 180);
	      var colorIndex = this._itemColorIndex(item, index);

	      var sliceClasses = [CLASS_ROOT + "__slice"];
	      sliceClasses.push("color-index-" + colorIndex);
	      if (this.state.activeIndex === index) {
	        sliceClasses.push(CLASS_ROOT + "__slice--active");
	        value = item.value;
	        units = item.units || this.props.units;
	        label = item.label;
	      }

	      if (index === this.state.activeIndex) {
	        var indicatorCommands = activeIndicatorCommands(BASE_SIZE / 2, BASE_SIZE / 2, radius, startAngle + 180, endAngle + 180);
	        activeIndicator = React.createElement('path', { stroke: 'none',
	          className: CLASS_ROOT + "__slice-indicator color-index-" + colorIndex,
	          d: indicatorCommands });
	      }

	      startAngle = endAngle;

	      return React.createElement('path', { key: item.label, fill: 'none', className: sliceClasses.join(' '), d: commands,
	        onMouseOver: this._onActive.bind(this, index),
	        onMouseOut: this._onActive.bind(this, this.state.importantIndex),
	        onClick: item.onClick });
	    }, this);

	    var minLabel;
	    var maxLabel;
	    if (this.props.partial) {
	      if (this.props.min) {
	        minLabel = React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__min-label" },
	          this.props.min.value,
	          ' ',
	          this.props.units
	        );
	      }
	      if (this.props.max) {
	        maxLabel = React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__max-label" },
	          this.props.max.value,
	          ' ',
	          this.props.units
	        );
	      }
	    }

	    var legend = null;
	    if (this.props.legend) {
	      legend = React.createElement(Legend, { className: CLASS_ROOT + "__legend",
	        series: this.props.series,
	        units: this.props.units,
	        value: this.props.value,
	        activeIndex: this.state.activeIndex,
	        onActive: this._onActive });
	    }

	    return React.createElement(
	      'div',
	      { ref: 'donut', className: classes.join(' ') },
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__graphic-container" },
	        React.createElement(
	          'svg',
	          { className: CLASS_ROOT + "__graphic",
	            viewBox: "0 0 " + BASE_SIZE + " " + viewBoxHeight,
	            preserveAspectRatio: 'xMidYMid meet' },
	          React.createElement(
	            'g',
	            null,
	            activeIndicator,
	            paths
	          )
	        ),
	        React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__active" },
	          React.createElement(
	            'div',
	            { className: CLASS_ROOT + "__active-value large-number-font" },
	            value,
	            React.createElement(
	              'span',
	              { className: CLASS_ROOT + "__active-units large-number-font" },
	              units
	            )
	          ),
	          React.createElement(
	            'div',
	            { className: CLASS_ROOT + "__active-label" },
	            label
	          )
	        ),
	        minLabel,
	        maxLabel
	      ),
	      legend
	    );
	  }

	});

	module.exports = Donut;

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var merge = __webpack_require__(10);
	var pick = __webpack_require__(43);
	var keys = __webpack_require__(36);
	var Box = __webpack_require__(51);
	var SkipLinkAnchor = __webpack_require__(100);

	var CLASS_ROOT = "footer";

	var Footer = React.createClass({
	  displayName: 'Footer',

	  propTypes: merge({
	    large: React.PropTypes.bool,
	    small: React.PropTypes.bool,
	    float: React.PropTypes.bool
	  }, Box.propTypes),

	  getDefaultProps: function getDefaultProps() {
	    return {
	      pad: 'none',
	      direction: 'row',
	      responsive: false
	    };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    var containerClasses = [CLASS_ROOT + "__container"];
	    var other = pick(this.props, keys(Box.propTypes));
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    if (this.props.float) {
	      classes.push(CLASS_ROOT + "--float");
	      containerClasses.push(CLASS_ROOT + "__container--float");
	    }

	    return React.createElement(
	      Box,
	      _extends({ tag: 'footer' }, other, { className: classes.join(' '),
	        containerClassName: containerClasses.join(' ') }),
	      React.createElement(SkipLinkAnchor, { label: 'Footer' }),
	      this.props.children
	    );
	  }

	});

	module.exports = Footer;

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var keys = __webpack_require__(36);

	var CLASS_ROOT = "form";

	var Form = React.createClass({
	  displayName: 'Form',

	  propTypes: {
	    compact: React.PropTypes.bool,
	    fill: React.PropTypes.bool,
	    flush: React.PropTypes.bool,
	    onSubmit: React.PropTypes.func,
	    pad: React.PropTypes.oneOfType([React.PropTypes.oneOf(['none', 'small', 'medium', 'large']), React.PropTypes.shape({
	      horizontal: React.PropTypes.oneOf(['none', 'small', 'medium', 'large']),
	      vertical: React.PropTypes.oneOf(['none', 'small', 'medium', 'large'])
	    })])
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      compact: false,
	      fill: false,
	      flush: true,
	      pad: 'none'
	    };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.compact) {
	      classes.push(CLASS_ROOT + "--compact");
	    }
	    if (this.props.fill) {
	      classes.push(CLASS_ROOT + "--fill");
	    }
	    if (this.props.pad) {
	      if (typeof this.props.pad === 'string') {
	        classes.push(CLASS_ROOT + "--pad-" + this.props.pad);
	      } else if (typeof this.props.pad === 'object') {
	        keys(this.props.pad).forEach(function (key) {
	          classes.push(CLASS_ROOT + '--pad-' + key + '-' + this.props.pad[key]);
	        });
	      }
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    return React.createElement(
	      'form',
	      { className: classes.join(' '), onSubmit: this.props.onSubmit },
	      this.props.children
	    );
	  }

	});

	module.exports = Form;

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var CLASS_ROOT = "form-field";

	var FormField = React.createClass({
	  displayName: 'FormField',

	  propTypes: {
	    error: React.PropTypes.string,
	    help: React.PropTypes.node,
	    hidden: React.PropTypes.bool,
	    htmlFor: React.PropTypes.string,
	    label: React.PropTypes.string,
	    required: React.PropTypes.bool
	  },

	  _onFocus: function _onFocus() {
	    this.setState({ focus: true });
	  },

	  _onBlur: function _onBlur() {
	    this.setState({ focus: false });
	  },

	  _onClick: function _onClick() {
	    if (this._inputElement) {
	      this._inputElement.focus();
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { focus: false };
	  },

	  componentDidMount: function componentDidMount() {
	    var contentsElement = this.refs.contents.getDOMNode();
	    var inputElements = contentsElement.querySelectorAll('input, textarea, select');
	    if (inputElements.length === 1) {
	      this._inputElement = inputElements[0];
	      this._inputElement.addEventListener('focus', this._onFocus);
	      this._inputElement.addEventListener('blur', this._onBlur);
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this._inputElement) {
	      this._inputElement.removeEventListener('focus', this._onFocus);
	      this._inputElement.removeEventListener('blur', this._onBlur);
	      delete this._inputElement;
	    }
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.state.focus) {
	      classes.push(CLASS_ROOT + "--focus");
	    }
	    if (this.props.required) {
	      classes.push(CLASS_ROOT + "--required");
	    }
	    if (this.props.hidden) {
	      classes.push(CLASS_ROOT + "--hidden");
	    }
	    if (this.props.htmlFor) {
	      classes.push(CLASS_ROOT + "--text");
	    }

	    var error;
	    if (this.props.error) {
	      classes.push(CLASS_ROOT + "--error");
	      error = React.createElement(
	        'span',
	        { className: CLASS_ROOT + "__error" },
	        this.props.error
	      );
	    }
	    var help;
	    if (this.props.help !== null && this.props.help !== undefined) {
	      help = React.createElement(
	        'span',
	        { className: CLASS_ROOT + "__help" },
	        this.props.help
	      );
	    }

	    return React.createElement(
	      'div',
	      { className: classes.join(' '), onClick: this._onClick },
	      error,
	      React.createElement(
	        'label',
	        { className: CLASS_ROOT + "__label", htmlFor: this.props.htmlFor },
	        this.props.label
	      ),
	      help,
	      React.createElement(
	        'span',
	        { ref: 'contents', className: CLASS_ROOT + "__contents" },
	        this.props.children
	      )
	    );
	  }

	});

	module.exports = FormField;

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var FormFields = React.createClass({
	  displayName: 'FormFields',

	  render: function render() {
	    var classes = ["form-fields"];
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    return React.createElement(
	      'div',
	      { className: classes.join(' ') },
	      this.props.children
	    );
	  }

	});

	module.exports = FormFields;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	var React = __webpack_require__(2);

	var CLASS_ROOT = "headline";

	var Headline = React.createClass({
	  displayName: "Headline",

	  propTypes: {
	    colorIndex: React.PropTypes.string,
	    large: React.PropTypes.bool,
	    small: React.PropTypes.bool,
	    strong: React.PropTypes.bool
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.strong) {
	      classes.push(CLASS_ROOT + "--strong");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      "div",
	      { className: classes.join(' ') },
	      this.props.children
	    );
	  }

	});

	module.exports = Headline;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	var React = __webpack_require__(2);

	var Label = React.createClass({
	  displayName: "Label",

	  propTypes: {
	    icon: React.PropTypes.node,
	    text: React.PropTypes.string
	  },

	  render: function render() {
	    var icon = null;
	    var text = null;
	    if (this.props.icon) {
	      icon = React.createElement(
	        "span",
	        { className: "label__icon control-icon" },
	        this.props.icon
	      );
	    }
	    if (this.props.text) {
	      text = React.createElement(
	        "span",
	        { className: "label__text" },
	        this.props.text
	      );
	    }
	    return React.createElement(
	      "div",
	      { className: "label" },
	      icon,
	      text
	    );
	  }

	});

	module.exports = Label;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var ListItem = __webpack_require__(210);
	var SpinningIcon = __webpack_require__(211);
	var InfiniteScroll = __webpack_require__(212);
	var IntlMixin = __webpack_require__(54);

	var CLASS_ROOT = "list";

	var List = React.createClass({
	  displayName: 'List',

	  propTypes: {
	    data: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,
	    emptyIndicator: React.PropTypes.node,
	    large: React.PropTypes.bool,
	    onMore: React.PropTypes.func,
	    onSelect: React.PropTypes.func,
	    schema: React.PropTypes.arrayOf(React.PropTypes.shape({
	      attribute: React.PropTypes.string,
	      'default': React.PropTypes.node,
	      image: React.PropTypes.bool,
	      label: React.PropTypes.string,
	      primary: React.PropTypes.bool,
	      secondary: React.PropTypes.bool,
	      timestamp: React.PropTypes.bool,
	      uid: React.PropTypes.bool
	    })).isRequired,
	    selected: React.PropTypes.oneOfType([React.PropTypes.string, // uid
	    React.PropTypes.arrayOf(React.PropTypes.string)]),
	    small: React.PropTypes.bool
	  },

	  mixins: [InfiniteScroll, IntlMixin],

	  getDefaultProps: function getDefaultProps() {
	    return { small: false };
	  },

	  _onClickItem: function _onClickItem(item) {
	    if (this.props.onSelect) {
	      this.props.onSelect(item);
	    }
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.props.onMore) {
	      this.startListeningForScroll(this.refs.more.getDOMNode(), this.props.onMore);
	    }
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    this.stopListeningForScroll();
	    if (this.props.onMore) {
	      this.startListeningForScroll(this.refs.more.getDOMNode(), this.props.onMore);
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this.props.onMore) {
	      this.stopListeningForScroll();
	    }
	  },

	  _renderValue: function _renderValue(item, scheme) {
	    var result;
	    var value = item[scheme.attribute] || scheme['default'];
	    if (scheme.image) {
	      if (typeof value === 'string') {
	        result = React.createElement('img', { src: value, alt: scheme.label || 'image' });
	      } else {
	        result = value;
	      }
	    } else if (scheme.timestamp) {
	      result = this.getGrommetFormattedDate(value);
	    } else {
	      result = value;
	    }
	    return result;
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (true) {
	      classes.push(CLASS_ROOT + "--fill");
	    }
	    if (true) {
	      classes.push(CLASS_ROOT + "--flush");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var items = this.props.data.map(function (item) {
	      var uid;
	      var image;
	      var primary;
	      var secondary;
	      var selected;
	      var onClick;

	      this.props.schema.forEach(function (scheme) {
	        if (scheme.image) {
	          image = this._renderValue(item, scheme);
	        } else if (scheme.primary) {
	          primary = this._renderValue(item, scheme);
	        } else if (scheme.secondary) {
	          secondary = this._renderValue(item, scheme);
	        }
	        if (scheme.uid) {
	          uid = item[scheme.attribute];
	          if (uid === this.props.selected) {
	            selected = true;
	          }
	        }
	      }, this);

	      if (this.props.onSelect) {
	        onClick = this._onClickItem.bind(this, item);
	      }

	      return React.createElement(ListItem, { key: uid, image: image, label: primary,
	        annotation: secondary, selected: selected,
	        onClick: onClick });
	    }, this);

	    var more;
	    if (this.props.onMore) {
	      classes.push(CLASS_ROOT + "--moreable");
	      more = React.createElement(
	        'li',
	        { ref: 'more', className: CLASS_ROOT + "__more" },
	        React.createElement(SpinningIcon, null)
	      );
	    }

	    var empty;
	    if (this.props.data.length === 0) {
	      empty = React.createElement(
	        'li',
	        { className: CLASS_ROOT + "__empty" },
	        this.props.emptyIndicator
	      );
	    }

	    return React.createElement(
	      'ul',
	      { className: classes.join(' ') },
	      empty,
	      items,
	      more
	    );
	  }

	});

	module.exports = List;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	var React = __webpack_require__(2);

	var CLASS_ROOT = "list-item";

	var ListItem = React.createClass({
	  displayName: "ListItem",

	  propTypes: {
	    annotation: React.PropTypes.node,
	    image: React.PropTypes.node,
	    label: React.PropTypes.node,
	    onClick: React.PropTypes.func,
	    selected: React.PropTypes.bool
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.onClick) {
	      classes.push(CLASS_ROOT + "--selectable");
	    }
	    if (this.props.selected) {
	      classes.push(CLASS_ROOT + "--selected");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      "li",
	      { className: classes.join(' '), onClick: this.props.onClick },
	      React.createElement(
	        "span",
	        { className: CLASS_ROOT + "__image" },
	        this.props.image
	      ),
	      React.createElement(
	        "span",
	        { className: CLASS_ROOT + "__text" },
	        React.createElement(
	          "span",
	          { className: CLASS_ROOT + "__label" },
	          this.props.label
	        ),
	        React.createElement(
	          "span",
	          { className: CLASS_ROOT + "__annotation" },
	          this.props.annotation
	        )
	      )
	    );
	  }

	});

	module.exports = ListItem;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	var React = __webpack_require__(2);

	var CLASS_ROOT = "icon-spinning";

	var Spinning = React.createClass({
	  displayName: "Spinning",

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    return React.createElement(
	      "svg",
	      { className: classes.join(' '), viewBox: "0 0 48 48", version: "1.1" },
	      React.createElement("circle", { stroke: "#ddd", strokeWidth: "4", strokeDasharray: "24px 8px", fill: "none", cx: "24", cy: "24", r: "20" }),
	      React.createElement("circle", { stroke: "#333", strokeWidth: "4", strokeDasharray: "24px 104px", fill: "none", cx: "24", cy: "24", r: "20" })
	    );
	  }

	});

	module.exports = Spinning;

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	"use strict";

	var DOM = __webpack_require__(49);

	var SCROLL_MORE_DELAY = 2000; // when the user scrolls
	var SCROLL_MORE_INITIAL_DELAY = 200; // when we start out at the bottom already

	var InfiniteScroll = {

	  _infiniteScroll: {
	    indicatorElement: null,
	    scrollParent: null,
	    onEnd: null
	  },

	  _onScroll: function _onScroll() {
	    // delay a bit to ride out quick users
	    clearTimeout(this._infiniteScroll.scrollTimer);
	    this._infiniteScroll.scrollTimer = setTimeout((function () {
	      // are we at the bottom?
	      var parentRect = this._infiniteScroll.scrollParent.getBoundingClientRect();
	      var indicatorRect = this._infiniteScroll.indicatorElement.getBoundingClientRect();
	      if (indicatorRect.bottom <= parentRect.bottom) {
	        this._infiniteScroll.onEnd();
	      }
	    }).bind(this), SCROLL_MORE_DELAY);
	  },

	  startListeningForScroll: function startListeningForScroll(indicatorElement, onEnd) {
	    this._infiniteScroll.onEnd = onEnd;
	    this._infiniteScroll.indicatorElement = indicatorElement;
	    this._infiniteScroll.scrollParent = DOM.findScrollParents(indicatorElement)[0];
	    this._infiniteScroll.scrollParent.addEventListener("scroll", this._onScroll);
	    // check in case we're already at the bottom
	    if (this._infiniteScroll.scrollParent === document) {
	      this._infiniteScroll.scrollTimer = setTimeout(onEnd, SCROLL_MORE_INITIAL_DELAY);
	    }
	  },

	  stopListeningForScroll: function stopListeningForScroll() {
	    if (this._infiniteScroll.scrollParent) {
	      clearTimeout(this._infiniteScroll.scrollTimer);
	      this._infiniteScroll.scrollParent.removeEventListener("scroll", this._onScroll);
	      this._infiniteScroll.scrollParent = null;
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    this.stopListeningForScroll();
	  }
	};

	module.exports = InfiniteScroll;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Login = React.createClass({
	  displayName: 'Login',

	  propTypes: {
	    background: React.PropTypes.string
	  },

	  _onResize: function _onResize() {
	    this.adjustBackground();
	  },

	  adjustBackground: function adjustBackground() {
	    // make sure the background always fills the screen, preserve aspect ratio
	    var windowRatio = window.innerWidth / window.innerHeight;
	    var image = this.refs.background.getDOMNode();
	    var imageRatio = image.scrollWidth / image.scrollHeight;
	    this.setState({ orientation: windowRatio < imageRatio ? 'portrait' : 'landscape' });
	  },

	  getInitialState: function getInitialState() {
	    return {
	      orientation: null
	    };
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.props.background) {
	      window.addEventListener('resize', this._onResize);
	      setTimeout(this.adjustBackground, 300);
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this.props.background) {
	      window.removeEventListener('resize', this._onResize);
	    }
	  },

	  render: function render() {
	    var background = null;
	    if (this.props.background) {
	      var classes = ['login__background'];
	      if (this.state.orientation) {
	        classes.push('login__background--' + this.state.orientation);
	      }
	      background = React.createElement('img', { ref: 'background', className: classes.join(' '),
	        src: this.props.background });
	    }

	    return React.createElement(
	      'div',
	      { className: "login" },
	      background,
	      React.createElement(
	        'div',
	        { className: "login__container" },
	        this.props.children
	      )
	    );
	  }

	});

	module.exports = Login;

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Form = __webpack_require__(204);
	var FormField = __webpack_require__(205);
	var CheckBox = __webpack_require__(198);
	var Button = __webpack_require__(101);
	var IntlMixin = __webpack_require__(54);
	var CLASS_ROOT = "login-form";

	var LoginForm = React.createClass({
	  displayName: 'LoginForm',

	  mixins: [IntlMixin],

	  propTypes: {
	    logo: React.PropTypes.node,
	    title: React.PropTypes.string,
	    rememberMe: React.PropTypes.bool,
	    forgotPassword: React.PropTypes.node,
	    errors: React.PropTypes.arrayOf(React.PropTypes.string),
	    onSubmit: React.PropTypes.func
	  },

	  _onSubmit: function _onSubmit(event) {
	    event.preventDefault();
	    var username = this.refs.username.getDOMNode().value.trim();
	    var password = this.refs.password.getDOMNode().value.trim();
	    if (this.props.onSubmit) {
	      this.props.onSubmit({ username: username, password: password });
	    }
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      errors: []
	    };
	  },

	  componentDidMount: function componentDidMount() {
	    this.refs.username.getDOMNode().focus();
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];

	    var errors = this.props.errors.map((function (error, index) {
	      return React.createElement(
	        'div',
	        { key: index, className: CLASS_ROOT + "__error" },
	        this.getGrommetIntlMessage(error)
	      );
	    }).bind(this));

	    var logo = null;
	    if (this.props.logo) {
	      logo = React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__logo" },
	        this.props.logo
	      );
	    }

	    var title = null;
	    if (this.props.title) {
	      title = React.createElement(
	        'h1',
	        { className: CLASS_ROOT + "__title" },
	        this.props.title
	      );
	    }

	    var footer = null;
	    if (this.props.rememberMe || this.props.forgotPassword) {
	      var rememberMe = null;
	      if (this.props.rememberMe) {
	        rememberMe = React.createElement(CheckBox, { className: CLASS_ROOT + "__remember-me",
	          id: 'remember-me', label: this.getGrommetIntlMessage('Remember me') });
	      }
	      footer = React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__footer" },
	        rememberMe,
	        this.props.forgotPassword
	      );
	    }

	    return React.createElement(
	      Form,
	      { className: classes.join(' '), onSubmit: this._onSubmit },
	      logo,
	      title,
	      React.createElement(
	        'fieldset',
	        null,
	        React.createElement(
	          FormField,
	          { htmlFor: 'username', label: this.getGrommetIntlMessage('Username') },
	          React.createElement('input', { id: 'username', ref: 'username', type: 'email' })
	        ),
	        React.createElement(
	          FormField,
	          { htmlFor: 'password', label: this.getGrommetIntlMessage('Password') },
	          React.createElement('input', { id: 'password', ref: 'password', type: 'password' })
	        )
	      ),
	      errors,
	      React.createElement(Button, { className: CLASS_ROOT + "__submit", primary: true, strong: true,
	        label: this.getGrommetIntlMessage('Log In'),
	        onClick: this._onSubmit }),
	      footer
	    );
	  }

	});

	module.exports = LoginForm;

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var CLASS_ROOT = "map";

	var ResourceMap = React.createClass({
	  displayName: 'ResourceMap',

	  propTypes: {
	    data: React.PropTypes.shape({
	      categories: React.PropTypes.arrayOf(React.PropTypes.shape({
	        id: React.PropTypes.string,
	        label: React.PropTypes.node,
	        items: React.PropTypes.arrayOf(React.PropTypes.shape({
	          id: React.PropTypes.string,
	          node: React.PropTypes.node
	        }))
	      })),
	      links: React.PropTypes.arrayOf(React.PropTypes.shape({
	        parentId: React.PropTypes.string,
	        childId: React.PropTypes.string
	      }))
	    }).isRequired
	  },

	  _coords: function _coords(id, canvasRect) {
	    var element = document.getElementById(id);
	    var rect = element.getBoundingClientRect();
	    return [rect.left - canvasRect.left + rect.width / 2, rect.top - canvasRect.top + rect.height / 2];
	  },

	  _draw: function _draw() {
	    var canvasElement = this.refs.canvas.getDOMNode();
	    var highlightCanvasElement = this.refs.highlightCanvas.getDOMNode();
	    // don't draw if we don't have a canvas to draw on, such as a unit test
	    if (canvasElement.getContext) {
	      var context = canvasElement.getContext('2d');
	      var highlightContext = highlightCanvasElement.getContext('2d');
	      var canvasRect = canvasElement.getBoundingClientRect();
	      context.clearRect(0, 0, canvasRect.width, canvasRect.height);
	      highlightContext.clearRect(0, 0, canvasRect.width, canvasRect.height);

	      context.strokeStyle = '#000000';
	      context.lineWidth = 1;
	      highlightContext.strokeStyle = '#000000';
	      highlightContext.lineWidth = 2;

	      this.props.data.links.forEach(function (link) {
	        var parentCoords = this._coords(link.parentId, canvasRect);
	        var childCoords = this._coords(link.childId, canvasRect);

	        if (this.state.activeId === link.parentId || this.state.activeId === link.childId) {
	          highlightContext.beginPath();
	          highlightContext.moveTo(parentCoords[0], parentCoords[1]);
	          highlightContext.lineTo(childCoords[0], childCoords[1]);
	          highlightContext.stroke();
	        } else {
	          context.beginPath();
	          context.moveTo(parentCoords[0], parentCoords[1]);
	          context.lineTo(childCoords[0], childCoords[1]);
	          context.stroke();
	        }
	      }, this);
	    }
	  },

	  _layout: function _layout() {
	    var mapElement = this.refs.map.getDOMNode();
	    if (mapElement.scrollWidth !== this.state.canvasWidth || mapElement.scrollHeight !== this.state.canvasHeight) {
	      this.setState({
	        canvasWidth: mapElement.scrollWidth,
	        canvasHeight: mapElement.scrollHeight
	      });
	    }
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._layoutTimer);
	    this._layoutTimer = setTimeout(this._layout, 50);
	  },

	  _onEnter: function _onEnter(id) {
	    this.setState({ activeId: id });
	  },

	  _onLeave: function _onLeave() {
	    this.setState({ activeId: null });
	  },

	  getInitialState: function getInitialState() {
	    return { canvasWidth: 100, canvasHeight: 100 };
	  },

	  componentDidMount: function componentDidMount() {
	    window.addEventListener('resize', this._onResize);
	    this._layout();
	    clearTimeout(this._drawTimer);
	    this._drawTimer = setTimeout(this._draw, 50);
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    this._layout();
	    clearTimeout(this._drawTimer);
	    this._drawTimer = setTimeout(this._draw, 50);
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    window.removeEventListener('resize', this._onResize);
	  },

	  _renderItems: function _renderItems(items) {
	    return items.map(function (item, index) {
	      var classes = [CLASS_ROOT + "__item"];
	      var active = this.state.activeId === item.id || this.props.data.links.some(function (link) {
	        return (link.parentId === item.id || link.childId === item.id) && (link.parentId === this.state.activeId || link.childId === this.state.activeId);
	      }, this);
	      if (active) {
	        classes.push(CLASS_ROOT + "__item--active");
	      }
	      return React.createElement(
	        'li',
	        { key: index, id: item.id, className: classes.join(' '),
	          onMouseEnter: this._onEnter.bind(this, item.id),
	          onMouseLeave: this._onLeave.bind(this, item.id) },
	        item.node
	      );
	    }, this);
	  },

	  _renderCategories: function _renderCategories(categories) {
	    var result = categories.map(function (category) {
	      return React.createElement(
	        'li',
	        { key: category.id, className: CLASS_ROOT + "__category" },
	        React.createElement(
	          'ul',
	          { className: CLASS_ROOT + "__category-items" },
	          this._renderItems(category.items)
	        ),
	        React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__category-label" },
	          category.label
	        )
	      );
	    }, this);
	    return result;
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var categories = [];
	    if (this.props.data.categories) {
	      categories = this._renderCategories(this.props.data.categories);
	    }

	    return React.createElement(
	      'div',
	      { ref: 'map', className: classes.join(' ') },
	      React.createElement('canvas', { ref: 'canvas', className: CLASS_ROOT + "__canvas",
	        width: this.state.canvasWidth, height: this.state.canvasHeight }),
	      React.createElement('canvas', { ref: 'highlightCanvas', className: CLASS_ROOT + "__canvas " + CLASS_ROOT + "__canvas--highlight",
	        width: this.state.canvasWidth, height: this.state.canvasHeight }),
	      React.createElement(
	        'ol',
	        { className: CLASS_ROOT + "__categories" },
	        categories
	      )
	    );
	  }

	});

	module.exports = ResourceMap;

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Legend = __webpack_require__(197);

	var CLASS_ROOT = "meter";

	var BAR_LENGTH = 192;
	var BAR_THICKNESS = 24;
	var MID_BAR_THICKNESS = BAR_THICKNESS / 2;

	var CIRCLE_WIDTH = 192;
	var CIRCLE_RADIUS = 84;

	var ARC_HEIGHT = 144;

	var SPIRAL_THICKNESS = 24;
	// Allow for active value content next to a spiral meter
	var SPIRAL_TEXT_PADDING = 48;

	function polarToCartesian(centerX, centerY, radius, angleInDegrees) {
	  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;
	  return {
	    x: centerX + radius * Math.cos(angleInRadians),
	    y: centerY + radius * Math.sin(angleInRadians)
	  };
	}

	function arcCommands(centerX, centerY, radius, startAngle, endAngle) {
	  var start = polarToCartesian(centerX, centerY, radius, endAngle);
	  var end = polarToCartesian(centerX, centerY, radius, startAngle);
	  var arcSweep = endAngle - startAngle <= 180 ? "0" : "1";
	  var d = ["M", start.x, start.y, "A", radius, radius, 0, arcSweep, 0, end.x, end.y].join(" ");
	  return d;
	}

	function singleIndicatorCommands(centerX, centerY, radius, startAngle, endAngle, length) {
	  var point = polarToCartesian(centerX, centerY, radius - length, endAngle - 1);
	  var start = polarToCartesian(centerX, centerY, radius, endAngle - 1);
	  var d = ["M", start.x, start.y, "L", point.x, point.y].join(" ");
	  return d;
	}

	var Meter = React.createClass({
	  displayName: 'Meter',

	  propTypes: {
	    important: React.PropTypes.number,
	    large: React.PropTypes.bool,
	    legend: React.PropTypes.bool,
	    legendTotal: React.PropTypes.bool,
	    max: React.PropTypes.oneOfType([React.PropTypes.shape({
	      value: React.PropTypes.number.isRequired,
	      label: React.PropTypes.string
	    }), React.PropTypes.number]),
	    min: React.PropTypes.oneOfType([React.PropTypes.shape({
	      value: React.PropTypes.number.isRequired,
	      label: React.PropTypes.string
	    }), React.PropTypes.number]),
	    series: React.PropTypes.arrayOf(React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.number.isRequired,
	      colorIndex: React.PropTypes.string,
	      important: React.PropTypes.bool,
	      onClick: React.PropTypes.func
	    })),
	    small: React.PropTypes.bool,
	    threshold: React.PropTypes.number,
	    thresholds: React.PropTypes.arrayOf(React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.number.isRequired,
	      colorIndex: React.PropTypes.string
	    })),
	    type: React.PropTypes.oneOf(['bar', 'arc', 'circle', 'spiral']),
	    units: React.PropTypes.string,
	    value: React.PropTypes.number,
	    vertical: React.PropTypes.bool
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      type: 'bar'
	    };
	  },

	  _initialTimeout: function _initialTimeout() {
	    this.setState({
	      initial: false,
	      activeIndex: this.state.importantIndex
	    });
	    clearTimeout(this._timeout);
	  },

	  _onActivate: function _onActivate(index) {
	    this.setState({ initial: false, activeIndex: index });
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._resizeTimer);
	    this._resizeTimer = setTimeout(this._layout, 50);
	  },

	  _layout: function _layout() {
	    // legendPosition based on available window orientation
	    var ratio = window.innerWidth / window.innerHeight;
	    if (ratio < 0.8) {
	      this.setState({ legendPosition: 'bottom' });
	    } else if (ratio > 1.2) {
	      this.setState({ legendPosition: 'right' });
	    }
	    /*
	    // content based on available real estate
	    var parentElement = this.refs.donut.getDOMNode().parentNode;
	    var width = parentElement.offsetWidth;
	    var height = parentElement.offsetHeight;
	    var donutHeight = BASE_SIZE;
	    if (this.props.partial) {
	      donutHeight = PARTIAL_SIZE;
	    }
	    if (height < donutHeight || width < BASE_SIZE ||
	      (width < (BASE_SIZE * 2) && height < (donutHeight * 2))) {
	      this.setState({size: 'small'});
	    } else {
	      this.setState({size: null});
	    }
	    */
	  },

	  _normalizeSeries: function _normalizeSeries(props, min, max, thresholds) {
	    var series = [];
	    if (props.series) {
	      series = props.series;
	    } else if (props.value || props.value === 0) {
	      series = [{ value: props.value, important: true }];
	    }

	    // set color index
	    if (series.length === 1 && props.thresholds) {
	      var item = series[0];
	      if (!item.colorIndex) {
	        // see which threshold color index to use
	        var cumulative = 0;
	        thresholds.some(function (threshold) {
	          cumulative += threshold.value;
	          if (item.value < cumulative) {
	            item.colorIndex = threshold.colorIndex || 'graph-1';
	            return true;
	          }
	        });
	      }
	    } else {
	      series.forEach(function (item, index) {
	        if (!item.colorIndex) {
	          item.colorIndex = 'graph-' + (index + 1);
	        }
	      });
	    }

	    return series;
	  },

	  _normalizeThresholds: function _normalizeThresholds(props, min, max) {
	    var thresholds = [];
	    if (props.thresholds) {
	      // Convert thresholds from absolute values to cummulative,
	      // so we can re-use the series drawing code.
	      var total = 0;
	      for (var i = 0; i < props.thresholds.length; i += 1) {
	        var threshold = props.thresholds[i];
	        thresholds.push({
	          label: threshold.label,
	          colorIndex: threshold.colorIndex
	        });
	        if (i > 0) {
	          thresholds[i - 1].value = threshold.value - total;
	          total += thresholds[i - 1].value;
	        }
	        if (i === props.thresholds.length - 1) {
	          thresholds[i].value = max.value - total;
	        }
	      }
	    } else if (props.threshold) {
	      var remaining = max.value - props.threshold;
	      thresholds = [{ value: props.threshold, colorIndex: 'unset' }, { value: remaining, colorIndex: 'error' }];
	    } else {
	      thresholds = [{ value: max.value, colorIndex: 'unset' }];
	    }
	    return thresholds;
	  },

	  _importantIndex: function _importantIndex(series) {
	    var result = null;
	    if (series.length === 1) {
	      result = 0;
	    }
	    if (this.props.hasOwnProperty('important')) {
	      result = this.props.important;
	    }
	    series.some(function (data, index) {
	      if (data.important) {
	        result = index;
	        return true;
	      }
	    });
	    return result;
	  },

	  // Normalize min or max to an object.
	  _terminal: function _terminal(terminal) {
	    if (typeof terminal === 'number') {
	      terminal = { value: terminal };
	    }
	    return terminal;
	  },

	  _seriesTotal: function _seriesTotal(series) {
	    var total = 0;
	    series.some(function (item) {
	      total += item.value;
	    });
	    return total;
	  },

	  _seriesMax: function _seriesMax(series) {
	    var max = 0;
	    series.some(function (item) {
	      max = Math.max(max, item.value);
	    });
	    return max;
	  },

	  _viewBoxDimensions: function _viewBoxDimensions(series) {
	    var viewBoxHeight;
	    var viewBoxWidth;
	    if ('arc' === this.props.type) {
	      if (this.props.vertical) {
	        viewBoxWidth = ARC_HEIGHT;
	        viewBoxHeight = CIRCLE_WIDTH;
	      } else {
	        viewBoxWidth = CIRCLE_WIDTH;
	        viewBoxHeight = ARC_HEIGHT;
	      }
	    } else if ('circle' === this.props.type) {
	      viewBoxWidth = CIRCLE_WIDTH;
	      viewBoxHeight = CIRCLE_WIDTH;
	    } else if ('bar' === this.props.type) {
	      if (this.props.vertical) {
	        viewBoxWidth = BAR_THICKNESS;
	        viewBoxHeight = BAR_LENGTH;
	      } else {
	        viewBoxWidth = BAR_LENGTH;
	        viewBoxHeight = BAR_THICKNESS;
	      }
	    } else if ('spiral' === this.props.type) {
	      // Give the graphic just a bit of breathing room
	      // by not ending the spirals right at the center. (+1)
	      viewBoxHeight = Math.max(CIRCLE_WIDTH, SPIRAL_THICKNESS * (series.length + 1) * 2);
	      viewBoxWidth = viewBoxHeight + 2 * SPIRAL_TEXT_PADDING;
	    }
	    return [viewBoxWidth, viewBoxHeight];
	  },

	  // Generates state based on the provided props.
	  _stateFromProps: function _stateFromProps(props) {
	    var total;
	    if (props.series && props.series.length > 1) {
	      total = this._seriesTotal(props.series);
	    } else if (props.max && props.max.value) {
	      total = props.max.value;
	    } else {
	      total = 100;
	    }
	    var seriesMax;
	    if (props.series && 'spiral' === props.type) {
	      seriesMax = this._seriesMax(props.series);
	    }
	    // Normalize min and max
	    var min = this._terminal(props.min || 0);
	    // Max could be provided in props or come from the total of
	    // a multi-value series.
	    var max = this._terminal(props.max || seriesMax || total);
	    // Normalize simple threshold prop to an array, if needed.
	    var thresholds = this._normalizeThresholds(props, min, max);
	    // Normalize simple value prop to a series, if needed.
	    var series = this._normalizeSeries(props, min, max, thresholds);
	    // Determine important index.
	    var importantIndex = this._importantIndex(series);
	    // Determine the viewBox dimensions
	    var viewBoxDimensions = this._viewBoxDimensions(series);

	    var state = {
	      importantIndex: importantIndex,
	      activeIndex: importantIndex,
	      series: series,
	      thresholds: thresholds,
	      min: min,
	      max: max,
	      total: total,
	      viewBoxWidth: viewBoxDimensions[0],
	      viewBoxHeight: viewBoxDimensions[1]
	    };

	    if ('arc' === this.props.type) {
	      state.startAngle = 60;
	      state.anglePer = total === 0 ? 0 : 240.0 / total;
	      if (this.props.vertical) {
	        state.angleOffset = 90;
	      } else {
	        state.angleOffset = 180;
	      }
	    } else if ('circle' === this.props.type) {
	      state.startAngle = 1;
	      state.anglePer = total === 0 ? 0 : 358.0 / total;
	      state.angleOffset = 180;
	    } else if ('bar' === this.props.type) {
	      state.scale = BAR_LENGTH / (max.value - min.value);
	    } else if ('spiral' === this.props.type) {
	      state.startAngle = 0;
	      state.anglePer = 270.0 / max.value;
	      state.angleOffset = 0;
	      // The last spiral ends out near but not quite at the edge of the view box.
	      state.startRadius = Math.max(CIRCLE_RADIUS, SPIRAL_THICKNESS * (series.length + 0.5)) - Math.max(0, series.length - 1) * SPIRAL_THICKNESS;
	    }

	    return state;
	  },

	  getInitialState: function getInitialState() {
	    var state = this._stateFromProps(this.props);
	    state.legendPosition = 'bottom';
	    state.initial = true;
	    return state;
	  },

	  componentDidMount: function componentDidMount() {
	    this._initialTimer = setTimeout(this._initialTimeout, 10);
	    window.addEventListener('resize', this._onResize);
	    this._onResize();
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    var state = this._stateFromProps(newProps);
	    this.setState(state);
	    this._onResize();
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    clearTimeout(this._initialTimer);
	    clearTimeout(this._resizeTimer);
	    window.removeEventListener('resize', this._onResize);
	  },

	  //_itemColorIndex: function (item, index) {
	  //  return item.colorIndex || ('graph-' + (index + 1));
	  //},

	  _translateBarWidth: function _translateBarWidth(value) {
	    return Math.round(this.state.scale * value);
	  },

	  _barCommands: function _barCommands(start, distance) {
	    var commands;
	    if (this.props.vertical) {
	      commands = "M" + MID_BAR_THICKNESS + "," + (BAR_LENGTH - start) + " L" + MID_BAR_THICKNESS + "," + (BAR_LENGTH - (start + distance));
	    } else {
	      commands = "M" + start + "," + MID_BAR_THICKNESS + " L" + (start + distance) + "," + MID_BAR_THICKNESS;
	    }
	    return commands;
	  },

	  _renderBar: function _renderBar(series) {
	    var start = 0;
	    var minRemaining = this.state.min.value;
	    var classes;
	    var commands;

	    var paths = series.map(function (item, index) {
	      classes = [CLASS_ROOT + "__bar"];
	      if (index === this.state.activeIndex) {
	        classes.push(CLASS_ROOT + "__bar--active");
	      }
	      classes.push("color-index-" + item.colorIndex);

	      var value = item.value - minRemaining;
	      minRemaining = Math.max(0, minRemaining - item.value);
	      var distance = this._translateBarWidth(value);
	      commands = this._barCommands(start, distance);
	      start += distance;

	      return React.createElement('path', { key: index, className: classes.join(' '), d: commands,
	        onMouseOver: this._onActivate.bind(this, index),
	        onMouseOut: this._onActivate.bind(this, this.state.importantIndex),
	        onClick: item.onClick });
	    }, this);

	    if (paths.length === 0) {
	      classes = [CLASS_ROOT + "__bar"];
	      classes.push(CLASS_ROOT + "__bar--loading");
	      classes.push("color-index-loading");
	      commands = this._barCommands(0, BAR_LENGTH);
	      paths.push(React.createElement('path', { key: 'loading', className: classes.join(' '), d: commands }));
	    }

	    return paths;
	  },

	  _translateEndAngle: function _translateEndAngle(startAngle, value) {
	    return Math.min(360, Math.max(0, startAngle + this.state.anglePer * value));
	  },

	  _arcCommands: function _arcCommands(startAngle, endAngle) {
	    return arcCommands(CIRCLE_WIDTH / 2, CIRCLE_WIDTH / 2, CIRCLE_RADIUS, startAngle + this.state.angleOffset, endAngle + this.state.angleOffset);
	  },

	  _renderArcOrCircle: function _renderArcOrCircle(series) {
	    var startAngle = this.state.startAngle;
	    var classes;
	    var endAngle;
	    var commands;

	    var paths = series.map(function (item, index) {
	      var classes = [CLASS_ROOT + "__slice"];
	      if (index === this.state.activeIndex) {
	        classes.push(CLASS_ROOT + "__slice--active");
	      }
	      classes.push("color-index-" + item.colorIndex);
	      endAngle = this._translateEndAngle(startAngle, item.value);
	      commands = this._arcCommands(startAngle, endAngle);

	      startAngle = endAngle;

	      return React.createElement('path', { key: item.label || index, fill: 'none',
	        className: classes.join(' '), d: commands,
	        onMouseOver: this._onActivate.bind(this, index),
	        onMouseOut: this._onActivate.bind(this, this.state.importantIndex),
	        onClick: item.onClick });
	    }, this);

	    if (paths.length === 0) {
	      classes = [CLASS_ROOT + "__slice"];
	      classes.push(CLASS_ROOT + "__slice--loading");
	      classes.push("color-index-loading");
	      endAngle = this._translateEndAngle(this.state.startAngle, this.state.max.value);
	      commands = this._arcCommands(this.state.startAngle, endAngle);
	      paths.push(React.createElement('path', { key: 'loading', className: classes.join(' '), d: commands }));
	    }

	    return paths;
	  },

	  _spiralCommands: function _spiralCommands(startAngle, endAngle, radius) {
	    return arcCommands(this.state.viewBoxWidth / 2, this.state.viewBoxHeight / 2, radius, startAngle + this.state.angleOffset, endAngle + this.state.angleOffset);
	  },

	  _renderSpiral: function _renderSpiral(series) {
	    var startAngle = this.state.startAngle;
	    var radius = this.state.startRadius;
	    var classes;
	    var endAngle;
	    var commands;

	    var paths = series.map(function (item, index) {
	      var classes = [CLASS_ROOT + "__slice"];
	      if (index === this.state.activeIndex) {
	        classes.push(CLASS_ROOT + "__slice--active");
	      }
	      classes.push("color-index-" + item.colorIndex);
	      endAngle = this._translateEndAngle(startAngle, item.value);
	      commands = this._spiralCommands(startAngle, endAngle, radius);

	      radius += SPIRAL_THICKNESS;

	      return React.createElement('path', { key: item.label || index, fill: 'none',
	        className: classes.join(' '), d: commands,
	        onMouseOver: this._onActivate.bind(this, index),
	        onMouseOut: this._onActivate.bind(this, this.state.importantIndex),
	        onClick: item.onClick });
	    }, this);

	    if (paths.length === 0) {
	      classes = [CLASS_ROOT + "__slice"];
	      classes.push(CLASS_ROOT + "__slice--loading");
	      classes.push("color-index-loading");
	      endAngle = this._translateEndAngle(this.state.startAngle, this.state.max.value);
	      commands = this._spiralCommands(this.state.startAngle, endAngle, radius);
	      paths.push(React.createElement('path', { key: 'loading', className: classes.join(' '), d: commands }));
	    }

	    return paths;
	  },

	  _renderSingleIndicator: function _renderSingleIndicator(series) {
	    var seriesIndicator = null;
	    var startAngle = this.state.startAngle;
	    series.forEach(function (item, index) {
	      var endAngle = this._translateEndAngle(startAngle, item.value);

	      if (index === this.state.activeIndex) {
	        var length;
	        var x;
	        var y;
	        if ('arc' === this.props.type) {
	          length = CIRCLE_RADIUS;
	          x = CIRCLE_WIDTH / 2;
	          y = CIRCLE_WIDTH / 2;
	        } else {
	          length = CIRCLE_RADIUS * 0.60;
	          x = this.state.viewBoxWidth / 2;
	          y = this.state.viewBoxHeight / 2;
	        }
	        var indicatorCommands = singleIndicatorCommands(x, y, CIRCLE_RADIUS * 1.1, startAngle + this.state.angleOffset, endAngle + this.state.angleOffset, length);
	        seriesIndicator = React.createElement('path', { fill: 'none',
	          className: CLASS_ROOT + "__slice-indicator color-index-" + item.colorIndex,
	          d: indicatorCommands });
	      }

	      startAngle = endAngle;
	    }, this);

	    return seriesIndicator;
	  },

	  _renderActive: function _renderActive() {
	    var fields;
	    if (null === this.state.activeIndex) {
	      fields = { value: this.state.total, label: 'Total' };
	    } else {
	      var active = this.state.series[this.state.activeIndex];
	      fields = { value: active.value, label: active.label };
	    }
	    var units;
	    if (this.props.units) {
	      units = React.createElement(
	        'span',
	        { className: CLASS_ROOT + "__active-units large-number-font" },
	        this.props.units
	      );
	    }
	    return React.createElement(
	      'div',
	      { className: CLASS_ROOT + "__active" },
	      React.createElement(
	        'span',
	        { className: CLASS_ROOT + "__active-value large-number-font" },
	        fields.value,
	        units
	      ),
	      React.createElement(
	        'span',
	        { className: CLASS_ROOT + "__active-label" },
	        fields.label
	      )
	    );
	  },

	  _renderLabels: function _renderLabels(series) {
	    var x = this.state.viewBoxWidth / 2 - SPIRAL_THICKNESS / 2;
	    var y = SPIRAL_THICKNESS * 0.75 + SPIRAL_THICKNESS * (series.length - 1);
	    var labels = series.map(function (item, index) {
	      var classes = [CLASS_ROOT + "__label"];
	      if (index === this.state.activeIndex) {
	        classes.push(CLASS_ROOT + "__label--active");
	      }

	      var textX = x;
	      var textY = y;

	      y -= SPIRAL_THICKNESS;

	      return React.createElement(
	        'text',
	        { key: item.label || index, x: textX, y: textY,
	          textAnchor: 'end', fontSize: 16,
	          className: classes.join(' '),
	          onMouseOver: this._onActivate.bind(this, index),
	          onMouseOut: this._onActivate.bind(this, this.state.importantIndex),
	          onClick: item.onClick },
	        item.label
	      );
	    }, this);

	    return React.createElement(
	      'g',
	      { className: CLASS_ROOT + "__labels" },
	      labels
	    );
	  },

	  _renderLegend: function _renderLegend() {
	    return React.createElement(Legend, { className: CLASS_ROOT + "__legend",
	      series: this.state.series,
	      units: this.props.units,
	      activeIndex: this.state.activeIndex,
	      onActive: this._onActive });
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    classes.push(CLASS_ROOT + "--" + this.props.type);
	    classes.push(CLASS_ROOT + "--legend-" + this.state.legendPosition);
	    if (this.props.vertical) {
	      classes.push(CLASS_ROOT + "--vertical");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.state.series.length === 0) {
	      classes.push(CLASS_ROOT + "--loading");
	    } else if (this.state.series.length === 1) {
	      classes.push(CLASS_ROOT + "--single");
	    }
	    if (this.state.activeIndex !== null) {
	      classes.push(CLASS_ROOT + "--active");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var values;
	    var thresholds;
	    var singleIndicator;
	    var labels;
	    var width;
	    var height;
	    if ('arc' === this.props.type || 'circle' === this.props.type) {
	      values = this._renderArcOrCircle(this.state.series);
	      thresholds = this._renderArcOrCircle(this.state.thresholds);
	      if (this.state.series.length === 1) {
	        singleIndicator = this._renderSingleIndicator(this.state.series);
	      }
	    } else if ('bar' === this.props.type) {
	      values = this._renderBar(this.state.series);
	      thresholds = this._renderBar(this.state.thresholds);
	    } else if ('spiral' === this.props.type) {
	      values = this._renderSpiral(this.state.series);
	      if (this.state.series.length === 1) {
	        singleIndicator = this._renderSingleIndicator(this.state.series);
	      }
	      labels = this._renderLabels(this.state.series);
	      width = this.state.viewBoxWidth;
	      height = this.state.viewBoxHeight;
	    }

	    if (thresholds) {
	      thresholds = React.createElement(
	        'g',
	        { className: CLASS_ROOT + "__thresholds" },
	        thresholds
	      );
	    }

	    var minLabel;
	    if (this.state.min.label) {
	      minLabel = React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__minmax-min" },
	        this.state.min.label
	      );
	    }
	    var maxLabel;
	    if (this.state.max.label) {
	      maxLabel = React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__minmax-max" },
	        this.state.max.label
	      );
	    }
	    var minMax;
	    if (minLabel || maxLabel) {
	      minMax = React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__minmax-container" },
	        React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__minmax" },
	          minLabel,
	          maxLabel
	        )
	      );
	    }

	    var active = this._renderActive();

	    var legend = null;
	    if (this.props.legend) {
	      legend = this._renderLegend();
	    }

	    return React.createElement(
	      'div',
	      { className: classes.join(' ') },
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__active-graphic" },
	        React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__labeled-graphic" },
	          React.createElement(
	            'svg',
	            { className: CLASS_ROOT + "__graphic",
	              viewBox: "0 0 " + this.state.viewBoxWidth + " " + this.state.viewBoxHeight,
	              preserveAspectRatio: 'xMidYMid meet', width: width, height: height },
	            thresholds,
	            React.createElement(
	              'g',
	              { className: CLASS_ROOT + "__values" },
	              values
	            ),
	            labels,
	            singleIndicator
	          ),
	          minMax
	        ),
	        active
	      ),
	      legend
	    );
	  }

	});

	module.exports = Meter;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.
	'use strict';

	var React = __webpack_require__(2);

	var Panel = React.createClass({
	  displayName: 'Panel',

	  propTypes: {
	    direction: React.PropTypes.string,
	    index: React.PropTypes.oneOf([1, 2])
	  },

	  render: function render() {
	    var classes = ["panel"];
	    if (this.props.direction === 'horizontal') {
	      classes.push("panel--horizontal");
	    }
	    if (this.props.index) {
	      classes.push("panel--index-" + this.props.index);
	    }

	    var title = null;
	    if (this.props.title) {
	      title = React.createElement(
	        'h2',
	        { className: 'panel__title' },
	        this.props.title
	      );
	    }

	    return React.createElement(
	      'div',
	      { className: classes.join(' ') },
	      title,
	      this.props.children
	    );
	  }
	});

	module.exports = Panel;

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var CLASS_ROOT = "radio-button";

	var RadioButton = React.createClass({
	  displayName: 'RadioButton',

	  propTypes: {
	    checked: React.PropTypes.bool,
	    defaultChecked: React.PropTypes.bool,
	    id: React.PropTypes.string.isRequired,
	    label: React.PropTypes.string.isRequired,
	    name: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    value: React.PropTypes.string
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    return React.createElement(
	      'label',
	      { className: classes.join(' ') },
	      React.createElement('input', { className: CLASS_ROOT + "__input",
	        id: this.props.id, name: this.props.name, type: 'radio',
	        checked: this.props.checked,
	        defaultChecked: this.props.defaultChecked,
	        value: this.props.value,
	        onChange: this.props.onChange }),
	      React.createElement('span', { className: CLASS_ROOT + "__control" }),
	      React.createElement(
	        'span',
	        { className: CLASS_ROOT + "__label" },
	        this.props.label
	      )
	    );
	  }

	});

	module.exports = RadioButton;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var KeyboardAccelerators = __webpack_require__(8);
	var Drop = __webpack_require__(48);
	var Responsive = __webpack_require__(50);
	var SearchIcon = __webpack_require__(220);
	var IntlMixin = __webpack_require__(54);

	var CLASS_ROOT = "search";

	var Search = React.createClass({
	  displayName: 'Search',

	  propTypes: {
	    defaultValue: React.PropTypes.string,
	    dropAlign: Drop.alignPropType,
	    dropColorIndex: React.PropTypes.string,
	    inline: React.PropTypes.bool,
	    large: React.PropTypes.bool,
	    onChange: React.PropTypes.func,
	    placeHolder: React.PropTypes.string,
	    responsive: React.PropTypes.bool,
	    suggestions: React.PropTypes.arrayOf(React.PropTypes.string),
	    value: React.PropTypes.string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      align: 'left',
	      inline: false,
	      placeHolder: 'Search',
	      dropAlign: { top: 'top', left: 'left' },
	      responsive: true
	    };
	  },

	  mixins: [KeyboardAccelerators, IntlMixin],

	  _onAddDrop: function _onAddDrop(event) {
	    event.preventDefault();
	    this.setState({ dropActive: true, activeSuggestionIndex: -1 });
	  },

	  _onRemoveDrop: function _onRemoveDrop() {
	    this.setState({ dropActive: false });
	  },

	  _onFocusControl: function _onFocusControl() {
	    this.setState({
	      controlFocused: true,
	      dropActive: true,
	      activeSuggestionIndex: -1
	    });
	  },

	  _onBlurControl: function _onBlurControl() {
	    this.setState({ controlFocused: false });
	  },

	  _onFocusInput: function _onFocusInput() {
	    this.refs.input.getDOMNode().select();
	    this.setState({
	      dropActive: !this.state.inline || this.props.suggestions,
	      activeSuggestionIndex: -1
	    });
	  },

	  _onBlurInput: function _onBlurInput() {
	    //this.setState({drop: false});
	  },

	  _onChangeInput: function _onChangeInput(event) {
	    this.setState({ activeSuggestionIndex: -1 });
	    if (this.props.onChange) {
	      this.props.onChange(event.target.value);
	    }
	  },

	  _onNextSuggestion: function _onNextSuggestion() {
	    var index = this.state.activeSuggestionIndex;
	    index = Math.min(index + 1, this.props.suggestions.length - 1);
	    this.setState({ activeSuggestionIndex: index });
	  },

	  _onPreviousSuggestion: function _onPreviousSuggestion() {
	    var index = this.state.activeSuggestionIndex;
	    index = Math.max(index - 1, 0);
	    this.setState({ activeSuggestionIndex: index });
	  },

	  _onEnter: function _onEnter() {
	    if (this.state.activeSuggestionIndex >= 0) {
	      var text = this.props.suggestions[this.state.activeSuggestionIndex];
	      if (this.props.onChange) {
	        this.props.onChange(text);
	      }
	    }
	    this._onRemoveDrop();
	  },

	  _onClickSuggestion: function _onClickSuggestion(item) {
	    if (this.props.onChange) {
	      this.props.onChange(item);
	    }
	    this._onRemoveDrop();
	  },

	  _onSink: function _onSink(event) {
	    event.stopPropagation();
	    event.nativeEvent.stopImmediatePropagation();
	  },

	  _onResponsive: function _onResponsive(small) {
	    if (small) {
	      this.setState({ inline: false });
	    } else {
	      this.setState({ inline: this.props.inline });
	    }
	  },

	  getInitialState: function getInitialState() {
	    return {
	      align: 'left',
	      controlFocused: false,
	      inline: this.props.inline,
	      dropActive: false,
	      activeSuggestionIndex: -1
	    };
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.props.inline && this.props.responsive) {
	      this._responsive = Responsive.start(this._onResponsive);
	    }
	  },

	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {

	    // Set up keyboard listeners appropriate to the current state.

	    var activeKeyboardHandlers = {
	      esc: this._onRemoveDrop,
	      tab: this._onRemoveDrop,
	      up: this._onPreviousSuggestion,
	      down: this._onNextSuggestion,
	      enter: this._onEnter
	    };
	    var focusedKeyboardHandlers = {
	      space: this._onAddDrop
	    };

	    // the order here is important, need to turn off keys before turning on

	    if (!this.state.controlFocused && prevState.controlFocused) {
	      this.stopListeningToKeyboard(focusedKeyboardHandlers);
	    }

	    if (!this.state.dropActive && prevState.dropActive) {
	      document.removeEventListener('click', this._onRemoveDrop);
	      this.stopListeningToKeyboard(activeKeyboardHandlers);
	      if (this._drop) {
	        this._drop.remove();
	        this._drop = null;
	      }
	    }

	    if (this.state.controlFocused && !prevState.controlFocused) {
	      this.startListeningToKeyboard(focusedKeyboardHandlers);
	    }

	    if (this.state.dropActive && !prevState.dropActive) {
	      document.addEventListener('click', this._onRemoveDrop);
	      this.startListeningToKeyboard(activeKeyboardHandlers);

	      var baseElement = (this.refs.control ? this.refs.control : this.refs.input).getDOMNode();
	      this._drop = Drop.add(baseElement, this._renderDrop(), this.props.dropAlign);

	      document.getElementById('search-drop-input').focus();
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    document.removeEventListener('click', this._onRemoveDrop);
	    if (this._responsive) {
	      this._responsive.stop();
	    }
	  },

	  focus: function focus() {
	    var ref = this.refs.input || this.refs.control;
	    if (ref) {
	      ref.getDOMNode().focus();
	    }
	  },

	  _createControl: function _createControl() {
	    var controlClassName = CLASS_ROOT + "__control";
	    return React.createElement(
	      'div',
	      { className: controlClassName },
	      React.createElement(SearchIcon, null)
	    );
	  },

	  _classes: function _classes(prefix) {
	    var classes = [prefix];

	    if (this.state.inline) {
	      classes.push(prefix + "--inline");
	    } else {
	      classes.push(prefix + "--controlled");
	    }

	    return classes;
	  },

	  _renderDrop: function _renderDrop() {
	    var classes = this._classes(CLASS_ROOT + "__drop");
	    if (this.props.dropColorIndex) {
	      classes.push("background-color-index-" + this.props.dropColorIndex);
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "__drop--large");
	    }

	    var suggestions = null;
	    if (this.props.suggestions) {
	      suggestions = this.props.suggestions.map(function (item, index) {
	        var classes = [CLASS_ROOT + "__suggestion"];
	        if (index === this.state.activeSuggestionIndex) {
	          classes.push(CLASS_ROOT + "__suggestion--active");
	        }
	        return React.createElement(
	          'div',
	          { key: item,
	            className: classes.join(' '),
	            onClick: this._onClickSuggestion.bind(this, item) },
	          item
	        );
	      }, this);
	    }

	    var contents = React.createElement(
	      'div',
	      { className: CLASS_ROOT + "__drop-contents", onClick: this._onSink },
	      React.createElement('input', { id: 'search-drop-input', type: 'search',
	        defaultValue: this.props.defaultValue,
	        value: this.props.value,
	        className: CLASS_ROOT + "__input",
	        onChange: this._onChangeInput }),
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__suggestions" },
	        suggestions
	      )
	    );

	    if (!this.state.inline) {
	      var control = this._createControl();
	      var rightAlign = !this.props.dropAlign.left;
	      var first = rightAlign ? contents : control;
	      var second = rightAlign ? control : contents;

	      contents = React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__drop-header" },
	        first,
	        second
	      );
	    }

	    return React.createElement(
	      'div',
	      { id: 'search-drop', className: classes.join(' ') },
	      contents
	    );
	  },

	  render: function render() {

	    var classes = this._classes(CLASS_ROOT);
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    if (this.state.inline) {

	      var readOnly = this.props.suggestions ? true : false;

	      return React.createElement(
	        'div',
	        { className: classes.join(' ') },
	        React.createElement('input', { ref: 'input', type: 'search',
	          placeholder: this.getGrommetIntlMessage(this.props.placeHolder),
	          defaultValue: this.props.defaultValue,
	          value: this.props.value,
	          className: CLASS_ROOT + "__input",
	          readOnly: readOnly,
	          onFocus: this._onFocusInput,
	          onBlur: this._onBlurInput,
	          onChange: this._onChangeInput })
	      );
	    } else {

	      var controlContents = this._createControl();

	      return React.createElement(
	        'div',
	        { ref: 'control', className: classes.join(' '),
	          tabIndex: '0',
	          onClick: this._onAddDrop,
	          onFocus: this._onFocusControl,
	          onBlur: this._onBlurControl },
	        controlContents
	      );
	    }
	  }

	});

	module.exports = Search;

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Search = React.createClass({
	  displayName: 'Search',

	  render: function render() {
	    var className = 'control-icon control-icon-search';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('circle', { strokeWidth: '2', cx: '21.5', cy: '21.5', r: '9' }),
	        React.createElement('line', { strokeWidth: '2', x1: '35.5', y1: '35.5', x2: '27.8', y2: '27.8' })
	      )
	    );
	  }

	});

	module.exports = Search;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var KeyboardAccelerators = __webpack_require__(8);
	var Drop = __webpack_require__(48);
	var SearchIcon = __webpack_require__(220);

	var CLASS_ROOT = "search-input";

	var SearchInput = React.createClass({
	  displayName: 'SearchInput',

	  propTypes: {
	    defaultValue: React.PropTypes.oneOfType([React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.string
	    }), React.PropTypes.string]),
	    id: React.PropTypes.string,
	    name: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    placeHolder: React.PropTypes.string,
	    suggestions: React.PropTypes.arrayOf(React.PropTypes.oneOfType([React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.string
	    }), React.PropTypes.string])),
	    value: React.PropTypes.oneOfType([React.PropTypes.shape({
	      label: React.PropTypes.string,
	      value: React.PropTypes.string
	    }), React.PropTypes.string])
	  },

	  mixins: [KeyboardAccelerators],

	  _onInputChange: function _onInputChange(event) {
	    this.setState({ dropActive: true, activeSuggestionIndex: -1 });
	    this.props.onChange(event.target.value, false);
	  },

	  _onAddDrop: function _onAddDrop(event) {
	    event.preventDefault();
	    this.setState({ dropActive: true, activeSuggestionIndex: -1 });
	  },

	  _onRemoveDrop: function _onRemoveDrop() {
	    this.setState({ dropActive: false });
	  },

	  _onNextSuggestion: function _onNextSuggestion() {
	    var index = this.state.activeSuggestionIndex;
	    index = Math.min(index + 1, this.props.suggestions.length - 1);
	    this.setState({ activeSuggestionIndex: index });
	  },

	  _onPreviousSuggestion: function _onPreviousSuggestion() {
	    var index = this.state.activeSuggestionIndex;
	    index = Math.max(index - 1, 0);
	    this.setState({ activeSuggestionIndex: index });
	  },

	  _onEnter: function _onEnter() {
	    this.setState({ dropActive: false });
	    if (this.state.activeSuggestionIndex >= 0) {
	      var suggestion = this.props.suggestions[this.state.activeSuggestionIndex];
	      this.setState({ value: suggestion });
	      this.props.onChange(suggestion, true);
	    }
	  },

	  _onClickSuggestion: function _onClickSuggestion(suggestion) {
	    this.setState({ value: suggestion, dropActive: false });
	    this.props.onChange(suggestion, true);
	  },

	  _onFocus: function _onFocus() {
	    this.refs.input.getDOMNode().select();
	    this.setState({
	      focused: true,
	      dropActive: false,
	      activeSuggestionIndex: -1
	    });
	  },

	  getInitialState: function getInitialState() {
	    return {
	      dropActive: false,
	      defaultValue: this.props.defaultValue,
	      value: this.props.value,
	      activeSuggestionIndex: -1
	    };
	  },

	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    // Set up keyboard listeners appropriate to the current state.

	    var activeKeyboardHandlers = {
	      esc: this._onRemoveDrop,
	      tab: this._onRemoveDrop,
	      up: this._onPreviousSuggestion,
	      down: this._onNextSuggestion,
	      enter: this._onEnter
	    };
	    var focusedKeyboardHandlers = {
	      down: this._onAddDrop
	    };

	    // the order here is important, need to turn off keys before turning on

	    if (!this.state.focused && prevState.focused) {
	      this.stopListeningToKeyboard(focusedKeyboardHandlers);
	    }

	    if (!this.state.dropActive && prevState.dropActive) {
	      document.removeEventListener('click', this._onRemoveDrop);
	      this.stopListeningToKeyboard(activeKeyboardHandlers);
	      if (this._drop) {
	        this._drop.remove();
	        this._drop = null;
	      }
	    }

	    if (this.state.focused && !prevState.focused) {
	      this.startListeningToKeyboard(focusedKeyboardHandlers);
	    }

	    if (this.state.dropActive && !prevState.dropActive) {
	      document.addEventListener('click', this._onRemoveDrop);
	      this.startListeningToKeyboard(activeKeyboardHandlers);

	      this._drop = Drop.add(this.refs.component.getDOMNode(), this._renderDrop(), { top: 'bottom', left: 'left' });
	    } else if (this.state.dropActive && prevState.dropActive) {
	      this._drop.render(this._renderDrop());
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    document.removeEventListener('click', this._onRemoveDrop);
	  },

	  _valueText: function _valueText(value) {
	    var text = '';
	    if (value) {
	      if ('string' === typeof value) {
	        text = value;
	      } else {
	        text = value.label || value.value;
	      }
	    }
	    return text;
	  },

	  _renderDrop: function _renderDrop() {
	    var suggestions = null;
	    if (this.props.suggestions) {
	      suggestions = this.props.suggestions.map(function (suggestion, index) {
	        var classes = [CLASS_ROOT + "__suggestion"];
	        if (index === this.state.activeSuggestionIndex) {
	          classes.push(CLASS_ROOT + "__suggestion--active");
	        }
	        return React.createElement(
	          'li',
	          { key: this._valueText(suggestion),
	            className: classes.join(' '),
	            onClick: this._onClickSuggestion.bind(this, suggestion) },
	          this._valueText(suggestion)
	        );
	      }, this);
	    }

	    return React.createElement(
	      'ol',
	      { className: CLASS_ROOT + "__suggestions", onClick: this._onRemoveDrop },
	      suggestions
	    );
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.state.active) {
	      classes.push(CLASS_ROOT + "--active");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      'div',
	      { ref: 'component', className: classes.join(' ') },
	      React.createElement('input', { ref: 'input', className: CLASS_ROOT + "__input",
	        id: this.props.id, name: this.props.name,
	        value: this._valueText(this.props.value),
	        defaultValue: this._valueText(this.props.defaultValue),
	        placeholder: this.props.placeHolder,
	        onChange: this._onInputChange,
	        onFocus: this._onFocus }),
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__control", onClick: this._onAddDrop },
	        React.createElement(SearchIcon, null)
	      )
	    );
	  }

	});

	module.exports = SearchInput;

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var Box = __webpack_require__(51);
	var SkipLinkAnchor = __webpack_require__(100);
	var merge = __webpack_require__(10);

	var CLASS_ROOT = "section";

	var Section = React.createClass({
	  displayName: 'Section',

	  propTypes: merge(Box.propTypes, {
	    primary: React.PropTypes.bool
	  }),

	  getDefaultProps: function getDefaultProps() {
	    return { pad: { vertical: 'medium' } };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var skipLinkAnchor = null;
	    if (this.props.primary) {
	      skipLinkAnchor = React.createElement(SkipLinkAnchor, { label: 'Main Content' });
	    }

	    return React.createElement(
	      Box,
	      _extends({ tag: 'section' }, this.props, { className: classes.join(' ') }),
	      skipLinkAnchor,
	      this.props.children
	    );
	  }

	});

	module.exports = Section;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	"use strict";

	var React = __webpack_require__(2);

	var CLASS_ROOT = "sidebar";

	var Sidebar = React.createClass({
	  displayName: "Sidebar",

	  propTypes: {
	    colorIndex: React.PropTypes.string,
	    fixed: React.PropTypes.bool,
	    primary: React.PropTypes.bool,
	    small: React.PropTypes.bool
	  },

	  getDefaultProps: function getDefaultProps() {
	    return { primary: false };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.primary) {
	      classes.push(CLASS_ROOT + "--primary");
	    }
	    if (this.props.fixed) {
	      classes.push(CLASS_ROOT + "--fixed");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      "div",
	      { className: classes.join(' ') },
	      this.props.children
	    );
	  }

	});

	module.exports = Sidebar;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var CLASS_ROOT = "split";

	var Split = React.createClass({
	  displayName: 'Split',

	  propTypes: {
	    fixed: React.PropTypes.bool,
	    flex: React.PropTypes.oneOf(['left', 'right', 'both']),
	    separator: React.PropTypes.bool,
	    stack: React.PropTypes.oneOf(['left', 'right'])
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      fixed: true,
	      flex: 'both'
	    };
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._resizeTimer);
	    this._resizeTimer = setTimeout(this._layout, 50);
	  },

	  _setResponsive: function _setResponsive(responsive) {
	    if (this.state.responsive !== responsive) {
	      this.setState({ responsive: responsive });
	      if (this.props.onResponsive) {
	        this.props.onResponsive(responsive);
	      }
	    }
	  },

	  _layout: function _layout() {
	    var splitElement = this.refs.split.getDOMNode();
	    if (splitElement.offsetWidth < 600) {
	      this._setResponsive('single');
	    } else {
	      this._setResponsive('multiple');
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { responsive: null };
	  },

	  componentDidMount: function componentDidMount() {
	    window.addEventListener('resize', this._onResize);
	    this._layout();
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    window.removeEventListener('resize', this._onResize);
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.flex) {
	      classes.push(CLASS_ROOT + "--flex-" + this.props.flex);
	    }
	    if (this.props.fixed) {
	      classes.push(CLASS_ROOT + "--fixed");
	    }
	    if (this.props.separator) {
	      classes.push(CLASS_ROOT + "--separator");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      'div',
	      { ref: 'split', className: classes.join(' ') },
	      this.props.children
	    );
	  }
	});

	module.exports = Split;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var SpinningIcon = __webpack_require__(211);
	var InfiniteScroll = __webpack_require__(212);

	var CLASS_ROOT = "table";

	var Table = React.createClass({
	  displayName: 'Table',

	  propTypes: {
	    selection: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.arrayOf(React.PropTypes.number)]),
	    onMore: React.PropTypes.func,
	    scrollable: React.PropTypes.bool,
	    selectable: React.PropTypes.bool,
	    onSelect: React.PropTypes.func
	  },

	  mixins: [InfiniteScroll],

	  getDefaultProps: function getDefaultProps() {
	    return {
	      selection: null,
	      scrollable: false,
	      selectable: false,
	      onSelect: null
	    };
	  },

	  _clearSelection: function _clearSelection() {
	    var rows = this.refs.table.getDOMNode().querySelectorAll("." + CLASS_ROOT + "__row--selected");
	    for (var i = 0; i < rows.length; i++) {
	      rows[i].classList.remove(CLASS_ROOT + "__row--selected");
	    }
	  },

	  _markSelection: function _markSelection() {
	    this._clearSelection();
	    if (null !== this.state.selection) {
	      var tbody = this.refs.table.getDOMNode().querySelectorAll('tbody')[0];
	      var selection = this.state.selection;
	      if (typeof selection === 'number') {
	        selection = [selection];
	      }
	      selection.forEach(function (rowIndex) {
	        tbody.childNodes[rowIndex].classList.add(CLASS_ROOT + "__row--selected");
	      });
	    }
	  },

	  _onClick: function _onClick(event) {
	    if (!this.props.selectable) {
	      return;
	    }

	    var element = event.target;
	    while (element.nodeName !== 'TR') {
	      element = element.parentNode;
	    }

	    var parentElement = element.parentNode;
	    if (element && parentElement.nodeName === 'TBODY') {
	      this._clearSelection();
	      element.classList.add(CLASS_ROOT + "__row--selected");
	      if (this.props.onSelect) {
	        var idx;
	        for (idx = 0; idx < parentElement.childNodes.length; idx++) {
	          if (parentElement.childNodes[idx] === element) {
	            break;
	          }
	        }
	        this.props.onSelect(idx);
	      }
	    }
	  },

	  _onResize: function _onResize() {
	    this._alignMirror();
	  },

	  _buildMirror: function _buildMirror() {
	    var tableElement = this.refs.table.getDOMNode();
	    var cells = tableElement.querySelectorAll('thead tr th');
	    var mirrorElement = this.refs.mirror.getDOMNode();
	    var mirrorRow = mirrorElement.querySelectorAll('thead tr')[0];
	    for (var i = 0; i < cells.length; i++) {
	      mirrorRow.appendChild(cells[i].cloneNode(true));
	    }
	  },

	  _alignMirror: function _alignMirror() {
	    if (this.refs.mirror) {
	      var tableElement = this.refs.table.getDOMNode();
	      var cells = tableElement.querySelectorAll('thead tr th');
	      var mirrorElement = this.refs.mirror.getDOMNode();
	      var mirrorCells = mirrorElement.querySelectorAll('thead tr th');

	      var rect = tableElement.getBoundingClientRect();
	      mirrorElement.style.width = '' + Math.floor(rect.right - rect.left) + 'px';

	      var height = 0;
	      for (var i = 0; i < cells.length; i++) {
	        rect = cells[i].getBoundingClientRect();
	        mirrorCells[i].style.width = '' + Math.floor(rect.right - rect.left) + 'px';
	        mirrorCells[i].style.height = '' + Math.floor(rect.bottom - rect.top) + 'px';
	        height = Math.max(height, Math.floor(rect.bottom - rect.top));
	      }
	      mirrorElement.style.height = '' + height + 'px';
	    }
	  },

	  getInitialState: function getInitialState() {
	    return { selection: this.props.selection };
	  },

	  componentDidMount: function componentDidMount() {
	    this._markSelection();
	    if (this.props.scrollable) {
	      this._buildMirror();
	      this._alignMirror();
	    }
	    if (this.props.onMore) {
	      this.startListeningForScroll(this.refs.more.getDOMNode(), this.props.onMore);
	    }
	    window.addEventListener('resize', this._onResize);
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    if (newProps.hasOwnProperty('selection')) {
	      this.setState({ selection: newProps.selection });
	    }
	  },

	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    if (this.state.selection !== prevState.selection) {
	      this._markSelection();
	    }
	    if (this.props.scrollable) {
	      this._alignMirror();
	    }
	    this.stopListeningForScroll();
	    if (this.props.onMore) {
	      this.startListeningForScroll(this.refs.more.getDOMNode(), this.props.onMore);
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this.props.onMore) {
	      this.stopListeningForScroll();
	    }
	    window.removeEventListener('resize', this._onResize);
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.selectable) {
	      classes.push(CLASS_ROOT + "--selectable");
	    }
	    if (this.props.scrollable) {
	      classes.push(CLASS_ROOT + "--scrollable");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var mirror = null;
	    if (this.props.scrollable) {
	      mirror = React.createElement(
	        'table',
	        { ref: 'mirror', className: CLASS_ROOT + "__mirror" },
	        React.createElement(
	          'thead',
	          null,
	          React.createElement('tr', null)
	        )
	      );
	    }

	    var more = null;
	    if (this.props.onMore) {
	      more = React.createElement(
	        'div',
	        { ref: 'more', className: CLASS_ROOT + "__more" },
	        React.createElement(SpinningIcon, null)
	      );
	    }

	    return React.createElement(
	      'div',
	      { ref: 'container', className: classes.join(' ') },
	      mirror,
	      React.createElement(
	        'table',
	        { ref: 'table', className: CLASS_ROOT + "__table", onClick: this._onClick },
	        this.props.children
	      ),
	      more
	    );
	  }

	});

	module.exports = Table;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var SpinningIcon = __webpack_require__(211);
	var LeftIcon = __webpack_require__(192);
	var RightIcon = __webpack_require__(3);
	var Scroll = __webpack_require__(99);
	var InfiniteScroll = __webpack_require__(212);

	var CLASS_ROOT = "tiles";

	var Tiles = React.createClass({
	  displayName: 'Tiles',

	  propTypes: {
	    direction: React.PropTypes.oneOf(['row', 'column']),
	    fill: React.PropTypes.bool,
	    flush: React.PropTypes.bool,
	    onMore: React.PropTypes.func,
	    small: React.PropTypes.bool
	  },

	  mixins: [InfiniteScroll],

	  getDefaultProps: function getDefaultProps() {
	    return {
	      flush: true,
	      fill: false,
	      small: false
	    };
	  },

	  _onLeft: function _onLeft() {
	    var tiles = this.refs.tiles.getDOMNode();
	    Scroll.scrollBy(tiles, 'scrollLeft', -tiles.offsetWidth);
	  },

	  _onRight: function _onRight() {
	    var tiles = this.refs.tiles.getDOMNode();
	    Scroll.scrollBy(tiles, 'scrollLeft', tiles.offsetWidth);
	  },

	  _onScrollHorizontal: function _onScrollHorizontal() {
	    // debounce
	    clearTimeout(this._scrollTimer);
	    this._scrollTimer = setTimeout(this._layout, 50);
	  },

	  _onWheel: function _onWheel(event) {
	    if (Math.abs(event.deltaX) > 100) {
	      clearInterval(this._scrollTimer);
	    } else if (event.deltaX > 5) {
	      this._onRight();
	    } else if (event.deltaX < -5) {
	      this._onLeft();
	    }
	  },

	  _layout: function _layout() {
	    if ('row' === this.props.direction) {
	      // determine if we have more tiles than room to fit
	      var tiles = this.refs.tiles.getDOMNode();
	      // 20 is to allow some fuzziness as scrollbars come and go
	      this.setState({
	        overflow: tiles.scrollWidth > tiles.offsetWidth + 20,
	        overflowStart: tiles.scrollLeft <= 20,
	        overflowEnd: tiles.scrollLeft >= tiles.scrollWidth - tiles.offsetWidth
	      });

	      // mark any tiles that might be clipped
	      var rect = tiles.getBoundingClientRect();
	      var children = tiles.querySelectorAll('.tile');
	      for (var i = 0; i < children.length; i += 1) {
	        var child = children[i];
	        var childRect = child.getBoundingClientRect();
	        // 12 accounts for padding
	        if (childRect.left + 12 < rect.left || childRect.right - 12 > rect.right) {
	          child.classList.add('tile--eclipsed');
	        } else {
	          child.classList.remove('tile--eclipsed');
	        }
	      }
	    }
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._resizeTimer);
	    this._resizeTimer = setTimeout(this._layout, 50);
	  },

	  getInitialState: function getInitialState() {
	    return { overflow: false };
	  },

	  _trackHorizontalScroll: function _trackHorizontalScroll() {
	    if (this.state.overflow && !this._tracking) {
	      var tiles = this.refs.tiles.getDOMNode();
	      tiles.addEventListener('scroll', this._onScrollHorizontal);
	      this._tracking = true;
	    }
	  },

	  componentDidMount: function componentDidMount() {
	    if (this.props.onMore) {
	      this.startListeningForScroll(this.refs.more.getDOMNode(), this.props.onMore);
	    }
	    if ('row' === this.props.direction) {
	      window.addEventListener('resize', this._onResize);
	      document.addEventListener('wheel', this._onWheel);
	      this._trackHorizontalScroll();
	      this._layout();
	    }
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    this.stopListeningForScroll();
	    if (this.props.onMore) {
	      this.startListeningForScroll(this.refs.more.getDOMNode(), this.props.onMore);
	    }
	    if ('row' === this.props.direction) {
	      this._trackHorizontalScroll();
	    }
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this.props.onMore) {
	      this.stopListeningForScroll();
	    }
	    if ('row' === this.props.direction) {
	      window.removeEventListener('resize', this._onResize);
	      document.removeEventListener('wheel', this._onWheel);
	      if (this._tracking) {
	        var tiles = this.refs.tiles.getDOMNode();
	        tiles.removeEventListener('scroll', this._onScrollHorizontal);
	      }
	    }
	  },

	  // children should be an array of Tile
	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.fill) {
	      classes.push(CLASS_ROOT + "--fill");
	    }
	    if (this.props.flush) {
	      classes.push(CLASS_ROOT + "--flush");
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.direction) {
	      classes.push(CLASS_ROOT + "--direction-" + this.props.direction);
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var more = null;
	    if (this.props.onMore) {
	      classes.push(CLASS_ROOT + "--moreable");
	      more = React.createElement(
	        'div',
	        { ref: 'more', className: CLASS_ROOT + "__more" },
	        React.createElement(SpinningIcon, null)
	      );
	    }

	    var contents = React.createElement(
	      'div',
	      { ref: 'tiles', className: classes.join(' ') },
	      this.props.children,
	      more
	    );

	    if (this.state.overflow) {
	      classes.push(CLASS_ROOT + "--overflowed");
	      if (!this.state.overflowStart) {
	        var left = React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__left", onClick: this._onLeft },
	          React.createElement(LeftIcon, null)
	        );
	      }
	      if (!this.state.overflowEnd) {
	        var right = React.createElement(
	          'div',
	          { className: CLASS_ROOT + "__right", onClick: this._onRight },
	          React.createElement(RightIcon, null)
	        );
	      }

	      contents = React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__container" },
	        left,
	        contents,
	        right
	      );
	    }

	    return contents;
	  }

	});

	module.exports = Tiles;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var React = __webpack_require__(2);
	var merge = __webpack_require__(10);
	var pick = __webpack_require__(43);
	var keys = __webpack_require__(36);
	var Box = __webpack_require__(51);

	var CLASS_ROOT = "tile";

	var Tile = React.createClass({
	  displayName: 'Tile',

	  propTypes: merge({
	    selected: React.PropTypes.bool,
	    status: React.PropTypes.string,
	    wide: React.PropTypes.bool
	  }, Box.propTypes),

	  getDefaultProps: function getDefaultProps() {
	    return {
	      pad: 'none',
	      direction: 'column',
	      align: 'center'
	    };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    var other = pick(this.props, keys(Box.propTypes));
	    if (this.props.status) {
	      classes.push(CLASS_ROOT + "--status-" + this.props.status.toLowerCase());
	    }
	    if (this.props.wide) {
	      classes.push(CLASS_ROOT + "--wide");
	    }
	    if (this.props.onClick) {
	      classes.push(CLASS_ROOT + "--selectable");
	    }
	    if (this.props.selected) {
	      classes.push(CLASS_ROOT + "--selected");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    return React.createElement(
	      Box,
	      _extends({ className: classes.join(' ') }, other, { onClick: this.props.onClick }),
	      this.props.children
	    );
	  }

	});

	module.exports = Tile;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var Status = __webpack_require__(229);

	var CLASS_ROOT = "topology";

	var Label = React.createClass({
	  displayName: 'Label',

	  render: function render() {
	    return React.createElement(
	      'span',
	      { className: CLASS_ROOT + "__label" },
	      this.props.children
	    );
	  }
	});

	var Part = React.createClass({
	  displayName: 'Part',

	  propTypes: {
	    align: React.PropTypes.oneOf(['start', 'center', 'between', 'end', 'stretch']),
	    demarcate: React.PropTypes.bool,
	    direction: React.PropTypes.oneOf(['row', 'column']).isRequired,
	    id: React.PropTypes.string,
	    justify: React.PropTypes.oneOf(['start', 'center', 'between', 'end']),
	    label: React.PropTypes.string,
	    reverse: React.PropTypes.bool,
	    status: React.PropTypes.string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      demarcate: true,
	      direction: 'row',
	      justify: 'center',
	      align: 'stretch'
	    };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT + "__part"];
	    classes.push(CLASS_ROOT + "__part--direction-" + this.props.direction);
	    classes.push(CLASS_ROOT + "__part--justify-" + this.props.justify);
	    classes.push(CLASS_ROOT + "__part--align-" + this.props.align);
	    if (this.props.demarcate) {
	      classes.push(CLASS_ROOT + "__part--demarcate");
	    }
	    if (this.props.reverse) {
	      classes.push(CLASS_ROOT + "__part--reverse");
	    }
	    // handle undefined children
	    var realChildren = 0;
	    React.Children.forEach(this.props.children, function (child) {
	      if (child) {
	        realChildren += 1;
	      }
	    });
	    if (!this.props.status && !this.props.label && realChildren === 0) {
	      classes.push(CLASS_ROOT + "__part--empty");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var status;
	    if (this.props.status) {
	      status = React.createElement(Status, { value: this.props.status, small: true });
	    }
	    var label;
	    if (this.props.label) {
	      label = React.createElement(
	        Label,
	        null,
	        this.props.label
	      );
	    }

	    return React.createElement(
	      'div',
	      { className: classes.join(' '), id: this.props.id,
	        onMouseEnter: this.props.onMouseEnter,
	        onMouseLeave: this.props.onMouseLeave },
	      status,
	      label,
	      this.props.children
	    );
	  }
	});

	var Parts = React.createClass({
	  displayName: 'Parts',

	  propTypes: {
	    direction: React.PropTypes.oneOf(['row', 'column']).isRequired,
	    uniform: React.PropTypes.bool
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      direction: 'column'
	    };
	  },

	  _makeUniform: function _makeUniform() {
	    if (this.props.uniform) {
	      var parts = this.refs.component.getDOMNode().children;
	      // clear old basis
	      for (var i = 0; i < parts.length; i += 1) {
	        parts[i].style.webkitFlexBasis = null;
	        parts[i].style.flexBasis = null;
	      }
	      // find max
	      var max = 0;
	      for (var i = 0; i < parts.length; i += 1) {
	        if ('column' === this.props.direction) {
	          max = Math.max(max, parts[i].offsetHeight);
	        } else {
	          max = Math.max(max, parts[i].offsetWidth);
	        }
	      }
	      // set basis
	      for (var i = 0; i < parts.length; i += 1) {
	        parts[i].style.webkitFlexBasis = '' + max + 'px';
	        parts[i].style.flexBasis = '' + max + 'px';
	      }
	    }
	  },

	  componentDidMount: function componentDidMount() {
	    this._makeUniform();
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    this._makeUniform();
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT + "__parts"];
	    classes.push(CLASS_ROOT + "__parts--direction-" + this.props.direction);
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    return React.createElement(
	      'div',
	      { ref: 'component', className: classes.join(' ') },
	      this.props.children
	    );
	  }
	});

	var Topology = React.createClass({
	  displayName: 'Topology',

	  statics: {
	    Parts: Parts,
	    Part: Part,
	    Label: Label
	  },

	  propTypes: {
	    links: React.PropTypes.arrayOf(React.PropTypes.shape({
	      colorIndex: React.PropTypes.string,
	      ids: React.PropTypes.arrayOf(React.PropTypes.string).isRequired
	    })),
	    linkOffset: React.PropTypes.number
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      links: [],
	      linkOffset: 18
	    };
	  },

	  _coords: function _coords(id, canvasRect) {
	    var result;
	    var element = document.getElementById(id);
	    if (!element) {
	      console.log('!!! Topology is unable to find the link target with id:', id);
	      result = [0, 0];
	    } else {
	      var rect = element.getBoundingClientRect();
	      // see if the element has a status child, use that if it does
	      var statusElements = element.querySelectorAll('.status-icon');
	      if (statusElements.length === 1) {
	        rect = statusElements[0].getBoundingClientRect();
	      }
	      result = [rect.left - canvasRect.left + rect.width / 2, rect.top - canvasRect.top + rect.height / 2];
	    }
	    return result;
	  },

	  _draw: function _draw() {
	    var canvasElement = this.refs.canvas.getDOMNode();
	    // don't draw if we don't have a canvas to draw on, such as a unit test
	    if (canvasElement.getContext) {
	      var context = canvasElement.getContext('2d');
	      var canvasRect = canvasElement.getBoundingClientRect();
	      context.clearRect(0, 0, canvasRect.width, canvasRect.height);
	      var linkOffset = this.props.linkOffset;

	      this.props.links.forEach(function (link, linkIndex) {

	        var key = this.refs[link.colorIndex];
	        var style = window.getComputedStyle(React.findDOMNode(key));
	        var color = style.getPropertyValue('background-color');
	        context.strokeStyle = color;
	        context.lineWidth = 2;
	        if (this.state.highlighting) {
	          context.lineWidth = 1;
	        }
	        context.lineCap = 'round';
	        var p1 = this._coords(link.ids[0], canvasRect);
	        if (this.state.highlights[link.ids[0]]) {
	          context.lineWidth = 4;
	        }

	        link.ids.forEach(function (id, idIndex) {
	          if (idIndex > 0) {
	            var p2 = this._coords(id, canvasRect);
	            var delta = [Math.abs(p1[0] - p2[0]), Math.abs(p1[1] - p2[1])];
	            context.beginPath();
	            context.moveTo(p1[0], p1[1]);
	            var cp1 = undefined;
	            var cp2 = undefined;

	            if (this.state.highlights[id]) {
	              context.lineWidth = 4;
	            }

	            if (delta[0] > delta[1]) {
	              // larger X delta
	              cp1 = [p1[0], Math.min(p1[1], p2[1]) + Math.max(linkOffset, delta[1] / 2) + linkIndex * 2];
	              cp2 = [p2[0], cp1[1]];
	            } else {
	              // larger Y delta or equal
	              var cp1xDelta = Math.max(linkOffset, delta[0] / 2 + linkIndex * 2);
	              if (p1[0] > p2[0]) {
	                cp1 = [p2[0] + cp1xDelta, p1[1]];
	              } else {
	                cp1 = [p1[0] - cp1xDelta, p1[1]];
	              }
	              cp2 = [cp1[0], p2[1]];
	            }

	            context.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p2[0], p2[1]);
	            context.stroke();
	          }
	        }, this);
	      }, this);
	    }
	  },

	  _layout: function _layout() {
	    var element = this.refs.contents.getDOMNode();
	    if (element.scrollWidth !== this.state.canvasWidth || element.scrollHeight !== this.state.canvasHeight) {
	      this.setState({
	        canvasWidth: element.scrollWidth,
	        canvasHeight: element.scrollHeight
	      });
	    }
	  },

	  _onResize: function _onResize() {
	    // debounce
	    clearTimeout(this._resizeTimer);
	    this._resizeTimer = setTimeout(this._layout, 50);
	  },

	  _highlight: function _highlight(element) {
	    var topology = React.findDOMNode(this.refs.topology);
	    var highlighting = false;
	    var highlights = {};
	    while (element && element !== topology) {
	      var id = element.getAttribute('id');
	      if (id && this.state.linkIds[id]) {
	        // see if we are linking to this id
	        highlighting = true;
	        highlights[id] = true;
	      }
	      element = element.parentNode;
	    }
	    this.setState({ highlighting: highlighting, highlights: highlights });
	  },

	  _onMouseMove: function _onMouseMove(event) {
	    // debounce
	    clearTimeout(this._mouseMoveTimer);
	    this._mouseMoveTimer = setTimeout(this._highlight.bind(this, event.target), 100);
	  },

	  _onMouseLeave: function _onMouseLeave() {
	    this.setState({ highlights: {} });
	  },

	  _cacheLinkIds: function _cacheLinkIds(links) {
	    // Remember which ids are used in links. This makes highlighting faster.
	    var linkIds = {};
	    links.forEach(function (link) {
	      link.ids.forEach(function (id) {
	        linkIds[id] = true;
	      });
	    });
	    this.setState({ linkIds: linkIds });
	  },

	  getInitialState: function getInitialState() {
	    return {
	      canvasWidth: 100,
	      canvasHeight: 100,
	      highlighting: false,
	      highlights: {}
	    };
	  },

	  componentDidMount: function componentDidMount() {
	    var topology = React.findDOMNode(this.refs.topology);
	    topology.addEventListener('mousemove', this._onMouseMove);
	    topology.addEventListener('mouseleave', this._onMouseLeave);
	    window.addEventListener('resize', this._onResize);
	    this._layout();
	    this._cacheLinkIds(this.props.links);
	  },

	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    this._cacheLinkIds(newProps.links);
	  },

	  componentDidUpdate: function componentDidUpdate() {
	    this._layout();
	    this._draw();
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    var topology = React.findDOMNode(this.refs.topology);
	    topology.removeEventListener('mousemove', this._onMouseMove);
	    topology.removeEventListener('mouseleave', this._onMouseLeave);
	    clearTimeout(this._resizeTimer);
	    window.removeEventListener('resize', this._onResize);
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }

	    var colorKeys = [];
	    var colors = {};
	    this.props.links.forEach(function (link) {
	      if (link.colorIndex && !colors[link.colorIndex]) {
	        colorKeys.push(React.createElement('div', { key: link.colorIndex, ref: link.colorIndex,
	          className: "background-color-index-" + link.colorIndex }));
	        colors[link.colorIndex] = true;
	      }
	    });

	    return React.createElement(
	      'div',
	      { ref: 'topology', className: classes.join(' ') },
	      React.createElement('canvas', { ref: 'canvas', className: CLASS_ROOT + "__canvas",
	        width: this.state.canvasWidth, height: this.state.canvasHeight }),
	      React.createElement(
	        'div',
	        { ref: 'contents', className: CLASS_ROOT + "__contents" },
	        this.props.children
	      ),
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__color-key" },
	        colorKeys
	      )
	    );
	  }

	});

	module.exports = Topology;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var OK = __webpack_require__(230);
	var ErrorStatus = __webpack_require__(231);
	var Warning = __webpack_require__(232);
	var Disabled = __webpack_require__(233);
	var Unknown = __webpack_require__(234);
	var Label = __webpack_require__(235);

	var CLASS_ROOT = "status-icon";

	var Status = React.createClass({
	  displayName: 'Status',

	  propType: {
	    large: React.PropTypes.bool,
	    small: React.PropTypes.bool,
	    value: React.PropTypes.oneOf(['error', 'warning', 'ok', 'unknown', 'disabled']),
	    a11yTitle: React.PropTypes.string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return { value: 'unknown' };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    var className = classes.join(' ');
	    var icon = React.createElement(
	      'span',
	      null,
	      '?'
	    );
	    switch (this.props.value.toLowerCase()) {
	      case 'ok':
	      case 'normal':
	        icon = React.createElement(OK, { className: className, a11yTitle: this.props.a11yTitle });
	        break;
	      case 'warning':
	        icon = React.createElement(Warning, { className: className, a11yTitle: this.props.a11yTitle });
	        break;
	      case 'error':
	      case 'critical':
	        icon = React.createElement(ErrorStatus, { className: className, a11yTitle: this.props.a11yTitle });
	        break;
	      case 'disabled':
	        icon = React.createElement(Disabled, { className: className, a11yTitle: this.props.a11yTitle });
	        break;
	      case 'unknown':
	        icon = React.createElement(Unknown, { className: className, a11yTitle: this.props.a11yTitle });
	        break;
	      case 'label':
	        icon = React.createElement(Label, { className: className, a11yTitle: this.props.a11yTitle });
	        break;
	    }
	    return icon;
	  }

	});

	module.exports = Status;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);
	var uuid = __webpack_require__(199);

	var OK = React.createClass({
	  displayName: 'OK',

	  mixins: [IntlMixin],

	  propTypes: {
	    a11yTitle: React.PropTypes.string
	  },

	  render: function render() {
	    var className = 'status-icon status-icon-ok';
	    var a11yTitle = this.getGrommetIntlMessage(this.props.a11yTitle);
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    if (typeof this.props.a11yTitle === "undefined") {
	      // this.props.a11yTitle emplty string is an acceptable value only if undefined
	      // should it use the default title value
	      a11yTitle = this.getGrommetIntlMessage('OK');
	    }
	    var okTitleId = 'ok-title-' + uuid.v1();
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 24 24', role: 'img', 'aria-labelledby': okTitleId, version: '1.1' },
	      React.createElement(
	        'title',
	        { id: okTitleId },
	        a11yTitle
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__base" },
	        React.createElement('circle', { role: 'presentation', cx: '12', cy: '12', r: '12', stroke: 'none' })
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__detail" },
	        React.createElement('path', { role: 'presentation', d: 'M10,17.4 L5.3,12.7 L6.7,11.3 L10,14.6 L17.3,7.3 L18.7,8.7 L10,17.4 Z', stroke: 'none' })
	      )
	    );
	  }

	});

	module.exports = OK;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);
	var uuid = __webpack_require__(199);

	var ErrorStatus = React.createClass({
	  displayName: 'ErrorStatus',

	  mixins: [IntlMixin],

	  propTypes: {
	    a11yTitle: React.PropTypes.string
	  },

	  render: function render() {
	    var className = 'status-icon status-icon-error';
	    var a11yTitle = this.getGrommetIntlMessage(this.props.a11yTitle);
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    if (typeof a11yTitle === "undefined") {
	      // this.props.a11yTitle emplty string is an acceptable value. Only if undefined
	      // should use the default title value.
	      a11yTitle = this.getGrommetIntlMessage('Error');
	    }
	    var errorTitleId = 'error-title-' + uuid.v1();
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 24 24', 'aria-labelledby': errorTitleId, role: 'img', version: '1.1' },
	      React.createElement(
	        'title',
	        { id: errorTitleId },
	        a11yTitle
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__base", stroke: 'none' },
	        React.createElement('path', { role: 'presentation', d: 'M12,0 L24,12 L12,24 L0,12 Z' })
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__detail", fill: 'none' },
	        React.createElement('path', { role: 'presentation', d: 'M8,8 L16,16', strokeWidth: '2' }),
	        React.createElement('path', { role: 'presentation', d: 'M8,16 L16,8', strokeWidth: '2' })
	      )
	    );
	  }

	});

	module.exports = ErrorStatus;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);
	var uuid = __webpack_require__(199);

	var Warning = React.createClass({
	  displayName: 'Warning',

	  mixins: [IntlMixin],

	  propTypes: {
	    a11yTitle: React.PropTypes.string
	  },

	  render: function render() {
	    var className = 'status-icon status-icon-warning';
	    var a11yTitle = this.getGrommetIntlMessage(this.props.a11yTitle);
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    if (typeof this.props.a11yTitle === "undefined") {
	      // this.props.a11yTitle emplty string is an acceptable value. Only if undefined
	      // should use the default title value.
	      a11yTitle = this.getGrommetIntlMessage('Warning');
	    }
	    var warningTitleId = 'warning-title-' + uuid.v1();
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 27 24', role: 'img', 'aria-labelledby': warningTitleId, version: '1.1' },
	      React.createElement(
	        'title',
	        { id: warningTitleId },
	        a11yTitle
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__base" },
	        React.createElement('path', { role: 'presentation', d: 'M12,0 L0,22 L24,22 L12,0 L12,0 Z', stroke: 'none' })
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__detail", strokeWi: true,
	          dth: '2', transform: 'translate(11.000000, 8.000000)' },
	        React.createElement('path', { role: 'presentation', d: 'M1,0 L1,6', fill: 'none' }),
	        React.createElement('path', { role: 'presentation', d: 'M1,8 L1,10', fill: 'none' })
	      )
	    );
	  }

	});

	module.exports = Warning;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);
	var uuid = __webpack_require__(199);

	var Disabled = React.createClass({
	  displayName: 'Disabled',

	  mixins: [IntlMixin],

	  propTypes: {
	    a11yTitle: React.PropTypes.string
	  },

	  render: function render() {
	    var className = 'status-icon status-icon-disabled';
	    var a11yTitle = this.getGrommetIntlMessage(this.props.a11yTitle);
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    if (typeof this.props.a11yTitle === "undefined") {
	      // this.props.a11yTitle emplty string is an acceptable value. Only if undefined
	      // should use the default title value.
	      a11yTitle = this.getGrommetIntlMessage('Disabled');
	    }
	    var disabledTitleId = 'disabled-title-' + uuid.v1();
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 24 24', role: 'img', 'aria-labelledby': disabledTitleId, version: '1.1' },
	      React.createElement(
	        'title',
	        { id: disabledTitleId },
	        a11yTitle
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__base" },
	        React.createElement('path', { role: 'presentation', stroke: 'none', d: 'M21,24 L3,24 C1.3,24 0,22.7 0,21 L0,3 C0,1.3 1.3,0 3,0 L21,0 C22.7,0 24,1.3 24,3 L24,21 C24,22.7 22.7,24 21,24 L21,24 Z' })
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__detail", strokeWidth: '2' },
	        React.createElement('path', { d: 'M6,12 L18,12' })
	      )
	    );
	  }

	});

	module.exports = Disabled;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);
	var uuid = __webpack_require__(199);

	var Unknown = React.createClass({
	  displayName: 'Unknown',

	  mixins: [IntlMixin],

	  render: function render() {
	    var className = 'status-icon status-icon-unknown';
	    var a11yTitle = this.getGrommetIntlMessage(this.props.a11yTitle);
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    if (typeof this.props.a11yTitle === "undefined") {
	      // this.props.a11yTitle emplty string is an acceptable value. Only if undefined
	      // should use the default title value.
	      a11yTitle = this.getGrommetIntlMessage('Unknown');
	    }
	    var unknownTitleId = 'unknown-title-' + uuid.v1();
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 24 24', role: 'img', 'aria-labelledby': unknownTitleId, version: '1.1' },
	      React.createElement(
	        'title',
	        { id: unknownTitleId },
	        a11yTitle
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__base" },
	        React.createElement('path', { role: 'presentation', d: 'M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 L12,2 Z M12,0 C5.4,0 0,5.4 0,12 C0,18.6 5.4,24 12,24 C18.6,24 24,18.6 24,12 C24,5.4 18.6,0 12,0 L12,0 L12,0 Z', stroke: 'none' })
	      ),
	      React.createElement(
	        'g',
	        { className: "status-icon__detail" },
	        React.createElement('path', { role: 'presentation', d: 'M9,10.4 C9,8.8 10.4,7.6 12,7.6 C13.6,7.6 14.9,9 15,10.4 C15,11.7 14.1,12.7 12.9,13.1 C12.4,13.2 12,13.7 12,14.2 L12,15.5', fill: 'none', strokeWidth: '2' }),
	        React.createElement('circle', { role: 'presentation', stroke: 'none', cx: '12', cy: '17.6', r: '1' })
	      )
	    );
	  }

	});

	module.exports = Unknown;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Label = React.createClass({
	  displayName: 'Label',

	  render: function render() {
	    var className = 'status-icon status-icon-label';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 24 24', version: '1.1' },
	      React.createElement(
	        'g',
	        { className: "status-icon__base" },
	        React.createElement('circle', { cx: '12', cy: '12', r: '12', stroke: 'none' })
	      )
	    );
	  }

	});

	module.exports = Label;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);

	var CLASS_ROOT = "object";

	var GrommetObject = React.createClass({
	  displayName: 'GrommetObject',

	  mixins: [IntlMixin],

	  propTypes: {
	    data: React.PropTypes.object
	  },

	  _renderArray: function _renderArray(array) {
	    return array.map(function (item, index) {
	      var itemContent = item;
	      if ('object' === typeof item) {
	        itemContent = this._renderObject(item);
	      }
	      return React.createElement(
	        'li',
	        { key: 'i_' + index, className: 'list-item' },
	        itemContent
	      );
	    }, this);
	  },

	  _renderObject: function _renderObject(obj) {
	    var attrs = [];
	    for (var name in obj) {
	      if (obj.hasOwnProperty(name)) {
	        var value = obj[name];
	        var classes = [CLASS_ROOT + "__attribute"];
	        if (null === value) {
	          value = 'null';
	          classes.push(CLASS_ROOT + "__attribute--unset");
	        } else if (Array.isArray(value)) {
	          var items = this._renderArray(value);
	          value = React.createElement(
	            'ol',
	            null,
	            items
	          );
	          classes.push(CLASS_ROOT + "__attribute--array");
	        } else if ('object' === typeof value) {
	          value = this._renderObject(value);
	          classes.push(CLASS_ROOT + "__attribute--container");
	        } else {
	          value = value.toString();
	        }
	        attrs.push(React.createElement(
	          'li',
	          { key: 'n_' + name, className: classes.join(' ') },
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__attribute-name" },
	            this.getGrommetIntlMessage(name)
	          ),
	          React.createElement(
	            'span',
	            { className: CLASS_ROOT + "__attribute-value" },
	            this.getGrommetIntlMessage(value)
	          )
	        ));
	      }
	    }

	    return React.createElement(
	      'ul',
	      null,
	      attrs
	    );
	  },

	  render: function render() {
	    return React.createElement(
	      'div',
	      { className: CLASS_ROOT },
	      React.createElement(
	        'div',
	        { className: CLASS_ROOT + "__container" },
	        this._renderObject(this.props.data)
	      )
	    );
	  }

	});

	module.exports = GrommetObject;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var TBD = React.createClass({
	  displayName: 'TBD',

	  render: function render() {
	    return React.createElement(
	      'div',
	      { className: "tbd" },
	      'TBD'
	    );
	  }

	});

	module.exports = TBD;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var DragHandle = React.createClass({
	  displayName: 'DragHandle',

	  render: function render() {
	    var className = 'control-icon control-icon-drag-handle';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { stroke: 'none', strokeWidth: '1', fill: '#cccccc', fillRule: 'evenodd' },
	        React.createElement('rect', { x: '12', y: '12', width: '3', height: '3' }),
	        React.createElement('rect', { x: '18', y: '12', width: '3', height: '3' }),
	        React.createElement('rect', { x: '12', y: '18', width: '3', height: '3' }),
	        React.createElement('rect', { x: '18', y: '18', width: '3', height: '3' }),
	        React.createElement('rect', { x: '12', y: '24', width: '3', height: '3' }),
	        React.createElement('rect', { x: '18', y: '24', width: '3', height: '3' }),
	        React.createElement('rect', { x: '12', y: '30', width: '3', height: '3' }),
	        React.createElement('rect', { x: '18', y: '30', width: '3', height: '3' })
	      )
	    );
	  }

	});

	module.exports = DragHandle;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Edit = React.createClass({
	  displayName: 'Edit',

	  render: function render() {
	    var className = 'control-icon control-icon-edit';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('circle', { strokeWidth: '2', cx: '24', cy: '24', r: '9' }),
	        React.createElement('line', { strokeWidth: '2', x1: '24', y1: '11', x2: '24', y2: '15' }),
	        React.createElement('line', { strokeWidth: '2', x1: '33.2', y1: '14.8', x2: '30.3', y2: '17.6' }),
	        React.createElement('line', { strokeWidth: '2', x1: '37', y1: '24', x2: '33', y2: '24' }),
	        React.createElement('line', { strokeWidth: '2', x1: '33.2', y1: '33.2', x2: '30.3', y2: '30.4' }),
	        React.createElement('line', { strokeWidth: '2', x1: '24', y1: '37', x2: '24', y2: '33' }),
	        React.createElement('line', { strokeWidth: '2', x1: '14.8', y1: '33.2', x2: '17.7', y2: '30.4' }),
	        React.createElement('line', { strokeWidth: '2', x1: '11', y1: '24', x2: '15.2', y2: '24' }),
	        React.createElement('line', { strokeWidth: '2', x1: '14.8', y1: '14.8', x2: '17.7', y2: '17.6' })
	      )
	    );
	  }

	});

	module.exports = Edit;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Facebook = React.createClass({
	  displayName: 'Facebook',

	  render: function render() {
	    var className = 'control-icon control-icon-facebook';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { stroke: 'none' },
	        React.createElement('path', { d: 'M26.1,35.9 L26.1,24.9 L29.8,24.9 L30.3,20.6 L26.1,20.6 L26.1,17.9 C26.1,16.7 26.4,15.8 28.2,15.8 L30.5,15.8 L30.5,12 C30.1,11.9 28.8,11.8 27.2,11.8 C23.9,11.8 21.7,13.8 21.7,17.4 L21.7,20.5 L18,20.5 L18,24.8 L21.7,24.8 L21.7,35.7 L26.1,35.7 L26.1,35.9 Z' })
	      )
	    );
	  }

	});

	module.exports = Facebook;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var IntlMixin = __webpack_require__(54);
	var uuid = __webpack_require__(199);

	var Filter = React.createClass({
	  displayName: 'Filter',

	  mixins: [IntlMixin],

	  propTypes: {
	    a11yTitle: React.PropTypes.string,
	    notifications: React.PropTypes.number
	  },

	  render: function render() {
	    var className = 'control-icon control-icon-filter';
	    var a11yTitle = this.getGrommetIntlMessage(this.props.a11yTitle);
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }

	    if (typeof this.props.a11yTitle === "undefined") {
	      // this.props.a11yTitle emplty string is an acceptable value only if undefined
	      // should it use the default title value
	      a11yTitle = this.getGrommetIntlMessage('Filter');
	    }
	    var filterTitleId = 'ok-title-' + uuid.v1();

	    var badge = null;
	    if (this.props.notifications) {
	      badge = React.createElement(
	        'g',
	        { className: 'control-icon__badge' },
	        React.createElement('circle', { stroke: 'none', cx: '37', cy: '11', r: '10' }),
	        React.createElement(
	          'text',
	          { x: '33.5', y: '16', fontSize: 16 },
	          this.props.notifications
	        )
	      );
	    }

	    return React.createElement(
	      'svg',
	      { role: 'image', className: className, 'aria-labelledby': filterTitleId, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'title',
	        { id: filterTitleId },
	        a11yTitle
	      ),
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('polygon', { role: 'presentation', strokeWidth: '2', points: '14,15 24,27 34,15 \t' }),
	        React.createElement('line', { strokeWidth: '2', x1: '24', y1: '27', x2: '24', y2: '34' })
	      ),
	      badge
	    );
	  }

	});

	module.exports = Filter;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);
	var CLASS_ROOT = "logo-icon";
	var uuid = __webpack_require__(199);
	var IntlMixin = __webpack_require__(54);

	var Grommet = React.createClass({
	  displayName: 'Grommet',

	  mixins: [IntlMixin],

	  propTypes: {
	    small: React.PropTypes.bool,
	    large: React.PropTypes.bool,
	    a11yTitle: React.PropTypes.string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return { a11yTitle: 'Grommet' };
	  },

	  render: function render() {
	    var classes = [CLASS_ROOT];
	    if (this.props.small) {
	      classes.push(CLASS_ROOT + "--small");
	    }
	    if (this.props.large) {
	      classes.push(CLASS_ROOT + "--large");
	    }
	    if (this.props.className) {
	      classes.push(this.props.className);
	    }
	    var logoTitleId = 'grommet-logo-title-' + uuid.v1();
	    return React.createElement(
	      'svg',
	      { className: classes.join(' '), viewBox: '0 0 140 140', version: '1.1', role: 'img', 'aria-labelledby': logoTitleId },
	      React.createElement(
	        'title',
	        { id: logoTitleId },
	        this.getGrommetIntlMessage(this.props.a11yTitle)
	      ),
	      React.createElement('path', { role: 'presentation', d: 'M119.49603,20.5014878 L100.989057,39.0094878 C105.89805,43.9184878 109.859044,49.7734878 111.669042,55.3734878 C122.692025,89.4684878 93.3250687,120.604488 59.5321185,112.820488 C44.9911399,109.470488 30.5211612,94.9984878 27.1751661,80.4564878 C20.432176,51.1514878 42.9571429,25.1854878 71.2931012,25.9974878 L93.3090687,3.98048778 C86.0960794,1.43348778 78.3420908,0.0304877767 70.2641027,0.000487776719 C32.014159,-0.141512223 0.549205302,30.7384878 0.00720609982,68.9844878 C-0.547793083,108.124488 31.0271604,140.024488 70.045103,139.999488 C108.802046,139.975488 140,108.756488 140,70.0004878 C140,50.6694878 132.164012,33.1694878 119.49603,20.5014878 L119.49603,20.5014878 Z', fill: '#8C50FF' }),
	      React.createElement('path', { role: 'presentation', d: 'M27.1736636,80.457549 C30.5194807,94.999549 44.98869,109.472549 59.5288954,112.821549 C93.3190487,120.605549 122.685444,89.469549 111.663046,55.374549 C109.852145,49.774549 105.891362,43.918549 100.98363,39.010549 L69.9953234,70.000549 L100.083679,70.001549 C100.083679,86.762549 86.3804279,100.322549 69.5663468,100.089549 C53.4302287,99.865549 40.23095,86.746549 39.9119674,70.611549 C39.7429767,62.061549 43.140791,54.304549 48.7174862,48.725549 L48.6404904,48.648549 L71.2872528,25.998549 C42.9548011,25.186549 20.4310321,51.152549 27.1736636,80.457549 L27.1736636,80.457549 Z', fill: '#333333' })
	    );
	  }

	});

	module.exports = Grommet;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Help = React.createClass({
	  displayName: 'Help',

	  render: function render() {
	    var className = 'control-icon control-icon-help';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none' },
	        React.createElement('path', { strokeWidth: '2', d: 'M17,18c0-4,3.4-7,7-7c3.5,0,7,2.7,7,7s-3.6,7-7,7v6' }),
	        React.createElement('line', { strokeWidth: '2', x1: '24', y1: '37', x2: '24', y2: '35' })
	      )
	    );
	  }

	});

	module.exports = Help;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var LinkedIn = React.createClass({
	  displayName: 'LinkedIn',

	  render: function render() {
	    var className = 'control-icon control-icon-linked-in';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { stroke: 'none' },
	        React.createElement('path', { d: 'M17.4,36 L12.4,36 L12.4,20 L17.4,20 L17.4,36 L17.4,36 Z M14.9,17.8 C13.3,17.8 12,16.5 12,14.9 C12,13.3 13.3,12 14.9,12 C16.5,12 17.8,13.3 17.8,14.9 C17.8,16.5 16.5,17.8 14.9,17.8 L14.9,17.8 Z M36,36 L31,36 L31,28.2 C31,26.3 31,24 28.4,24 C25.8,24 25.4,26 25.4,28.1 L25.4,36 L20.4,36 L20.4,20 L25.2,20 L25.2,22.2 L25.3,22.2 C26,20.9 27.6,19.6 30,19.6 C35,19.6 36,22.9 36,27.2 L36,36 L36,36 Z' })
	      )
	    );
	  }

	});

	module.exports = LinkedIn;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Mail = React.createClass({
	  displayName: 'Mail',

	  render: function render() {
	    var className = 'control-icon control-icon-mail';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none', strokeWidth: '2' },
	        React.createElement('rect', { x: '12', y: '14', width: '24', height: '19.6' }),
	        React.createElement('path', { d: 'M12,17.3 L24,27.1 L36,17.3' }),
	        React.createElement('path', { d: 'M12.2,32.3 L20.7,23.8' }),
	        React.createElement('path', { d: 'M35.8,32.3 L27.3,23.8' })
	      )
	    );
	  }

	});

	module.exports = Mail;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Person = React.createClass({
	  displayName: 'Person',

	  render: function render() {
	    var className = 'control-icon control-icon-person';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none', strokeWidth: '2' },
	        React.createElement('circle', { cx: '24', cy: '18', r: '5' }),
	        React.createElement('path', { d: 'M33,36 L33,31 C33,26.6 29.4,23 25,23 L23,23 C18.6,23 15,26.6 15,31 L15,36' }),
	        React.createElement('path', { d: 'M20,36 L20,31' }),
	        React.createElement('path', { d: 'M28,36 L28,31' })
	      )
	    );
	  }

	});

	module.exports = Person;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var SearchPlus = React.createClass({
	  displayName: 'SearchPlus',

	  render: function render() {
	    var className = 'control-icon control-icon-search-plus';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { strokeWidth: '4', fill: 'none', fillRule: 'evenodd' },
	        React.createElement('circle', { strokeWidth: '4', cx: '21', cy: '21', r: '7' }),
	        React.createElement('path', { d: 'M27.2,27 L34.2,36', strokeWidth: '4', strokeLinecap: 'round' }),
	        React.createElement('path', { d: 'M34,13 L34,19', strokeWidth: '2', strokeLinecap: 'round' }),
	        React.createElement('path', { d: 'M37,16 L31,16', strokeWidth: '2', strokeLinecap: 'round' })
	      )
	    );
	  }

	});

	module.exports = SearchPlus;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var Twitter = React.createClass({
	  displayName: 'Twitter',

	  render: function render() {
	    var className = 'control-icon control-icon-twitter';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { stroke: 'none' },
	        React.createElement('path', { d: 'M36,16.8 C35.1,17.2 34.2,17.5 33.2,17.6 C34.2,17 35,16 35.4,14.9 C34.4,15.5 33.4,15.9 32.3,16.1 C31.4,15.1 30.1,14.5 28.7,14.5 C26,14.5 23.8,16.7 23.8,19.4 C23.8,19.8 23.8,20.2 23.9,20.5 C19.8,20.3 16.2,18.3 13.8,15.4 C13.2,16.1 13,17 13,17.9 C13,19.6 13.9,21.1 15.2,22 C14.4,22 13.6,21.8 13,21.4 C13,21.4 13,21.4 13,21.5 C13,23.9 14.7,25.9 16.9,26.3 C16.5,26.4 16.1,26.5 15.6,26.5 C15.3,26.5 15,26.5 14.7,26.4 C15.3,28.4 17.1,29.8 19.3,29.8 C17.6,31.1 15.5,31.9 13.2,31.9 C12.8,31.9 12.4,31.9 12,31.8 C14.2,33.2 16.8,34 19.5,34 C28.6,34 33.5,26.5 33.5,20 L33.5,19.4 C34.5,18.7 35.3,17.8 36,16.8 L36,16.8 Z' })
	      )
	    );
	  }

	});

	module.exports = Twitter;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var React = __webpack_require__(2);

	var World = React.createClass({
	  displayName: 'World',

	  render: function render() {
	    var className = 'control-icon control-icon-world';
	    if (this.props.className) {
	      className += ' ' + this.props.className;
	    }
	    return React.createElement(
	      'svg',
	      { className: className, viewBox: '0 0 48 48', version: '1.1' },
	      React.createElement(
	        'g',
	        { fill: 'none', strokeWidth: '2' },
	        React.createElement('circle', { cx: '24', cy: '24', r: '12' }),
	        React.createElement('ellipse', { cx: '24', cy: '24', rx: '5.5', ry: '12' }),
	        React.createElement('path', { d: 'M13.1,19.6 L34.9,19.6' }),
	        React.createElement('path', { d: 'M13.1,28.4 L34.9,28.4' })
	      )
	    );
	  }

	});

	module.exports = World;

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	// http://jsfiddle.net/LBAr8/

	'use strict';

	var React = __webpack_require__(2);

	var ReactLayeredComponent = {

	  componentWillUnmount: function componentWillUnmount() {
	    this._unrenderLayer();
	    document.body.removeChild(this._target);
	  },
	  componentDidUpdate: function componentDidUpdate() {
	    this._renderLayer();
	  },
	  componentDidMount: function componentDidMount() {
	    // Appending to the body is easier than managing the z-index of everything on the page.
	    // It's also better for accessibility and makes stacking a snap (since components will stack
	    // in mount order).
	    this._target = document.createElement('div');
	    document.body.appendChild(this._target);
	    this._renderLayer();
	  },
	  _renderLayer: function _renderLayer() {
	    // By calling this method in componentDidMount() and componentDidUpdate(), you're effectively
	    // creating a "wormhole" that funnels React's hierarchical updates through to a DOM node on an
	    // entirely different part of the page.
	    React.render(this.renderLayer(), this._target);
	  },
	  _unrenderLayer: function _unrenderLayer() {
	    React.unmountComponentAtNode(this._target);
	  }
	};

	module.exports = ReactLayeredComponent;

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var Reflux = __webpack_require__(252);
	var Rest = __webpack_require__(273);

	var Actions = Reflux.createActions({
	  // Session
	  'login': { asyncResult: true },
	  'logout': {}
	});

	Actions.login.listen(function (userName, password) {
	  if (!userName || !password) {
	    return this.failed(400, { message: 'loginInvalidPassword' });
	  }

	  var thisAction = this;
	  Rest.post('/rest/login-sessions', { authLoginDomain: 'LOCAL', userName: userName, password: password, loginMsgAck: true }).end(function (err, res) {
	    if (err || !res.ok) {
	      return thisAction.failed(err, res.body);
	    }
	    thisAction.completed(userName, res.body.sessionID);
	  });
	});

	module.exports = Actions;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	var Reflux = __webpack_require__(253);

	Reflux.connect = __webpack_require__(268);

	Reflux.connectFilter = __webpack_require__(270);

	Reflux.ListenerMixin = __webpack_require__(269);

	Reflux.listenTo = __webpack_require__(271);

	Reflux.listenToMany = __webpack_require__(272);

	module.exports = Reflux;


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var Reflux = {
	    version: {
	        "reflux-core": "0.2.1"
	    }
	};

	Reflux.ActionMethods = __webpack_require__(254);

	Reflux.ListenerMethods = __webpack_require__(255);

	Reflux.PublisherMethods = __webpack_require__(266);

	Reflux.StoreMethods = __webpack_require__(265);

	Reflux.createAction = __webpack_require__(267);

	Reflux.createStore = __webpack_require__(261);

	var maker = __webpack_require__(260).staticJoinCreator;

	Reflux.joinTrailing = Reflux.all = maker("last"); // Reflux.all alias for backward compatibility

	Reflux.joinLeading = maker("first");

	Reflux.joinStrict = maker("strict");

	Reflux.joinConcat = maker("all");

	var _ = Reflux.utils = __webpack_require__(256);

	Reflux.EventEmitter = _.EventEmitter;

	Reflux.Promise = _.Promise;

	/**
	 * Convenience function for creating a set of actions
	 *
	 * @param definitions the definitions for the actions to be created
	 * @returns an object with actions of corresponding action names
	 */
	Reflux.createActions = (function () {
	    var reducer = function reducer(definitions, actions) {
	        Object.keys(definitions).forEach(function (actionName) {
	            var val = definitions[actionName];
	            actions[actionName] = Reflux.createAction(val);
	        });
	    };

	    return function (definitions) {
	        var actions = {};
	        if (definitions instanceof Array) {
	            definitions.forEach(function (val) {
	                if (_.isObject(val)) {
	                    reducer(val, actions);
	                } else {
	                    actions[val] = Reflux.createAction(val);
	                }
	            });
	        } else {
	            reducer(definitions, actions);
	        }
	        return actions;
	    };
	})();

	/**
	 * Sets the eventmitter that Reflux uses
	 */
	Reflux.setEventEmitter = function (ctx) {
	    Reflux.EventEmitter = _.EventEmitter = ctx;
	};

	/**
	 * Sets the Promise library that Reflux uses
	 */
	Reflux.setPromise = function (ctx) {
	    Reflux.Promise = _.Promise = ctx;
	};

	/**
	 * Sets the Promise factory that creates new promises
	 * @param {Function} factory has the signature `function(resolver) { return [new Promise]; }`
	 */
	Reflux.setPromiseFactory = function (factory) {
	    _.createPromise = factory;
	};

	/**
	 * Sets the method used for deferring actions and stores
	 */
	Reflux.nextTick = function (nextTick) {
	    _.nextTick = nextTick;
	};

	Reflux.use = function (pluginCb) {
	    pluginCb(Reflux);
	};

	/**
	 * Provides the set of created actions and stores for introspection
	 */
	/*eslint-disable no-underscore-dangle*/
	Reflux.__keep = __webpack_require__(262);
	/*eslint-enable no-underscore-dangle*/

	/**
	 * Warn if Function.prototype.bind not available
	 */
	if (!Function.prototype.bind) {
	    console.error("Function.prototype.bind not available. " + "ES5 shim required. " + "https://github.com/spoike/refluxjs#es5");
	}

	exports["default"] = Reflux;
	module.exports = exports["default"];

/***/ },
/* 254 */
/***/ function(module, exports) {

	/**
	 * A module of methods that you want to include in all actions.
	 * This module is consumed by `createAction`.
	 */
	"use strict";

	module.exports = {};

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _ = __webpack_require__(256),
	    maker = __webpack_require__(260).instanceJoinCreator;

	/**
	 * Extract child listenables from a parent from their
	 * children property and return them in a keyed Object
	 *
	 * @param {Object} listenable The parent listenable
	 */
	var mapChildListenables = function mapChildListenables(listenable) {
	    var i = 0,
	        children = {},
	        childName;
	    for (; i < (listenable.children || []).length; ++i) {
	        childName = listenable.children[i];
	        if (listenable[childName]) {
	            children[childName] = listenable[childName];
	        }
	    }
	    return children;
	};

	/**
	 * Make a flat dictionary of all listenables including their
	 * possible children (recursively), concatenating names in camelCase.
	 *
	 * @param {Object} listenables The top-level listenables
	 */
	var flattenListenables = function flattenListenables(listenables) {
	    var flattened = {};
	    for (var key in listenables) {
	        var listenable = listenables[key];
	        var childMap = mapChildListenables(listenable);

	        // recursively flatten children
	        var children = flattenListenables(childMap);

	        // add the primary listenable and chilren
	        flattened[key] = listenable;
	        for (var childKey in children) {
	            var childListenable = children[childKey];
	            flattened[key + _.capitalize(childKey)] = childListenable;
	        }
	    }

	    return flattened;
	};

	/**
	 * A module of methods related to listening.
	 */
	module.exports = {

	    /**
	     * An internal utility function used by `validateListening`
	     *
	     * @param {Action|Store} listenable The listenable we want to search for
	     * @returns {Boolean} The result of a recursive search among `this.subscriptions`
	     */
	    hasListener: function hasListener(listenable) {
	        var i = 0,
	            j,
	            listener,
	            listenables;
	        for (; i < (this.subscriptions || []).length; ++i) {
	            listenables = [].concat(this.subscriptions[i].listenable);
	            for (j = 0; j < listenables.length; j++) {
	                listener = listenables[j];
	                if (listener === listenable || listener.hasListener && listener.hasListener(listenable)) {
	                    return true;
	                }
	            }
	        }
	        return false;
	    },

	    /**
	     * A convenience method that listens to all listenables in the given object.
	     *
	     * @param {Object} listenables An object of listenables. Keys will be used as callback method names.
	     */
	    listenToMany: function listenToMany(listenables) {
	        var allListenables = flattenListenables(listenables);
	        for (var key in allListenables) {
	            var cbname = _.callbackName(key),
	                localname = this[cbname] ? cbname : this[key] ? key : undefined;
	            if (localname) {
	                this.listenTo(allListenables[key], localname, this[cbname + "Default"] || this[localname + "Default"] || localname);
	            }
	        }
	    },

	    /**
	     * Checks if the current context can listen to the supplied listenable
	     *
	     * @param {Action|Store} listenable An Action or Store that should be
	     *  listened to.
	     * @returns {String|Undefined} An error message, or undefined if there was no problem.
	     */
	    validateListening: function validateListening(listenable) {
	        if (listenable === this) {
	            return "Listener is not able to listen to itself";
	        }
	        if (!_.isFunction(listenable.listen)) {
	            return listenable + " is missing a listen method";
	        }
	        if (listenable.hasListener && listenable.hasListener(this)) {
	            return "Listener cannot listen to this listenable because of circular loop";
	        }
	    },

	    /**
	     * Sets up a subscription to the given listenable for the context object
	     *
	     * @param {Action|Store} listenable An Action or Store that should be
	     *  listened to.
	     * @param {Function|String} callback The callback to register as event handler
	     * @param {Function|String} defaultCallback The callback to register as default handler
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is the object being listened to
	     */
	    listenTo: function listenTo(listenable, callback, defaultCallback) {
	        var desub,
	            unsubscriber,
	            subscriptionobj,
	            subs = this.subscriptions = this.subscriptions || [];
	        _.throwIf(this.validateListening(listenable));
	        this.fetchInitialState(listenable, defaultCallback);
	        desub = listenable.listen(this[callback] || callback, this);
	        unsubscriber = function () {
	            var index = subs.indexOf(subscriptionobj);
	            _.throwIf(index === -1, "Tried to remove listen already gone from subscriptions list!");
	            subs.splice(index, 1);
	            desub();
	        };
	        subscriptionobj = {
	            stop: unsubscriber,
	            listenable: listenable
	        };
	        subs.push(subscriptionobj);
	        return subscriptionobj;
	    },

	    /**
	     * Stops listening to a single listenable
	     *
	     * @param {Action|Store} listenable The action or store we no longer want to listen to
	     * @returns {Boolean} True if a subscription was found and removed, otherwise false.
	     */
	    stopListeningTo: function stopListeningTo(listenable) {
	        var sub,
	            i = 0,
	            subs = this.subscriptions || [];
	        for (; i < subs.length; i++) {
	            sub = subs[i];
	            if (sub.listenable === listenable) {
	                sub.stop();
	                _.throwIf(subs.indexOf(sub) !== -1, "Failed to remove listen from subscriptions list!");
	                return true;
	            }
	        }
	        return false;
	    },

	    /**
	     * Stops all subscriptions and empties subscriptions array
	     */
	    stopListeningToAll: function stopListeningToAll() {
	        var remaining,
	            subs = this.subscriptions || [];
	        while (remaining = subs.length) {
	            subs[0].stop();
	            _.throwIf(subs.length !== remaining - 1, "Failed to remove listen from subscriptions list!");
	        }
	    },

	    /**
	     * Used in `listenTo`. Fetches initial data from a publisher if it has a `getInitialState` method.
	     * @param {Action|Store} listenable The publisher we want to get initial state from
	     * @param {Function|String} defaultCallback The method to receive the data
	     */
	    fetchInitialState: function fetchInitialState(listenable, defaultCallback) {
	        defaultCallback = defaultCallback && this[defaultCallback] || defaultCallback;
	        var me = this;
	        if (_.isFunction(defaultCallback) && _.isFunction(listenable.getInitialState)) {
	            var data = listenable.getInitialState();
	            if (data && _.isFunction(data.then)) {
	                data.then(function () {
	                    defaultCallback.apply(me, arguments);
	                });
	            } else {
	                defaultCallback.call(this, data);
	            }
	        }
	    },

	    /**
	     * The callback will be called once all listenables have triggered at least once.
	     * It will be invoked with the last emission from each listenable.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinTrailing: maker("last"),

	    /**
	     * The callback will be called once all listenables have triggered at least once.
	     * It will be invoked with the first emission from each listenable.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinLeading: maker("first"),

	    /**
	     * The callback will be called once all listenables have triggered at least once.
	     * It will be invoked with all emission from each listenable.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinConcat: maker("all"),

	    /**
	     * The callback will be called once all listenables have triggered.
	     * If a callback triggers twice before that happens, an error is thrown.
	     * @param {...Publishers} publishers Publishers that should be tracked.
	     * @param {Function|String} callback The method to call when all publishers have emitted
	     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables
	     */
	    joinStrict: maker("strict")
	};

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate) {"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.capitalize = capitalize;
	exports.callbackName = callbackName;
	exports.isObject = isObject;
	exports.extend = extend;
	exports.isFunction = isFunction;
	exports.object = object;
	exports.isArguments = isArguments;
	exports.throwIf = throwIf;

	function capitalize(string) {
	    return string.charAt(0).toUpperCase() + string.slice(1);
	}

	function callbackName(string, prefix) {
	    prefix = prefix || "on";
	    return prefix + exports.capitalize(string);
	}

	var environment = {};

	exports.environment = environment;
	function checkEnv(target) {
	    var flag = undefined;
	    try {
	        /*eslint-disable no-eval */
	        if (eval(target)) {
	            flag = true;
	        }
	        /*eslint-enable no-eval */
	    } catch (e) {
	        flag = false;
	    }
	    environment[callbackName(target, "has")] = flag;
	}
	checkEnv("setImmediate");
	checkEnv("Promise");

	/*
	 * isObject, extend, isFunction, isArguments are taken from undescore/lodash in
	 * order to remove the dependency
	 */

	function isObject(obj) {
	    var type = typeof obj;
	    return type === "function" || type === "object" && !!obj;
	}

	function extend(obj) {
	    if (!isObject(obj)) {
	        return obj;
	    }
	    var source, prop;
	    for (var i = 1, length = arguments.length; i < length; i++) {
	        source = arguments[i];
	        for (prop in source) {
	            if (Object.getOwnPropertyDescriptor && Object.defineProperty) {
	                var propertyDescriptor = Object.getOwnPropertyDescriptor(source, prop);
	                Object.defineProperty(obj, prop, propertyDescriptor);
	            } else {
	                obj[prop] = source[prop];
	            }
	        }
	    }
	    return obj;
	}

	function isFunction(value) {
	    return typeof value === "function";
	}

	exports.EventEmitter = __webpack_require__(259);

	if (environment.hasSetImmediate) {
	    exports.nextTick = function (callback) {
	        setImmediate(callback);
	    };
	} else {
	    exports.nextTick = function (callback) {
	        setTimeout(callback, 0);
	    };
	}

	function object(keys, vals) {
	    var o = {},
	        i = 0;
	    for (; i < keys.length; i++) {
	        o[keys[i]] = vals[i];
	    }
	    return o;
	}

	if (environment.hasPromise) {
	    exports.Promise = Promise;
	    exports.createPromise = function (resolver) {
	        return new exports.Promise(resolver);
	    };
	} else {
	    exports.Promise = null;
	    exports.createPromise = function () {};
	}

	function isArguments(value) {
	    return typeof value === "object" && "callee" in value && typeof value.length === "number";
	}

	function throwIf(val, msg) {
	    if (val) {
	        throw Error(msg || val);
	    }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(257).setImmediate))

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(258).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

	  immediateIds[id] = true;

	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });

	  return id;
	};

	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(257).setImmediate, __webpack_require__(257).clearImmediate))

/***/ },
/* 258 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            currentQueue[queueIndex].run();
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	// TODO(shtylman)
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	//
	// We store our EE objects in a plain object whose properties are event names.
	// If `Object.create(null)` is not supported we prefix the event names with a
	// `~` to make sure that the built-in object properties are not overridden or
	// used as an attack vector.
	// We also assume that `Object.create(null)` is available when the event name
	// is an ES6 Symbol.
	//
	var prefix = typeof Object.create !== 'function' ? '~' : false;

	/**
	 * Representation of a single EventEmitter function.
	 *
	 * @param {Function} fn Event handler to be called.
	 * @param {Mixed} context Context for function execution.
	 * @param {Boolean} once Only emit once
	 * @api private
	 */
	function EE(fn, context, once) {
	  this.fn = fn;
	  this.context = context;
	  this.once = once || false;
	}

	/**
	 * Minimal EventEmitter interface that is molded against the Node.js
	 * EventEmitter interface.
	 *
	 * @constructor
	 * @api public
	 */
	function EventEmitter() { /* Nothing to set */ }

	/**
	 * Holds the assigned EventEmitters by name.
	 *
	 * @type {Object}
	 * @private
	 */
	EventEmitter.prototype._events = undefined;

	/**
	 * Return a list of assigned event listeners.
	 *
	 * @param {String} event The events that should be listed.
	 * @param {Boolean} exists We only need to know if there are listeners.
	 * @returns {Array|Boolean}
	 * @api public
	 */
	EventEmitter.prototype.listeners = function listeners(event, exists) {
	  var evt = prefix ? prefix + event : event
	    , available = this._events && this._events[evt];

	  if (exists) return !!available;
	  if (!available) return [];
	  if (available.fn) return [available.fn];

	  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
	    ee[i] = available[i].fn;
	  }

	  return ee;
	};

	/**
	 * Emit an event to all registered event listeners.
	 *
	 * @param {String} event The name of the event.
	 * @returns {Boolean} Indication if we've emitted an event.
	 * @api public
	 */
	EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
	  var evt = prefix ? prefix + event : event;

	  if (!this._events || !this._events[evt]) return false;

	  var listeners = this._events[evt]
	    , len = arguments.length
	    , args
	    , i;

	  if ('function' === typeof listeners.fn) {
	    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

	    switch (len) {
	      case 1: return listeners.fn.call(listeners.context), true;
	      case 2: return listeners.fn.call(listeners.context, a1), true;
	      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
	      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
	      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
	      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
	    }

	    for (i = 1, args = new Array(len -1); i < len; i++) {
	      args[i - 1] = arguments[i];
	    }

	    listeners.fn.apply(listeners.context, args);
	  } else {
	    var length = listeners.length
	      , j;

	    for (i = 0; i < length; i++) {
	      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

	      switch (len) {
	        case 1: listeners[i].fn.call(listeners[i].context); break;
	        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
	        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
	        default:
	          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
	            args[j - 1] = arguments[j];
	          }

	          listeners[i].fn.apply(listeners[i].context, args);
	      }
	    }
	  }

	  return true;
	};

	/**
	 * Register a new EventListener for the given event.
	 *
	 * @param {String} event Name of the event.
	 * @param {Functon} fn Callback function.
	 * @param {Mixed} context The context of the function.
	 * @api public
	 */
	EventEmitter.prototype.on = function on(event, fn, context) {
	  var listener = new EE(fn, context || this)
	    , evt = prefix ? prefix + event : event;

	  if (!this._events) this._events = prefix ? {} : Object.create(null);
	  if (!this._events[evt]) this._events[evt] = listener;
	  else {
	    if (!this._events[evt].fn) this._events[evt].push(listener);
	    else this._events[evt] = [
	      this._events[evt], listener
	    ];
	  }

	  return this;
	};

	/**
	 * Add an EventListener that's only called once.
	 *
	 * @param {String} event Name of the event.
	 * @param {Function} fn Callback function.
	 * @param {Mixed} context The context of the function.
	 * @api public
	 */
	EventEmitter.prototype.once = function once(event, fn, context) {
	  var listener = new EE(fn, context || this, true)
	    , evt = prefix ? prefix + event : event;

	  if (!this._events) this._events = prefix ? {} : Object.create(null);
	  if (!this._events[evt]) this._events[evt] = listener;
	  else {
	    if (!this._events[evt].fn) this._events[evt].push(listener);
	    else this._events[evt] = [
	      this._events[evt], listener
	    ];
	  }

	  return this;
	};

	/**
	 * Remove event listeners.
	 *
	 * @param {String} event The event we want to remove.
	 * @param {Function} fn The listener that we need to find.
	 * @param {Mixed} context Only remove listeners matching this context.
	 * @param {Boolean} once Only remove once listeners.
	 * @api public
	 */
	EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
	  var evt = prefix ? prefix + event : event;

	  if (!this._events || !this._events[evt]) return this;

	  var listeners = this._events[evt]
	    , events = [];

	  if (fn) {
	    if (listeners.fn) {
	      if (
	           listeners.fn !== fn
	        || (once && !listeners.once)
	        || (context && listeners.context !== context)
	      ) {
	        events.push(listeners);
	      }
	    } else {
	      for (var i = 0, length = listeners.length; i < length; i++) {
	        if (
	             listeners[i].fn !== fn
	          || (once && !listeners[i].once)
	          || (context && listeners[i].context !== context)
	        ) {
	          events.push(listeners[i]);
	        }
	      }
	    }
	  }

	  //
	  // Reset the array, or remove it completely if we have no more listeners.
	  //
	  if (events.length) {
	    this._events[evt] = events.length === 1 ? events[0] : events;
	  } else {
	    delete this._events[evt];
	  }

	  return this;
	};

	/**
	 * Remove all listeners or only the listeners for the specified event.
	 *
	 * @param {String} event The event want to remove all listeners for.
	 * @api public
	 */
	EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
	  if (!this._events) return this;

	  if (event) delete this._events[prefix ? prefix + event : event];
	  else this._events = prefix ? {} : Object.create(null);

	  return this;
	};

	//
	// Alias methods names because people roll like that.
	//
	EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
	EventEmitter.prototype.addListener = EventEmitter.prototype.on;

	//
	// This function doesn't apply anymore.
	//
	EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
	  return this;
	};

	//
	// Expose the prefix.
	//
	EventEmitter.prefixed = prefix;

	//
	// Expose the module.
	//
	if (true) {
	  module.exports = EventEmitter;
	}


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Internal module used to create static and instance join methods
	 */

	"use strict";

	var createStore = __webpack_require__(261),
	    _ = __webpack_require__(256);

	var slice = Array.prototype.slice,
	    strategyMethodNames = {
	    strict: "joinStrict",
	    first: "joinLeading",
	    last: "joinTrailing",
	    all: "joinConcat"
	};

	/**
	 * Used in `index.js` to create the static join methods
	 * @param {String} strategy Which strategy to use when tracking listenable trigger arguments
	 * @returns {Function} A static function which returns a store with a join listen on the given listenables using the given strategy
	 */
	exports.staticJoinCreator = function (strategy) {
	    return function () /* listenables... */{
	        var listenables = slice.call(arguments);
	        return createStore({
	            init: function init() {
	                this[strategyMethodNames[strategy]].apply(this, listenables.concat("triggerAsync"));
	            }
	        });
	    };
	};

	/**
	 * Used in `ListenerMethods.js` to create the instance join methods
	 * @param {String} strategy Which strategy to use when tracking listenable trigger arguments
	 * @returns {Function} An instance method which sets up a join listen on the given listenables using the given strategy
	 */
	exports.instanceJoinCreator = function (strategy) {
	    return function () /* listenables..., callback*/{
	        _.throwIf(arguments.length < 2, "Cannot create a join with less than 2 listenables!");
	        var listenables = slice.call(arguments),
	            callback = listenables.pop(),
	            numberOfListenables = listenables.length,
	            join = {
	            numberOfListenables: numberOfListenables,
	            callback: this[callback] || callback,
	            listener: this,
	            strategy: strategy
	        },
	            i,
	            cancels = [],
	            subobj;
	        for (i = 0; i < numberOfListenables; i++) {
	            _.throwIf(this.validateListening(listenables[i]));
	        }
	        for (i = 0; i < numberOfListenables; i++) {
	            cancels.push(listenables[i].listen(newListener(i, join), this));
	        }
	        reset(join);
	        subobj = { listenable: listenables };
	        subobj.stop = makeStopper(subobj, cancels, this);
	        this.subscriptions = (this.subscriptions || []).concat(subobj);
	        return subobj;
	    };
	};

	// ---- internal join functions ----

	function makeStopper(subobj, cancels, context) {
	    return function () {
	        var i,
	            subs = context.subscriptions,
	            index = subs ? subs.indexOf(subobj) : -1;
	        _.throwIf(index === -1, "Tried to remove join already gone from subscriptions list!");
	        for (i = 0; i < cancels.length; i++) {
	            cancels[i]();
	        }
	        subs.splice(index, 1);
	    };
	}

	function reset(join) {
	    join.listenablesEmitted = new Array(join.numberOfListenables);
	    join.args = new Array(join.numberOfListenables);
	}

	function newListener(i, join) {
	    return function () {
	        var callargs = slice.call(arguments);
	        if (join.listenablesEmitted[i]) {
	            switch (join.strategy) {
	                case "strict":
	                    throw new Error("Strict join failed because listener triggered twice.");
	                case "last":
	                    join.args[i] = callargs;break;
	                case "all":
	                    join.args[i].push(callargs);
	            }
	        } else {
	            join.listenablesEmitted[i] = true;
	            join.args[i] = join.strategy === "all" ? [callargs] : callargs;
	        }
	        emitIfAllListenablesEmitted(join);
	    };
	}

	function emitIfAllListenablesEmitted(join) {
	    for (var i = 0; i < join.numberOfListenables; i++) {
	        if (!join.listenablesEmitted[i]) {
	            return;
	        }
	    }
	    join.callback.apply(join.listener, join.args);
	    reset(join);
	}

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _ = __webpack_require__(256),
	    Keep = __webpack_require__(262),
	    mixer = __webpack_require__(263),
	    bindMethods = __webpack_require__(264);

	var allowed = { preEmit: 1, shouldEmit: 1 };

	/**
	 * Creates an event emitting Data Store. It is mixed in with functions
	 * from the `ListenerMethods` and `PublisherMethods` mixins. `preEmit`
	 * and `shouldEmit` may be overridden in the definition object.
	 *
	 * @param {Object} definition The data store object definition
	 * @returns {Store} A data store instance
	 */
	module.exports = function (definition) {

	    var StoreMethods = __webpack_require__(265),
	        PublisherMethods = __webpack_require__(266),
	        ListenerMethods = __webpack_require__(255);

	    definition = definition || {};

	    for (var a in StoreMethods) {
	        if (!allowed[a] && (PublisherMethods[a] || ListenerMethods[a])) {
	            throw new Error("Cannot override API method " + a + " in Reflux.StoreMethods. Use another method name or override it on Reflux.PublisherMethods / Reflux.ListenerMethods instead.");
	        }
	    }

	    for (var d in definition) {
	        if (!allowed[d] && (PublisherMethods[d] || ListenerMethods[d])) {
	            throw new Error("Cannot override API method " + d + " in store creation. Use another method name or override it on Reflux.PublisherMethods / Reflux.ListenerMethods instead.");
	        }
	    }

	    definition = mixer(definition);

	    function Store() {
	        var i = 0,
	            arr;
	        this.subscriptions = [];
	        this.emitter = new _.EventEmitter();
	        this.eventLabel = "change";
	        bindMethods(this, definition);
	        if (this.init && _.isFunction(this.init)) {
	            this.init();
	        }
	        if (this.listenables) {
	            arr = [].concat(this.listenables);
	            for (; i < arr.length; i++) {
	                this.listenToMany(arr[i]);
	            }
	        }
	    }

	    _.extend(Store.prototype, ListenerMethods, PublisherMethods, StoreMethods, definition);

	    var store = new Store();
	    Keep.createdStores.push(store);

	    return store;
	};

/***/ },
/* 262 */
/***/ function(module, exports) {

	"use strict";

	exports.createdStores = [];

	exports.createdActions = [];

	exports.reset = function () {
	    while (exports.createdStores.length) {
	        exports.createdStores.pop();
	    }
	    while (exports.createdActions.length) {
	        exports.createdActions.pop();
	    }
	};

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _ = __webpack_require__(256);

	module.exports = function mix(def) {
	    var composed = {
	        init: [],
	        preEmit: [],
	        shouldEmit: []
	    };

	    var updated = (function mixDef(mixin) {
	        var mixed = {};
	        if (mixin.mixins) {
	            mixin.mixins.forEach(function (subMixin) {
	                _.extend(mixed, mixDef(subMixin));
	            });
	        }
	        _.extend(mixed, mixin);
	        Object.keys(composed).forEach(function (composable) {
	            if (mixin.hasOwnProperty(composable)) {
	                composed[composable].push(mixin[composable]);
	            }
	        });
	        return mixed;
	    })(def);

	    if (composed.init.length > 1) {
	        updated.init = function () {
	            var args = arguments;
	            composed.init.forEach(function (init) {
	                init.apply(this, args);
	            }, this);
	        };
	    }
	    if (composed.preEmit.length > 1) {
	        updated.preEmit = function () {
	            return composed.preEmit.reduce((function (args, preEmit) {
	                var newValue = preEmit.apply(this, args);
	                return newValue === undefined ? args : [newValue];
	            }).bind(this), arguments);
	        };
	    }
	    if (composed.shouldEmit.length > 1) {
	        updated.shouldEmit = function () {
	            var args = arguments;
	            return !composed.shouldEmit.some(function (shouldEmit) {
	                return !shouldEmit.apply(this, args);
	            }, this);
	        };
	    }
	    Object.keys(composed).forEach(function (composable) {
	        if (composed[composable].length === 1) {
	            updated[composable] = composed[composable][0];
	        }
	    });

	    return updated;
	};

/***/ },
/* 264 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (store, definition) {
	    for (var name in definition) {
	        if (Object.getOwnPropertyDescriptor && Object.defineProperty) {
	            var propertyDescriptor = Object.getOwnPropertyDescriptor(definition, name);

	            if (!propertyDescriptor.value || typeof propertyDescriptor.value !== "function" || !definition.hasOwnProperty(name)) {
	                continue;
	            }

	            store[name] = definition[name].bind(store);
	        } else {
	            var property = definition[name];

	            if (typeof property !== "function" || !definition.hasOwnProperty(name)) {
	                continue;
	            }

	            store[name] = property.bind(store);
	        }
	    }

	    return store;
	};

/***/ },
/* 265 */
/***/ function(module, exports) {

	/**
	 * A module of methods that you want to include in all stores.
	 * This module is consumed by `createStore`.
	 */
	"use strict";

	module.exports = {};

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _ = __webpack_require__(256);

	/**
	 * A module of methods for object that you want to be able to listen to.
	 * This module is consumed by `createStore` and `createAction`
	 */
	module.exports = {

	    /**
	     * Hook used by the publisher that is invoked before emitting
	     * and before `shouldEmit`. The arguments are the ones that the action
	     * is invoked with. If this function returns something other than
	     * undefined, that will be passed on as arguments for shouldEmit and
	     * emission.
	     */
	    preEmit: function preEmit() {},

	    /**
	     * Hook used by the publisher after `preEmit` to determine if the
	     * event should be emitted with given arguments. This may be overridden
	     * in your application, default implementation always returns true.
	     *
	     * @returns {Boolean} true if event should be emitted
	     */
	    shouldEmit: function shouldEmit() {
	        return true;
	    },

	    /**
	     * Subscribes the given callback for action triggered
	     *
	     * @param {Function} callback The callback to register as event handler
	     * @param {Mixed} [optional] bindContext The context to bind the callback with
	     * @returns {Function} Callback that unsubscribes the registered event handler
	     */
	    listen: function listen(callback, bindContext) {
	        bindContext = bindContext || this;
	        var eventHandler = function eventHandler(args) {
	            if (aborted) {
	                return;
	            }
	            callback.apply(bindContext, args);
	        },
	            me = this,
	            aborted = false;
	        this.emitter.addListener(this.eventLabel, eventHandler);
	        return function () {
	            aborted = true;
	            me.emitter.removeListener(me.eventLabel, eventHandler);
	        };
	    },

	    /**
	     * Attach handlers to promise that trigger the completed and failed
	     * child publishers, if available.
	     *
	     * @param {Object} The promise to attach to
	     */
	    promise: function promise(_promise) {
	        var me = this;

	        var canHandlePromise = this.children.indexOf("completed") >= 0 && this.children.indexOf("failed") >= 0;

	        if (!canHandlePromise) {
	            throw new Error("Publisher must have \"completed\" and \"failed\" child publishers");
	        }

	        _promise.then(function (response) {
	            return me.completed(response);
	        }, function (error) {
	            return me.failed(error);
	        });
	    },

	    /**
	     * Subscribes the given callback for action triggered, which should
	     * return a promise that in turn is passed to `this.promise`
	     *
	     * @param {Function} callback The callback to register as event handler
	     */
	    listenAndPromise: function listenAndPromise(callback, bindContext) {
	        var me = this;
	        bindContext = bindContext || this;
	        this.willCallPromise = (this.willCallPromise || 0) + 1;

	        var removeListen = this.listen(function () {

	            if (!callback) {
	                throw new Error("Expected a function returning a promise but got " + callback);
	            }

	            var args = arguments,
	                promise = callback.apply(bindContext, args);
	            return me.promise.call(me, promise);
	        }, bindContext);

	        return function () {
	            me.willCallPromise--;
	            removeListen.call(me);
	        };
	    },

	    /**
	     * Publishes an event using `this.emitter` (if `shouldEmit` agrees)
	     */
	    trigger: function trigger() {
	        var args = arguments,
	            pre = this.preEmit.apply(this, args);
	        args = pre === undefined ? args : _.isArguments(pre) ? pre : [].concat(pre);
	        if (this.shouldEmit.apply(this, args)) {
	            this.emitter.emit(this.eventLabel, args);
	        }
	    },

	    /**
	     * Tries to publish the event on the next tick
	     */
	    triggerAsync: function triggerAsync() {
	        var args = arguments,
	            me = this;
	        _.nextTick(function () {
	            me.trigger.apply(me, args);
	        });
	    },

	    /**
	     * Returns a Promise for the triggered action
	     *
	     * @return {Promise}
	     *   Resolved by completed child action.
	     *   Rejected by failed child action.
	     *   If listenAndPromise'd, then promise associated to this trigger.
	     *   Otherwise, the promise is for next child action completion.
	     */
	    triggerPromise: function triggerPromise() {
	        var me = this;
	        var args = arguments;

	        var canHandlePromise = this.children.indexOf("completed") >= 0 && this.children.indexOf("failed") >= 0;

	        var promise = _.createPromise(function (resolve, reject) {
	            // If `listenAndPromise` is listening
	            // patch `promise` w/ context-loaded resolve/reject
	            if (me.willCallPromise) {
	                _.nextTick(function () {
	                    var previousPromise = me.promise;
	                    me.promise = function (inputPromise) {
	                        inputPromise.then(resolve, reject);
	                        // Back to your regularly schedule programming.
	                        me.promise = previousPromise;
	                        return me.promise.apply(me, arguments);
	                    };
	                    me.trigger.apply(me, args);
	                });
	                return;
	            }

	            if (canHandlePromise) {
	                var removeSuccess = me.completed.listen(function (argsArr) {
	                    removeSuccess();
	                    removeFailed();
	                    resolve(argsArr);
	                });

	                var removeFailed = me.failed.listen(function (argsArr) {
	                    removeSuccess();
	                    removeFailed();
	                    reject(argsArr);
	                });
	            }

	            me.triggerAsync.apply(me, args);

	            if (!canHandlePromise) {
	                resolve();
	            }
	        });

	        return promise;
	    }
	};

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _ = __webpack_require__(256),
	    ActionMethods = __webpack_require__(254),
	    PublisherMethods = __webpack_require__(266),
	    Keep = __webpack_require__(262);

	var allowed = { preEmit: 1, shouldEmit: 1 };

	/**
	 * Creates an action functor object. It is mixed in with functions
	 * from the `PublisherMethods` mixin. `preEmit` and `shouldEmit` may
	 * be overridden in the definition object.
	 *
	 * @param {Object} definition The action object definition
	 */
	var createAction = function createAction(definition) {

	    definition = definition || {};
	    if (!_.isObject(definition)) {
	        definition = { actionName: definition };
	    }

	    for (var a in ActionMethods) {
	        if (!allowed[a] && PublisherMethods[a]) {
	            throw new Error("Cannot override API method " + a + " in Reflux.ActionMethods. Use another method name or override it on Reflux.PublisherMethods instead.");
	        }
	    }

	    for (var d in definition) {
	        if (!allowed[d] && PublisherMethods[d]) {
	            throw new Error("Cannot override API method " + d + " in action creation. Use another method name or override it on Reflux.PublisherMethods instead.");
	        }
	    }

	    definition.children = definition.children || [];
	    if (definition.asyncResult) {
	        definition.children = definition.children.concat(["completed", "failed"]);
	    }

	    var i = 0,
	        childActions = {};
	    for (; i < definition.children.length; i++) {
	        var name = definition.children[i];
	        childActions[name] = createAction(name);
	    }

	    var context = _.extend({
	        eventLabel: "action",
	        emitter: new _.EventEmitter(),
	        _isAction: true
	    }, PublisherMethods, ActionMethods, definition);

	    var functor = function functor() {
	        var triggerType = functor.sync ? "trigger" : _.environment.hasPromise ? "triggerPromise" : "triggerAsync";
	        return functor[triggerType].apply(functor, arguments);
	    };

	    _.extend(functor, childActions, context);

	    Keep.createdActions.push(functor);

	    return functor;
	};

	module.exports = createAction;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var ListenerMethods = __webpack_require__(255),
	    ListenerMixin = __webpack_require__(269),
	    _ = __webpack_require__(256);

	module.exports = function(listenable,key){
	    return {
	        getInitialState: function(){
	            if (!_.isFunction(listenable.getInitialState)) {
	                return {};
	            } else if (key === undefined) {
	                return listenable.getInitialState();
	            } else {
	                return _.object([key],[listenable.getInitialState()]);
	            }
	        },
	        componentDidMount: function(){
	            _.extend(this,ListenerMethods);
	            var me = this, cb = (key === undefined ? this.setState : function(v){
	                if (typeof me.isMounted === "undefined" || me.isMounted() === true) {
	                    me.setState(_.object([key],[v]));
	                }
	            });
	            this.listenTo(listenable,cb);
	        },
	        componentWillUnmount: ListenerMixin.componentWillUnmount
	    };
	};


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(256),
	    ListenerMethods = __webpack_require__(255);

	/**
	 * A module meant to be consumed as a mixin by a React component. Supplies the methods from
	 * `ListenerMethods` mixin and takes care of teardown of subscriptions.
	 * Note that if you're using the `connect` mixin you don't need this mixin, as connect will
	 * import everything this mixin contains!
	 */
	module.exports = _.extend({

	    /**
	     * Cleans up all listener previously registered.
	     */
	    componentWillUnmount: ListenerMethods.stopListeningToAll

	}, ListenerMethods);


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var ListenerMethods = __webpack_require__(255),
	    ListenerMixin = __webpack_require__(269),
	    _ = __webpack_require__(256);

	module.exports = function(listenable, key, filterFunc) {
	    filterFunc = _.isFunction(key) ? key : filterFunc;
	    return {
	        getInitialState: function() {
	            if (!_.isFunction(listenable.getInitialState)) {
	                return {};
	            } else if (_.isFunction(key)) {
	                return filterFunc.call(this, listenable.getInitialState());
	            } else {
	                // Filter initial payload from store.
	                var result = filterFunc.call(this, listenable.getInitialState());
	                if (typeof(result) !== "undefined") {
	                    return _.object([key], [result]);
	                } else {
	                    return {};
	                }
	            }
	        },
	        componentDidMount: function() {
	            _.extend(this, ListenerMethods);
	            var me = this;
	            var cb = function(value) {
	                if (_.isFunction(key)) {
	                    me.setState(filterFunc.call(me, value));
	                } else {
	                    var result = filterFunc.call(me, value);
	                    me.setState(_.object([key], [result]));
	                }
	            };

	            this.listenTo(listenable, cb);
	        },
	        componentWillUnmount: ListenerMixin.componentWillUnmount
	    };
	};



/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var ListenerMethods = __webpack_require__(255);

	/**
	 * A mixin factory for a React component. Meant as a more convenient way of using the `ListenerMixin`,
	 * without having to manually set listeners in the `componentDidMount` method.
	 *
	 * @param {Action|Store} listenable An Action or Store that should be
	 *  listened to.
	 * @param {Function|String} callback The callback to register as event handler
	 * @param {Function|String} defaultCallback The callback to register as default handler
	 * @returns {Object} An object to be used as a mixin, which sets up the listener for the given listenable.
	 */
	module.exports = function(listenable,callback,initial){
	    return {
	        /**
	         * Set up the mixin before the initial rendering occurs. Import methods from `ListenerMethods`
	         * and then make the call to `listenTo` with the arguments provided to the factory function
	         */
	        componentDidMount: function() {
	            for(var m in ListenerMethods){
	                if (this[m] !== ListenerMethods[m]){
	                    if (this[m]){
	                        throw "Can't have other property '"+m+"' when using Reflux.listenTo!";
	                    }
	                    this[m] = ListenerMethods[m];
	                }
	            }
	            this.listenTo(listenable,callback,initial);
	        },
	        /**
	         * Cleans up all listener previously registered.
	         */
	        componentWillUnmount: ListenerMethods.stopListeningToAll
	    };
	};


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var ListenerMethods = __webpack_require__(255);

	/**
	 * A mixin factory for a React component. Meant as a more convenient way of using the `listenerMixin`,
	 * without having to manually set listeners in the `componentDidMount` method. This version is used
	 * to automatically set up a `listenToMany` call.
	 *
	 * @param {Object} listenables An object of listenables
	 * @returns {Object} An object to be used as a mixin, which sets up the listeners for the given listenables.
	 */
	module.exports = function(listenables){
	    return {
	        /**
	         * Set up the mixin before the initial rendering occurs. Import methods from `ListenerMethods`
	         * and then make the call to `listenTo` with the arguments provided to the factory function
	         */
	        componentDidMount: function() {
	            for(var m in ListenerMethods){
	                if (this[m] !== ListenerMethods[m]){
	                    if (this[m]){
	                        throw "Can't have other property '"+m+"' when using Reflux.listenToMany!";
	                    }
	                    this[m] = ListenerMethods[m];
	                }
	            }
	            this.listenToMany(listenables);
	        },
	        /**
	         * Cleans up all listener previously registered.
	         */
	        componentWillUnmount: ListenerMethods.stopListeningToAll
	    };
	};


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var request = __webpack_require__(274);

	var _headers = { 'Accept': 'application/json' };

	var _timeout = 10000; // 10s

	// convert params to string, to deal with array values
	function buildQueryParams(params) {
	  var result = [];
	  for (var property in params) {
	    if (params.hasOwnProperty(property)) {
	      var value = params[property];
	      if (null !== value && undefined !== value) {
	        if (Array.isArray(value)) {
	          for (var i = 0; i < value.length; i++) {
	            result.push(property + '=' + value[i]);
	          }
	        } else {
	          result.push(property + '=' + value);
	        }
	      }
	    }
	  }
	  return result.join('&');
	}

	var Rest = {

	  setTimeout: function setTimeout(timeout) {
	    _timeout = timeout;
	  },

	  setHeaders: function setHeaders(headers) {
	    _headers = headers;
	  },

	  setHeader: function setHeader(name, value) {
	    _headers[name] = value;
	  },

	  head: function head(uri, params) {
	    var op = request.head(uri).query(buildQueryParams(params));
	    op.timeout(_timeout);
	    op.set(_headers);
	    return op;
	  },

	  get: function get(uri, params) {
	    var op = request.get(uri).query(buildQueryParams(params));
	    op.timeout(_timeout);
	    op.set(_headers);
	    return op;
	  },

	  patch: function patch(uri, data) {
	    var op = request.patch(uri).send(data);
	    op.timeout(_timeout);
	    op.set(_headers);
	    return op;
	  },

	  post: function post(uri, data) {
	    var op = request.post(uri).send(data);
	    op.timeout(_timeout);
	    op.set(_headers);
	    return op;
	  },

	  put: function put(uri, data) {
	    var op = request.put(uri).send(data);
	    op.timeout(_timeout);
	    op.set(_headers);
	    return op;
	  },

	  del: function del(uri) {
	    var op = request.del(uri);
	    op.timeout(_timeout);
	    op.set(_headers);
	    return op;
	  }
	};

	module.exports = Rest;

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies.
	 */

	var Emitter = __webpack_require__(275);
	var reduce = __webpack_require__(276);

	/**
	 * Root reference for iframes.
	 */

	var root = 'undefined' == typeof window
	  ? (this || self)
	  : window;

	/**
	 * Noop.
	 */

	function noop(){};

	/**
	 * Check if `obj` is a host object,
	 * we don't want to serialize these :)
	 *
	 * TODO: future proof, move to compoent land
	 *
	 * @param {Object} obj
	 * @return {Boolean}
	 * @api private
	 */

	function isHost(obj) {
	  var str = {}.toString.call(obj);

	  switch (str) {
	    case '[object File]':
	    case '[object Blob]':
	    case '[object FormData]':
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Determine XHR.
	 */

	request.getXHR = function () {
	  if (root.XMLHttpRequest
	      && (!root.location || 'file:' != root.location.protocol
	          || !root.ActiveXObject)) {
	    return new XMLHttpRequest;
	  } else {
	    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}
	    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}
	    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}
	    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}
	  }
	  return false;
	};

	/**
	 * Removes leading and trailing whitespace, added to support IE.
	 *
	 * @param {String} s
	 * @return {String}
	 * @api private
	 */

	var trim = ''.trim
	  ? function(s) { return s.trim(); }
	  : function(s) { return s.replace(/(^\s*|\s*$)/g, ''); };

	/**
	 * Check if `obj` is an object.
	 *
	 * @param {Object} obj
	 * @return {Boolean}
	 * @api private
	 */

	function isObject(obj) {
	  return obj === Object(obj);
	}

	/**
	 * Serialize the given `obj`.
	 *
	 * @param {Object} obj
	 * @return {String}
	 * @api private
	 */

	function serialize(obj) {
	  if (!isObject(obj)) return obj;
	  var pairs = [];
	  for (var key in obj) {
	    if (null != obj[key]) {
	      pairs.push(encodeURIComponent(key)
	        + '=' + encodeURIComponent(obj[key]));
	    }
	  }
	  return pairs.join('&');
	}

	/**
	 * Expose serialization method.
	 */

	 request.serializeObject = serialize;

	 /**
	  * Parse the given x-www-form-urlencoded `str`.
	  *
	  * @param {String} str
	  * @return {Object}
	  * @api private
	  */

	function parseString(str) {
	  var obj = {};
	  var pairs = str.split('&');
	  var parts;
	  var pair;

	  for (var i = 0, len = pairs.length; i < len; ++i) {
	    pair = pairs[i];
	    parts = pair.split('=');
	    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);
	  }

	  return obj;
	}

	/**
	 * Expose parser.
	 */

	request.parseString = parseString;

	/**
	 * Default MIME type map.
	 *
	 *     superagent.types.xml = 'application/xml';
	 *
	 */

	request.types = {
	  html: 'text/html',
	  json: 'application/json',
	  xml: 'application/xml',
	  urlencoded: 'application/x-www-form-urlencoded',
	  'form': 'application/x-www-form-urlencoded',
	  'form-data': 'application/x-www-form-urlencoded'
	};

	/**
	 * Default serialization map.
	 *
	 *     superagent.serialize['application/xml'] = function(obj){
	 *       return 'generated xml here';
	 *     };
	 *
	 */

	 request.serialize = {
	   'application/x-www-form-urlencoded': serialize,
	   'application/json': JSON.stringify
	 };

	 /**
	  * Default parsers.
	  *
	  *     superagent.parse['application/xml'] = function(str){
	  *       return { object parsed from str };
	  *     };
	  *
	  */

	request.parse = {
	  'application/x-www-form-urlencoded': parseString,
	  'application/json': JSON.parse
	};

	/**
	 * Parse the given header `str` into
	 * an object containing the mapped fields.
	 *
	 * @param {String} str
	 * @return {Object}
	 * @api private
	 */

	function parseHeader(str) {
	  var lines = str.split(/\r?\n/);
	  var fields = {};
	  var index;
	  var line;
	  var field;
	  var val;

	  lines.pop(); // trailing CRLF

	  for (var i = 0, len = lines.length; i < len; ++i) {
	    line = lines[i];
	    index = line.indexOf(':');
	    field = line.slice(0, index).toLowerCase();
	    val = trim(line.slice(index + 1));
	    fields[field] = val;
	  }

	  return fields;
	}

	/**
	 * Return the mime type for the given `str`.
	 *
	 * @param {String} str
	 * @return {String}
	 * @api private
	 */

	function type(str){
	  return str.split(/ *; */).shift();
	};

	/**
	 * Return header field parameters.
	 *
	 * @param {String} str
	 * @return {Object}
	 * @api private
	 */

	function params(str){
	  return reduce(str.split(/ *; */), function(obj, str){
	    var parts = str.split(/ *= */)
	      , key = parts.shift()
	      , val = parts.shift();

	    if (key && val) obj[key] = val;
	    return obj;
	  }, {});
	};

	/**
	 * Initialize a new `Response` with the given `xhr`.
	 *
	 *  - set flags (.ok, .error, etc)
	 *  - parse header
	 *
	 * Examples:
	 *
	 *  Aliasing `superagent` as `request` is nice:
	 *
	 *      request = superagent;
	 *
	 *  We can use the promise-like API, or pass callbacks:
	 *
	 *      request.get('/').end(function(res){});
	 *      request.get('/', function(res){});
	 *
	 *  Sending data can be chained:
	 *
	 *      request
	 *        .post('/user')
	 *        .send({ name: 'tj' })
	 *        .end(function(res){});
	 *
	 *  Or passed to `.send()`:
	 *
	 *      request
	 *        .post('/user')
	 *        .send({ name: 'tj' }, function(res){});
	 *
	 *  Or passed to `.post()`:
	 *
	 *      request
	 *        .post('/user', { name: 'tj' })
	 *        .end(function(res){});
	 *
	 * Or further reduced to a single call for simple cases:
	 *
	 *      request
	 *        .post('/user', { name: 'tj' }, function(res){});
	 *
	 * @param {XMLHTTPRequest} xhr
	 * @param {Object} options
	 * @api private
	 */

	function Response(req, options) {
	  options = options || {};
	  this.req = req;
	  this.xhr = this.req.xhr;
	  // responseText is accessible only if responseType is '' or 'text' and on older browsers
	  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')
	     ? this.xhr.responseText
	     : null;
	  this.statusText = this.req.xhr.statusText;
	  this.setStatusProperties(this.xhr.status);
	  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());
	  // getAllResponseHeaders sometimes falsely returns "" for CORS requests, but
	  // getResponseHeader still works. so we get content-type even if getting
	  // other headers fails.
	  this.header['content-type'] = this.xhr.getResponseHeader('content-type');
	  this.setHeaderProperties(this.header);
	  this.body = this.req.method != 'HEAD'
	    ? this.parseBody(this.text ? this.text : this.xhr.response)
	    : null;
	}

	/**
	 * Get case-insensitive `field` value.
	 *
	 * @param {String} field
	 * @return {String}
	 * @api public
	 */

	Response.prototype.get = function(field){
	  return this.header[field.toLowerCase()];
	};

	/**
	 * Set header related properties:
	 *
	 *   - `.type` the content type without params
	 *
	 * A response of "Content-Type: text/plain; charset=utf-8"
	 * will provide you with a `.type` of "text/plain".
	 *
	 * @param {Object} header
	 * @api private
	 */

	Response.prototype.setHeaderProperties = function(header){
	  // content-type
	  var ct = this.header['content-type'] || '';
	  this.type = type(ct);

	  // params
	  var obj = params(ct);
	  for (var key in obj) this[key] = obj[key];
	};

	/**
	 * Parse the given body `str`.
	 *
	 * Used for auto-parsing of bodies. Parsers
	 * are defined on the `superagent.parse` object.
	 *
	 * @param {String} str
	 * @return {Mixed}
	 * @api private
	 */

	Response.prototype.parseBody = function(str){
	  var parse = request.parse[this.type];
	  return parse && str && (str.length || str instanceof Object)
	    ? parse(str)
	    : null;
	};

	/**
	 * Set flags such as `.ok` based on `status`.
	 *
	 * For example a 2xx response will give you a `.ok` of __true__
	 * whereas 5xx will be __false__ and `.error` will be __true__. The
	 * `.clientError` and `.serverError` are also available to be more
	 * specific, and `.statusType` is the class of error ranging from 1..5
	 * sometimes useful for mapping respond colors etc.
	 *
	 * "sugar" properties are also defined for common cases. Currently providing:
	 *
	 *   - .noContent
	 *   - .badRequest
	 *   - .unauthorized
	 *   - .notAcceptable
	 *   - .notFound
	 *
	 * @param {Number} status
	 * @api private
	 */

	Response.prototype.setStatusProperties = function(status){
	  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
	  if (status === 1223) {
	    status = 204;
	  }

	  var type = status / 100 | 0;

	  // status / class
	  this.status = status;
	  this.statusType = type;

	  // basics
	  this.info = 1 == type;
	  this.ok = 2 == type;
	  this.clientError = 4 == type;
	  this.serverError = 5 == type;
	  this.error = (4 == type || 5 == type)
	    ? this.toError()
	    : false;

	  // sugar
	  this.accepted = 202 == status;
	  this.noContent = 204 == status;
	  this.badRequest = 400 == status;
	  this.unauthorized = 401 == status;
	  this.notAcceptable = 406 == status;
	  this.notFound = 404 == status;
	  this.forbidden = 403 == status;
	};

	/**
	 * Return an `Error` representative of this response.
	 *
	 * @return {Error}
	 * @api public
	 */

	Response.prototype.toError = function(){
	  var req = this.req;
	  var method = req.method;
	  var url = req.url;

	  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';
	  var err = new Error(msg);
	  err.status = this.status;
	  err.method = method;
	  err.url = url;

	  return err;
	};

	/**
	 * Expose `Response`.
	 */

	request.Response = Response;

	/**
	 * Initialize a new `Request` with the given `method` and `url`.
	 *
	 * @param {String} method
	 * @param {String} url
	 * @api public
	 */

	function Request(method, url) {
	  var self = this;
	  Emitter.call(this);
	  this._query = this._query || [];
	  this.method = method;
	  this.url = url;
	  this.header = {};
	  this._header = {};
	  this.on('end', function(){
	    var err = null;
	    var res = null;

	    try {
	      res = new Response(self);
	    } catch(e) {
	      err = new Error('Parser is unable to parse the response');
	      err.parse = true;
	      err.original = e;
	      return self.callback(err);
	    }

	    self.emit('response', res);

	    if (err) {
	      return self.callback(err, res);
	    }

	    if (res.status >= 200 && res.status < 300) {
	      return self.callback(err, res);
	    }

	    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');
	    new_err.original = err;
	    new_err.response = res;
	    new_err.status = res.status;

	    self.callback(new_err, res);
	  });
	}

	/**
	 * Mixin `Emitter`.
	 */

	Emitter(Request.prototype);

	/**
	 * Allow for extension
	 */

	Request.prototype.use = function(fn) {
	  fn(this);
	  return this;
	}

	/**
	 * Set timeout to `ms`.
	 *
	 * @param {Number} ms
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.timeout = function(ms){
	  this._timeout = ms;
	  return this;
	};

	/**
	 * Clear previous timeout.
	 *
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.clearTimeout = function(){
	  this._timeout = 0;
	  clearTimeout(this._timer);
	  return this;
	};

	/**
	 * Abort the request, and clear potential timeout.
	 *
	 * @return {Request}
	 * @api public
	 */

	Request.prototype.abort = function(){
	  if (this.aborted) return;
	  this.aborted = true;
	  this.xhr.abort();
	  this.clearTimeout();
	  this.emit('abort');
	  return this;
	};

	/**
	 * Set header `field` to `val`, or multiple fields with one object.
	 *
	 * Examples:
	 *
	 *      req.get('/')
	 *        .set('Accept', 'application/json')
	 *        .set('X-API-Key', 'foobar')
	 *        .end(callback);
	 *
	 *      req.get('/')
	 *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })
	 *        .end(callback);
	 *
	 * @param {String|Object} field
	 * @param {String} val
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.set = function(field, val){
	  if (isObject(field)) {
	    for (var key in field) {
	      this.set(key, field[key]);
	    }
	    return this;
	  }
	  this._header[field.toLowerCase()] = val;
	  this.header[field] = val;
	  return this;
	};

	/**
	 * Remove header `field`.
	 *
	 * Example:
	 *
	 *      req.get('/')
	 *        .unset('User-Agent')
	 *        .end(callback);
	 *
	 * @param {String} field
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.unset = function(field){
	  delete this._header[field.toLowerCase()];
	  delete this.header[field];
	  return this;
	};

	/**
	 * Get case-insensitive header `field` value.
	 *
	 * @param {String} field
	 * @return {String}
	 * @api private
	 */

	Request.prototype.getHeader = function(field){
	  return this._header[field.toLowerCase()];
	};

	/**
	 * Set Content-Type to `type`, mapping values from `request.types`.
	 *
	 * Examples:
	 *
	 *      superagent.types.xml = 'application/xml';
	 *
	 *      request.post('/')
	 *        .type('xml')
	 *        .send(xmlstring)
	 *        .end(callback);
	 *
	 *      request.post('/')
	 *        .type('application/xml')
	 *        .send(xmlstring)
	 *        .end(callback);
	 *
	 * @param {String} type
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.type = function(type){
	  this.set('Content-Type', request.types[type] || type);
	  return this;
	};

	/**
	 * Set Accept to `type`, mapping values from `request.types`.
	 *
	 * Examples:
	 *
	 *      superagent.types.json = 'application/json';
	 *
	 *      request.get('/agent')
	 *        .accept('json')
	 *        .end(callback);
	 *
	 *      request.get('/agent')
	 *        .accept('application/json')
	 *        .end(callback);
	 *
	 * @param {String} accept
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.accept = function(type){
	  this.set('Accept', request.types[type] || type);
	  return this;
	};

	/**
	 * Set Authorization field value with `user` and `pass`.
	 *
	 * @param {String} user
	 * @param {String} pass
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.auth = function(user, pass){
	  var str = btoa(user + ':' + pass);
	  this.set('Authorization', 'Basic ' + str);
	  return this;
	};

	/**
	* Add query-string `val`.
	*
	* Examples:
	*
	*   request.get('/shoes')
	*     .query('size=10')
	*     .query({ color: 'blue' })
	*
	* @param {Object|String} val
	* @return {Request} for chaining
	* @api public
	*/

	Request.prototype.query = function(val){
	  if ('string' != typeof val) val = serialize(val);
	  if (val) this._query.push(val);
	  return this;
	};

	/**
	 * Write the field `name` and `val` for "multipart/form-data"
	 * request bodies.
	 *
	 * ``` js
	 * request.post('/upload')
	 *   .field('foo', 'bar')
	 *   .end(callback);
	 * ```
	 *
	 * @param {String} name
	 * @param {String|Blob|File} val
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.field = function(name, val){
	  if (!this._formData) this._formData = new root.FormData();
	  this._formData.append(name, val);
	  return this;
	};

	/**
	 * Queue the given `file` as an attachment to the specified `field`,
	 * with optional `filename`.
	 *
	 * ``` js
	 * request.post('/upload')
	 *   .attach(new Blob(['<a id="a"><b id="b">hey!</b></a>'], { type: "text/html"}))
	 *   .end(callback);
	 * ```
	 *
	 * @param {String} field
	 * @param {Blob|File} file
	 * @param {String} filename
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.attach = function(field, file, filename){
	  if (!this._formData) this._formData = new root.FormData();
	  this._formData.append(field, file, filename);
	  return this;
	};

	/**
	 * Send `data`, defaulting the `.type()` to "json" when
	 * an object is given.
	 *
	 * Examples:
	 *
	 *       // querystring
	 *       request.get('/search')
	 *         .end(callback)
	 *
	 *       // multiple data "writes"
	 *       request.get('/search')
	 *         .send({ search: 'query' })
	 *         .send({ range: '1..5' })
	 *         .send({ order: 'desc' })
	 *         .end(callback)
	 *
	 *       // manual json
	 *       request.post('/user')
	 *         .type('json')
	 *         .send('{"name":"tj"})
	 *         .end(callback)
	 *
	 *       // auto json
	 *       request.post('/user')
	 *         .send({ name: 'tj' })
	 *         .end(callback)
	 *
	 *       // manual x-www-form-urlencoded
	 *       request.post('/user')
	 *         .type('form')
	 *         .send('name=tj')
	 *         .end(callback)
	 *
	 *       // auto x-www-form-urlencoded
	 *       request.post('/user')
	 *         .type('form')
	 *         .send({ name: 'tj' })
	 *         .end(callback)
	 *
	 *       // defaults to x-www-form-urlencoded
	  *      request.post('/user')
	  *        .send('name=tobi')
	  *        .send('species=ferret')
	  *        .end(callback)
	 *
	 * @param {String|Object} data
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.send = function(data){
	  var obj = isObject(data);
	  var type = this.getHeader('Content-Type');

	  // merge
	  if (obj && isObject(this._data)) {
	    for (var key in data) {
	      this._data[key] = data[key];
	    }
	  } else if ('string' == typeof data) {
	    if (!type) this.type('form');
	    type = this.getHeader('Content-Type');
	    if ('application/x-www-form-urlencoded' == type) {
	      this._data = this._data
	        ? this._data + '&' + data
	        : data;
	    } else {
	      this._data = (this._data || '') + data;
	    }
	  } else {
	    this._data = data;
	  }

	  if (!obj || isHost(data)) return this;
	  if (!type) this.type('json');
	  return this;
	};

	/**
	 * Invoke the callback with `err` and `res`
	 * and handle arity check.
	 *
	 * @param {Error} err
	 * @param {Response} res
	 * @api private
	 */

	Request.prototype.callback = function(err, res){
	  var fn = this._callback;
	  this.clearTimeout();
	  fn(err, res);
	};

	/**
	 * Invoke callback with x-domain error.
	 *
	 * @api private
	 */

	Request.prototype.crossDomainError = function(){
	  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');
	  err.crossDomain = true;
	  this.callback(err);
	};

	/**
	 * Invoke callback with timeout error.
	 *
	 * @api private
	 */

	Request.prototype.timeoutError = function(){
	  var timeout = this._timeout;
	  var err = new Error('timeout of ' + timeout + 'ms exceeded');
	  err.timeout = timeout;
	  this.callback(err);
	};

	/**
	 * Enable transmission of cookies with x-domain requests.
	 *
	 * Note that for this to work the origin must not be
	 * using "Access-Control-Allow-Origin" with a wildcard,
	 * and also must set "Access-Control-Allow-Credentials"
	 * to "true".
	 *
	 * @api public
	 */

	Request.prototype.withCredentials = function(){
	  this._withCredentials = true;
	  return this;
	};

	/**
	 * Initiate request, invoking callback `fn(res)`
	 * with an instanceof `Response`.
	 *
	 * @param {Function} fn
	 * @return {Request} for chaining
	 * @api public
	 */

	Request.prototype.end = function(fn){
	  var self = this;
	  var xhr = this.xhr = request.getXHR();
	  var query = this._query.join('&');
	  var timeout = this._timeout;
	  var data = this._formData || this._data;

	  // store callback
	  this._callback = fn || noop;

	  // state change
	  xhr.onreadystatechange = function(){
	    if (4 != xhr.readyState) return;

	    // In IE9, reads to any property (e.g. status) off of an aborted XHR will
	    // result in the error "Could not complete the operation due to error c00c023f"
	    var status;
	    try { status = xhr.status } catch(e) { status = 0; }

	    if (0 == status) {
	      if (self.timedout) return self.timeoutError();
	      if (self.aborted) return;
	      return self.crossDomainError();
	    }
	    self.emit('end');
	  };

	  // progress
	  var handleProgress = function(e){
	    if (e.total > 0) {
	      e.percent = e.loaded / e.total * 100;
	    }
	    self.emit('progress', e);
	  };
	  if (this.hasListeners('progress')) {
	    xhr.onprogress = handleProgress;
	  }
	  try {
	    if (xhr.upload && this.hasListeners('progress')) {
	      xhr.upload.onprogress = handleProgress;
	    }
	  } catch(e) {
	    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.
	    // Reported here:
	    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context
	  }

	  // timeout
	  if (timeout && !this._timer) {
	    this._timer = setTimeout(function(){
	      self.timedout = true;
	      self.abort();
	    }, timeout);
	  }

	  // querystring
	  if (query) {
	    query = request.serializeObject(query);
	    this.url += ~this.url.indexOf('?')
	      ? '&' + query
	      : '?' + query;
	  }

	  // initiate request
	  xhr.open(this.method, this.url, true);

	  // CORS
	  if (this._withCredentials) xhr.withCredentials = true;

	  // body
	  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {
	    // serialize stuff
	    var contentType = this.getHeader('Content-Type');
	    var serialize = request.serialize[contentType ? contentType.split(';')[0] : ''];
	    if (serialize) data = serialize(data);
	  }

	  // set header fields
	  for (var field in this.header) {
	    if (null == this.header[field]) continue;
	    xhr.setRequestHeader(field, this.header[field]);
	  }

	  // send stuff
	  this.emit('request', this);
	  xhr.send(data);
	  return this;
	};

	/**
	 * Faux promise support
	 *
	 * @param {Function} fulfill
	 * @param {Function} reject
	 * @return {Request}
	 */

	Request.prototype.then = function (fulfill, reject) {
	  return this.end(function(err, res) {
	    err ? reject(err) : fulfill(res);
	  });
	}

	/**
	 * Expose `Request`.
	 */

	request.Request = Request;

	/**
	 * Issue a request:
	 *
	 * Examples:
	 *
	 *    request('GET', '/users').end(callback)
	 *    request('/users').end(callback)
	 *    request('/users', callback)
	 *
	 * @param {String} method
	 * @param {String|Function} url or callback
	 * @return {Request}
	 * @api public
	 */

	function request(method, url) {
	  // callback
	  if ('function' == typeof url) {
	    return new Request('GET', method).end(url);
	  }

	  // url first
	  if (1 == arguments.length) {
	    return new Request('GET', method);
	  }

	  return new Request(method, url);
	}

	/**
	 * GET `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} data or fn
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.get = function(url, data, fn){
	  var req = request('GET', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.query(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * HEAD `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} data or fn
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.head = function(url, data, fn){
	  var req = request('HEAD', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * DELETE `url` with optional callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.del = function(url, fn){
	  var req = request('DELETE', url);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * PATCH `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed} data
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.patch = function(url, data, fn){
	  var req = request('PATCH', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * POST `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed} data
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.post = function(url, data, fn){
	  var req = request('POST', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * PUT `url` with optional `data` and callback `fn(res)`.
	 *
	 * @param {String} url
	 * @param {Mixed|Function} data or fn
	 * @param {Function} fn
	 * @return {Request}
	 * @api public
	 */

	request.put = function(url, data, fn){
	  var req = request('PUT', url);
	  if ('function' == typeof data) fn = data, data = null;
	  if (data) req.send(data);
	  if (fn) req.end(fn);
	  return req;
	};

	/**
	 * Expose `request`.
	 */

	module.exports = request;


/***/ },
/* 275 */
/***/ function(module, exports) {

	
	/**
	 * Expose `Emitter`.
	 */

	module.exports = Emitter;

	/**
	 * Initialize a new `Emitter`.
	 *
	 * @api public
	 */

	function Emitter(obj) {
	  if (obj) return mixin(obj);
	};

	/**
	 * Mixin the emitter properties.
	 *
	 * @param {Object} obj
	 * @return {Object}
	 * @api private
	 */

	function mixin(obj) {
	  for (var key in Emitter.prototype) {
	    obj[key] = Emitter.prototype[key];
	  }
	  return obj;
	}

	/**
	 * Listen on the given `event` with `fn`.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.on =
	Emitter.prototype.addEventListener = function(event, fn){
	  this._callbacks = this._callbacks || {};
	  (this._callbacks[event] = this._callbacks[event] || [])
	    .push(fn);
	  return this;
	};

	/**
	 * Adds an `event` listener that will be invoked a single
	 * time then automatically removed.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.once = function(event, fn){
	  var self = this;
	  this._callbacks = this._callbacks || {};

	  function on() {
	    self.off(event, on);
	    fn.apply(this, arguments);
	  }

	  on.fn = fn;
	  this.on(event, on);
	  return this;
	};

	/**
	 * Remove the given callback for `event` or all
	 * registered callbacks.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.off =
	Emitter.prototype.removeListener =
	Emitter.prototype.removeAllListeners =
	Emitter.prototype.removeEventListener = function(event, fn){
	  this._callbacks = this._callbacks || {};

	  // all
	  if (0 == arguments.length) {
	    this._callbacks = {};
	    return this;
	  }

	  // specific event
	  var callbacks = this._callbacks[event];
	  if (!callbacks) return this;

	  // remove all handlers
	  if (1 == arguments.length) {
	    delete this._callbacks[event];
	    return this;
	  }

	  // remove specific handler
	  var cb;
	  for (var i = 0; i < callbacks.length; i++) {
	    cb = callbacks[i];
	    if (cb === fn || cb.fn === fn) {
	      callbacks.splice(i, 1);
	      break;
	    }
	  }
	  return this;
	};

	/**
	 * Emit `event` with the given args.
	 *
	 * @param {String} event
	 * @param {Mixed} ...
	 * @return {Emitter}
	 */

	Emitter.prototype.emit = function(event){
	  this._callbacks = this._callbacks || {};
	  var args = [].slice.call(arguments, 1)
	    , callbacks = this._callbacks[event];

	  if (callbacks) {
	    callbacks = callbacks.slice(0);
	    for (var i = 0, len = callbacks.length; i < len; ++i) {
	      callbacks[i].apply(this, args);
	    }
	  }

	  return this;
	};

	/**
	 * Return array of callbacks for `event`.
	 *
	 * @param {String} event
	 * @return {Array}
	 * @api public
	 */

	Emitter.prototype.listeners = function(event){
	  this._callbacks = this._callbacks || {};
	  return this._callbacks[event] || [];
	};

	/**
	 * Check if this emitter has `event` handlers.
	 *
	 * @param {String} event
	 * @return {Boolean}
	 * @api public
	 */

	Emitter.prototype.hasListeners = function(event){
	  return !! this.listeners(event).length;
	};


/***/ },
/* 276 */
/***/ function(module, exports) {

	
	/**
	 * Reduce `arr` with `fn`.
	 *
	 * @param {Array} arr
	 * @param {Function} fn
	 * @param {Mixed} initial
	 *
	 * TODO: combatible error handling?
	 */

	module.exports = function(arr, fn, initial){  
	  var idx = 0;
	  var len = arr.length;
	  var curr = arguments.length == 3
	    ? initial
	    : arr[idx++];

	  while (idx < len) {
	    curr = fn.call(null, curr, arr[idx], ++idx, arr);
	  }
	  
	  return curr;
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var Reflux = __webpack_require__(252);
	var Actions = __webpack_require__(251);
	var Cookies = __webpack_require__(97);

	var TOKEN = "token";
	var USER = "user";
	var LOGIN_TIME = "loginTime";
	var EMAIL = "email";

	var SessionStore = Reflux.createStore({

	  _data: {
	    id: null,
	    name: null,
	    created: null,
	    email: null,
	    loginError: null // {message: , resolution: }
	  },

	  init: function init() {
	    this._data.id = Cookies.get(TOKEN);
	    this._data.name = Cookies.get(USER);
	    this._data.created = Cookies.get(LOGIN_TIME);
	    this._data.email = Cookies.get(EMAIL);

	    this.listenTo(Actions.login.completed, this._onLoginCompleted);
	    this.listenTo(Actions.login.failed, this._onLoginFailed);
	    this.listenTo(Actions.logout, this._onLogout);
	  },

	  _onLoginCompleted: function _onLoginCompleted(username, id) {
	    this._data.id = id;
	    this._data.name = username;
	    this._data.created = new Date();
	    this._data.loginError = null;
	    if (username.indexOf('@') !== -1) {
	      this._data.email = username;
	    }
	    Cookies.set(TOKEN, this._data.id);
	    Cookies.set(USER, this._data.name);
	    Cookies.set(LOGIN_TIME, this._data.created);
	    Cookies.set(EMAIL, this._data.email);
	    this.trigger(this._data);
	  },

	  _onLoginFailed: function _onLoginFailed(error, response) {
	    this._data.loginError = {
	      message: response.message,
	      resolution: response.resolution
	    };
	    this.trigger(this._data);
	  },

	  _onLogout: function _onLogout() {
	    this._data.id = null;
	    this._data.name = null;
	    this._data.created = null;
	    this._data.email = null;
	    Cookies.remove(TOKEN);
	    Cookies.remove(USER);
	    Cookies.remove(LOGIN_TIME);
	    Cookies.remove(EMAIL);
	    this.trigger(this._data);
	  },

	  getInitialState: function getInitialState() {
	    return this._data;
	  }
	});

	module.exports = SessionStore;

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	var Rest = __webpack_require__(273);

	var RECONNECT_TIMEOUT = 5000; // 5s
	var POLL_TIMEOUT = 10000; // 10s

	var state = {
	  ws: null,
	  wsReady: false,
	  timer: null,
	  requests: [], // {message: , context: }
	  nextRequestId: 1,
	  initialized: false,
	  socketUrl: null
	};

	var RestWatch = {

	  _sendMessage: function _sendMessage(op, id, url, params) {
	    state.ws.send(JSON.stringify({
	      op: op,
	      id: id,
	      url: url,
	      params: params
	    }));
	  },

	  _onOpen: function _onOpen() {
	    state.wsReady = true;
	    // send any requests we have queued up
	    state.requests.forEach(function (request) {
	      this._sendMessage('start', request.id, request.url, request.params);
	    }, this);
	  },

	  _onError: function _onError(error) {
	    console.log('!!! RestWatch _onError TODO', error);
	  },

	  _onMessage: function _onMessage(event) {
	    var message = JSON.parse(event.data);
	    // Figure out which message this corresponds to so we
	    // know which action to deliver the response with.
	    state.requests.some(function (request) {
	      if (request.id === message.id) {
	        request.handler(message.result);
	      }
	    });
	  },

	  _onClose: function _onClose() {
	    // lost connection, retry in a bit
	    state.ws = null;
	    state.wsReady = false;
	    state.initialized = false;
	    state.timer = setTimeout(this.initialize.bind(this), RECONNECT_TIMEOUT);
	  },

	  _getREST: function _getREST(request) {
	    request.pollBusy = true;
	    Rest.get(request.url, request.params).end(function (err, res) {
	      if (err) {
	        throw err;
	      }

	      if (res.ok) {
	        request.handler(res.body);
	      }
	      request.pollBusy = false;
	    });
	  },

	  _poll: function _poll() {
	    state.requests.forEach(function (request) {
	      if (!request.pollBusy) {
	        this._getREST(request);
	      }
	    });
	  },

	  initialize: function initialize(socketUrl) {
	    if (!state.initialized && !state.ws && this.available() && (state.socketUrl || socketUrl)) {
	      state.socketUrl = state.socketUrl || socketUrl;
	      state.ws = new WebSocket(state.socketUrl);
	      state.ws.onopen = this._onOpen.bind(this);
	      state.ws.onerror = this._onError.bind(this);
	      state.ws.onmessage = this._onMessage.bind(this);
	      state.ws.onclose = this._onClose.bind(this);
	      state.initialized = true;
	    }
	  },

	  available: function available() {
	    return 'WebSocket' in window || 'MozWebSocket' in window;
	  },

	  start: function start(url, params, handler) {
	    this.initialize();
	    var request = {
	      id: state.nextRequestId,
	      url: url,
	      params: params,
	      handler: handler
	    };
	    state.nextRequestId += 1;
	    state.requests.push(request);

	    if (state.wsReady) {
	      this._sendMessage('start', request.id, request.url, request.params);
	    } else if (!this.available()) {
	      // no web sockets, fall back to polling
	      this._getREST(request);
	      clearTimeout(state.timer);
	      state.timer = setTimeout(this._poll.bind(this), POLL_TIMEOUT);
	    }
	    return request.id;
	  },

	  stop: function stop(requestId) {
	    state.requests = state.requests.filter(function (request) {
	      if (request.id === requestId) {
	        if (state.wsReady) {
	          this._sendMessage('stop', request.id);
	        }
	      } else {
	        return true;
	      }
	    }, this);
	  }
	};

	module.exports = RestWatch;

/***/ },
/* 279 */
/***/ function(module, exports) {

	// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

	'use strict';

	module.exports = {
	  validate: function validate(rules) {
	    var result = {
	      valid: true,
	      errors: {},
	      firstError: null
	    };

	    rules.forEach(function (rule) {
	      if (rule.hasOwnProperty('test')) {
	        if (rule.test) {
	          result.errors[rule.field] = rule.message;
	          result.valid = false;
	          result.firstError = result.firstError || rule.field;
	        }
	      } else if (rule.hasOwnProperty('tests')) {
	        rule.tests.some(function (test) {
	          if (test.test) {
	            result.errors[rule.field] = test.message;
	            result.valid = false;
	            result.firstError = result.firstError || rule.field;
	            return true;
	          }
	        });
	      }
	    });

	    return result;
	  }
	};

/***/ }
/******/ ]);